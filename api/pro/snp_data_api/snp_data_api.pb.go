// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pro/snp_data_api.proto

package snp_data_api

import (
	response_model "github.com/Alexander272/sealur_proto/api/pro/models/response_model"
	snp_data_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_data_model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string standardId = 1;
	TypeId string `protobuf:"bytes,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
}

func (x *GetSnpData) Reset() {
	*x = GetSnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_snp_data_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnpData) ProtoMessage() {}

func (x *GetSnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_snp_data_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnpData.ProtoReflect.Descriptor instead.
func (*GetSnpData) Descriptor() ([]byte, []int) {
	return file_pro_snp_data_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetSnpData) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

type CreateSnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId       string `protobuf:"bytes,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
	StandardId   string `protobuf:"bytes,2,opt,name=standardId,proto3" json:"standardId,omitempty"`
	HasInnerRing bool   `protobuf:"varint,3,opt,name=hasInnerRing,proto3" json:"hasInnerRing,omitempty"`
	HasFrame     bool   `protobuf:"varint,4,opt,name=hasFrame,proto3" json:"hasFrame,omitempty"`
	HasOuterRing bool   `protobuf:"varint,5,opt,name=hasOuterRing,proto3" json:"hasOuterRing,omitempty"`
	HasHole      bool   `protobuf:"varint,6,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	HasJumper    bool   `protobuf:"varint,7,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	HasMounting  bool   `protobuf:"varint,8,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
}

func (x *CreateSnpData) Reset() {
	*x = CreateSnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_snp_data_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnpData) ProtoMessage() {}

func (x *CreateSnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_snp_data_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnpData.ProtoReflect.Descriptor instead.
func (*CreateSnpData) Descriptor() ([]byte, []int) {
	return file_pro_snp_data_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSnpData) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *CreateSnpData) GetStandardId() string {
	if x != nil {
		return x.StandardId
	}
	return ""
}

func (x *CreateSnpData) GetHasInnerRing() bool {
	if x != nil {
		return x.HasInnerRing
	}
	return false
}

func (x *CreateSnpData) GetHasFrame() bool {
	if x != nil {
		return x.HasFrame
	}
	return false
}

func (x *CreateSnpData) GetHasOuterRing() bool {
	if x != nil {
		return x.HasOuterRing
	}
	return false
}

func (x *CreateSnpData) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *CreateSnpData) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *CreateSnpData) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

type UpdateSnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId       string `protobuf:"bytes,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	StandardId   string `protobuf:"bytes,3,opt,name=standardId,proto3" json:"standardId,omitempty"`
	HasInnerRing bool   `protobuf:"varint,4,opt,name=hasInnerRing,proto3" json:"hasInnerRing,omitempty"`
	HasFrame     bool   `protobuf:"varint,5,opt,name=hasFrame,proto3" json:"hasFrame,omitempty"`
	HasOuterRing bool   `protobuf:"varint,6,opt,name=hasOuterRing,proto3" json:"hasOuterRing,omitempty"`
	HasHole      bool   `protobuf:"varint,7,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	HasJumper    bool   `protobuf:"varint,8,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	HasMounting  bool   `protobuf:"varint,9,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
}

func (x *UpdateSnpData) Reset() {
	*x = UpdateSnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_snp_data_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSnpData) ProtoMessage() {}

func (x *UpdateSnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_snp_data_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSnpData.ProtoReflect.Descriptor instead.
func (*UpdateSnpData) Descriptor() ([]byte, []int) {
	return file_pro_snp_data_api_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSnpData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSnpData) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *UpdateSnpData) GetStandardId() string {
	if x != nil {
		return x.StandardId
	}
	return ""
}

func (x *UpdateSnpData) GetHasInnerRing() bool {
	if x != nil {
		return x.HasInnerRing
	}
	return false
}

func (x *UpdateSnpData) GetHasFrame() bool {
	if x != nil {
		return x.HasFrame
	}
	return false
}

func (x *UpdateSnpData) GetHasOuterRing() bool {
	if x != nil {
		return x.HasOuterRing
	}
	return false
}

func (x *UpdateSnpData) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *UpdateSnpData) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *UpdateSnpData) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

type DeleteSnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSnpData) Reset() {
	*x = DeleteSnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_snp_data_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSnpData) ProtoMessage() {}

func (x *DeleteSnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_snp_data_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSnpData.ProtoReflect.Descriptor instead.
func (*DeleteSnpData) Descriptor() ([]byte, []int) {
	return file_pro_snp_data_api_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteSnpData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snp *snp_data_model.SnpData `protobuf:"bytes,1,opt,name=snp,proto3" json:"snp,omitempty"`
}

func (x *SnpData) Reset() {
	*x = SnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_snp_data_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnpData) ProtoMessage() {}

func (x *SnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_snp_data_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnpData.ProtoReflect.Descriptor instead.
func (*SnpData) Descriptor() ([]byte, []int) {
	return file_pro_snp_data_api_proto_rawDescGZIP(), []int{4}
}

func (x *SnpData) GetSnp() *snp_data_model.SnpData {
	if x != nil {
		return x.Snp
	}
	return nil
}

var File_pro_snp_data_api_proto protoreflect.FileDescriptor

var file_pro_snp_data_api_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x6e, 0x70, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x85,
	0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x68, 0x61, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x61, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x68, 0x61, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x4f,
	0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x68, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d,
	0x70, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75,
	0x6d, 0x70, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x95, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x4f, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1f,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x34, 0x0a, 0x07, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x6e,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x03, 0x73, 0x6e, 0x70, 0x32, 0x8b, 0x02, 0x0a, 0x0e, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x18, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x15, 0x2e, 0x73, 0x6e, 0x70, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x6e, 0x70,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x6e,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x6e, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x2f, 0x73,
	0x6e, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pro_snp_data_api_proto_rawDescOnce sync.Once
	file_pro_snp_data_api_proto_rawDescData = file_pro_snp_data_api_proto_rawDesc
)

func file_pro_snp_data_api_proto_rawDescGZIP() []byte {
	file_pro_snp_data_api_proto_rawDescOnce.Do(func() {
		file_pro_snp_data_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pro_snp_data_api_proto_rawDescData)
	})
	return file_pro_snp_data_api_proto_rawDescData
}

var file_pro_snp_data_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pro_snp_data_api_proto_goTypes = []interface{}{
	(*GetSnpData)(nil),              // 0: snp_data_api.GetSnpData
	(*CreateSnpData)(nil),           // 1: snp_data_api.CreateSnpData
	(*UpdateSnpData)(nil),           // 2: snp_data_api.UpdateSnpData
	(*DeleteSnpData)(nil),           // 3: snp_data_api.DeleteSnpData
	(*SnpData)(nil),                 // 4: snp_data_api.SnpData
	(*snp_data_model.SnpData)(nil),  // 5: snp_data_model.SnpData
	(*response_model.Response)(nil), // 6: response_model.Response
}
var file_pro_snp_data_api_proto_depIdxs = []int32{
	5, // 0: snp_data_api.SnpData.snp:type_name -> snp_data_model.SnpData
	0, // 1: snp_data_api.SnpDataService.Get:input_type -> snp_data_api.GetSnpData
	1, // 2: snp_data_api.SnpDataService.Create:input_type -> snp_data_api.CreateSnpData
	2, // 3: snp_data_api.SnpDataService.Update:input_type -> snp_data_api.UpdateSnpData
	3, // 4: snp_data_api.SnpDataService.Delete:input_type -> snp_data_api.DeleteSnpData
	4, // 5: snp_data_api.SnpDataService.Get:output_type -> snp_data_api.SnpData
	6, // 6: snp_data_api.SnpDataService.Create:output_type -> response_model.Response
	6, // 7: snp_data_api.SnpDataService.Update:output_type -> response_model.Response
	6, // 8: snp_data_api.SnpDataService.Delete:output_type -> response_model.Response
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pro_snp_data_api_proto_init() }
func file_pro_snp_data_api_proto_init() {
	if File_pro_snp_data_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pro_snp_data_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_snp_data_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_snp_data_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_snp_data_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_snp_data_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pro_snp_data_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pro_snp_data_api_proto_goTypes,
		DependencyIndexes: file_pro_snp_data_api_proto_depIdxs,
		MessageInfos:      file_pro_snp_data_api_proto_msgTypes,
	}.Build()
	File_pro_snp_data_api_proto = out.File
	file_pro_snp_data_api_proto_rawDesc = nil
	file_pro_snp_data_api_proto_goTypes = nil
	file_pro_snp_data_api_proto_depIdxs = nil
}
