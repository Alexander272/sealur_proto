// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: pro/models/position_model.proto

package position_model

import (
	putg_configuration_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_configuration_model"
	putg_construction_type_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_construction_type_model"
	putg_filler_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_filler_model"
	putg_flange_type_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_flange_type_model"
	putg_material_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_material_model"
	putg_standard_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_standard_model"
	putg_type_model "github.com/Alexander272/sealur_proto/api/pro/models/putg_type_model"
	ring_construction_model "github.com/Alexander272/sealur_proto/api/pro/models/ring_construction_model"
	ring_density_model "github.com/Alexander272/sealur_proto/api/pro/models/ring_density_model"
	ring_type_model "github.com/Alexander272/sealur_proto/api/pro/models/ring_type_model"
	snp_filler_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_filler_model"
	snp_material_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_material_model"
	snp_size_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_size_model"
	snp_standard_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_standard_model"
	snp_type_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_type_model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PositionType int32

const (
	PositionType_Snp      PositionType = 0
	PositionType_Putg     PositionType = 1
	PositionType_Putgm    PositionType = 2
	PositionType_Ring     PositionType = 3
	PositionType_RingsKit PositionType = 4
)

// Enum value maps for PositionType.
var (
	PositionType_name = map[int32]string{
		0: "Snp",
		1: "Putg",
		2: "Putgm",
		3: "Ring",
		4: "RingsKit",
	}
	PositionType_value = map[string]int32{
		"Snp":      0,
		"Putg":     1,
		"Putgm":    2,
		"Ring":     3,
		"RingsKit": 4,
	}
)

func (x PositionType) Enum() *PositionType {
	p := new(PositionType)
	*p = x
	return p
}

func (x PositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_pro_models_position_model_proto_enumTypes[0].Descriptor()
}

func (PositionType) Type() protoreflect.EnumType {
	return &file_pro_models_position_model_proto_enumTypes[0]
}

func (x PositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PositionType.Descriptor instead.
func (PositionType) EnumDescriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{0}
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Count   int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Title   string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Amount  string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Info    string `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Position) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *Position) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Position) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Position) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Position) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type FullPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId  string        `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Count    int64         `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Title    string        `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Amount   string        `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type     PositionType  `protobuf:"varint,6,opt,name=type,proto3,enum=position_model.PositionType" json:"type,omitempty"`
	Info     string        `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	SnpData  *PositionSnp  `protobuf:"bytes,8,opt,name=snpData,proto3" json:"snpData,omitempty"`
	PutgData *PositionPutg `protobuf:"bytes,9,opt,name=putgData,proto3" json:"putgData,omitempty"`
	RingData *PositionRing `protobuf:"bytes,10,opt,name=ringData,proto3" json:"ringData,omitempty"`
}

func (x *FullPosition) Reset() {
	*x = FullPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullPosition) ProtoMessage() {}

func (x *FullPosition) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullPosition.ProtoReflect.Descriptor instead.
func (*FullPosition) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{1}
}

func (x *FullPosition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullPosition) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *FullPosition) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *FullPosition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FullPosition) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FullPosition) GetType() PositionType {
	if x != nil {
		return x.Type
	}
	return PositionType_Snp
}

func (x *FullPosition) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *FullPosition) GetSnpData() *PositionSnp {
	if x != nil {
		return x.SnpData
	}
	return nil
}

func (x *FullPosition) GetPutgData() *PositionPutg {
	if x != nil {
		return x.PutgData
	}
	return nil
}

func (x *FullPosition) GetRingData() *PositionRing {
	if x != nil {
		return x.RingData
	}
	return nil
}

type OrderPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderId  string             `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	Count    int64              `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Title    string             `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Amount   string             `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type     string             `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	TypeCode PositionType       `protobuf:"varint,7,opt,name=typeCode,proto3,enum=position_model.PositionType" json:"typeCode,omitempty"`
	Info     string             `protobuf:"bytes,8,opt,name=info,proto3" json:"info,omitempty"`
	SnpData  *OrderPositionSnp  `protobuf:"bytes,9,opt,name=snpData,proto3" json:"snpData,omitempty"`
	PutgData *OrderPositionPutg `protobuf:"bytes,10,opt,name=putgData,proto3" json:"putgData,omitempty"`
	RingData *OrderPositionRing `protobuf:"bytes,11,opt,name=ringData,proto3" json:"ringData,omitempty"`
}

func (x *OrderPosition) Reset() {
	*x = OrderPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPosition) ProtoMessage() {}

func (x *OrderPosition) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPosition.ProtoReflect.Descriptor instead.
func (*OrderPosition) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{2}
}

func (x *OrderPosition) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPosition) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderPosition) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OrderPosition) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderPosition) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OrderPosition) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderPosition) GetTypeCode() PositionType {
	if x != nil {
		return x.TypeCode
	}
	return PositionType_Snp
}

func (x *OrderPosition) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *OrderPosition) GetSnpData() *OrderPositionSnp {
	if x != nil {
		return x.SnpData
	}
	return nil
}

func (x *OrderPosition) GetPutgData() *OrderPositionPutg {
	if x != nil {
		return x.PutgData
	}
	return nil
}

func (x *OrderPosition) GetRingData() *OrderPositionRing {
	if x != nil {
		return x.RingData
	}
	return nil
}

type PositionSnp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main     *PositionSnp_Main     `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Size     *PositionSnp_Size     `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Material *PositionSnp_Material `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Design   *PositionSnp_Design   `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`
}

func (x *PositionSnp) Reset() {
	*x = PositionSnp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionSnp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionSnp) ProtoMessage() {}

func (x *PositionSnp) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionSnp.ProtoReflect.Descriptor instead.
func (*PositionSnp) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{3}
}

func (x *PositionSnp) GetMain() *PositionSnp_Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *PositionSnp) GetSize() *PositionSnp_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *PositionSnp) GetMaterial() *PositionSnp_Material {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *PositionSnp) GetDesign() *PositionSnp_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

type OrderPositionSnp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main     *OrderPositionSnp_Main     `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Size     *OrderPositionSnp_Size     `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Material *OrderPositionSnp_Material `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Design   *OrderPositionSnp_Design   `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`
}

func (x *OrderPositionSnp) Reset() {
	*x = OrderPositionSnp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp) ProtoMessage() {}

func (x *OrderPositionSnp) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4}
}

func (x *OrderPositionSnp) GetMain() *OrderPositionSnp_Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *OrderPositionSnp) GetSize() *OrderPositionSnp_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *OrderPositionSnp) GetMaterial() *OrderPositionSnp_Material {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *OrderPositionSnp) GetDesign() *OrderPositionSnp_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

type PositionPutg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main     *PositionPutg_Main     `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Size     *PositionPutg_Size     `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Material *PositionPutg_Material `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Design   *PositionPutg_Design   `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`
}

func (x *PositionPutg) Reset() {
	*x = PositionPutg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionPutg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionPutg) ProtoMessage() {}

func (x *PositionPutg) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionPutg.ProtoReflect.Descriptor instead.
func (*PositionPutg) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{5}
}

func (x *PositionPutg) GetMain() *PositionPutg_Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *PositionPutg) GetSize() *PositionPutg_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *PositionPutg) GetMaterial() *PositionPutg_Material {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *PositionPutg) GetDesign() *PositionPutg_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

type OrderPositionPutg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Main     *OrderPositionPutg_Main     `protobuf:"bytes,1,opt,name=main,proto3" json:"main,omitempty"`
	Size     *OrderPositionPutg_Size     `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Material *OrderPositionPutg_Material `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
	Design   *OrderPositionPutg_Design   `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`
}

func (x *OrderPositionPutg) Reset() {
	*x = OrderPositionPutg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg) ProtoMessage() {}

func (x *OrderPositionPutg) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6}
}

func (x *OrderPositionPutg) GetMain() *OrderPositionPutg_Main {
	if x != nil {
		return x.Main
	}
	return nil
}

func (x *OrderPositionPutg) GetSize() *OrderPositionPutg_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *OrderPositionPutg) GetMaterial() *OrderPositionPutg_Material {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *OrderPositionPutg) GetDesign() *OrderPositionPutg_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

type PositionRing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId               string `protobuf:"bytes,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
	TypeCode             string `protobuf:"bytes,2,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	DensityId            string `protobuf:"bytes,3,opt,name=densityId,proto3" json:"densityId,omitempty"`
	DensityCode          string `protobuf:"bytes,4,opt,name=densityCode,proto3" json:"densityCode,omitempty"`
	ConstructionCode     string `protobuf:"bytes,5,opt,name=constructionCode,proto3" json:"constructionCode,omitempty"`
	ConstructionWRP      bool   `protobuf:"varint,6,opt,name=constructionWRP,proto3" json:"constructionWRP,omitempty"`
	ConstructionBaseCode string `protobuf:"bytes,7,opt,name=constructionBaseCode,proto3" json:"constructionBaseCode,omitempty"`
	Size                 string `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	Thickness            string `protobuf:"bytes,9,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Material             string `protobuf:"bytes,10,opt,name=material,proto3" json:"material,omitempty"`
	Modifying            string `protobuf:"bytes,11,opt,name=modifying,proto3" json:"modifying,omitempty"`
	Drawing              string `protobuf:"bytes,12,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *PositionRing) Reset() {
	*x = PositionRing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionRing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRing) ProtoMessage() {}

func (x *PositionRing) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRing.ProtoReflect.Descriptor instead.
func (*PositionRing) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{7}
}

func (x *PositionRing) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *PositionRing) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *PositionRing) GetDensityId() string {
	if x != nil {
		return x.DensityId
	}
	return ""
}

func (x *PositionRing) GetDensityCode() string {
	if x != nil {
		return x.DensityCode
	}
	return ""
}

func (x *PositionRing) GetConstructionCode() string {
	if x != nil {
		return x.ConstructionCode
	}
	return ""
}

func (x *PositionRing) GetConstructionWRP() bool {
	if x != nil {
		return x.ConstructionWRP
	}
	return false
}

func (x *PositionRing) GetConstructionBaseCode() string {
	if x != nil {
		return x.ConstructionBaseCode
	}
	return ""
}

func (x *PositionRing) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PositionRing) GetThickness() string {
	if x != nil {
		return x.Thickness
	}
	return ""
}

func (x *PositionRing) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *PositionRing) GetModifying() string {
	if x != nil {
		return x.Modifying
	}
	return ""
}

func (x *PositionRing) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type OrderPositionRing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId   string                                    `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	RingType     *ring_type_model.RingType                 `protobuf:"bytes,3,opt,name=ringType,proto3" json:"ringType,omitempty"`
	Density      *ring_density_model.RingDensity           `protobuf:"bytes,4,opt,name=density,proto3" json:"density,omitempty"`
	Construction *ring_construction_model.RingConstruction `protobuf:"bytes,5,opt,name=construction,proto3" json:"construction,omitempty"`
	Size         string                                    `protobuf:"bytes,6,opt,name=size,proto3" json:"size,omitempty"`
	Thickness    string                                    `protobuf:"bytes,7,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Material     string                                    `protobuf:"bytes,8,opt,name=material,proto3" json:"material,omitempty"`
	Modifying    string                                    `protobuf:"bytes,9,opt,name=modifying,proto3" json:"modifying,omitempty"`
	Drawing      string                                    `protobuf:"bytes,10,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *OrderPositionRing) Reset() {
	*x = OrderPositionRing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionRing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionRing) ProtoMessage() {}

func (x *OrderPositionRing) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionRing.ProtoReflect.Descriptor instead.
func (*OrderPositionRing) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{8}
}

func (x *OrderPositionRing) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionRing) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionRing) GetRingType() *ring_type_model.RingType {
	if x != nil {
		return x.RingType
	}
	return nil
}

func (x *OrderPositionRing) GetDensity() *ring_density_model.RingDensity {
	if x != nil {
		return x.Density
	}
	return nil
}

func (x *OrderPositionRing) GetConstruction() *ring_construction_model.RingConstruction {
	if x != nil {
		return x.Construction
	}
	return nil
}

func (x *OrderPositionRing) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *OrderPositionRing) GetThickness() string {
	if x != nil {
		return x.Thickness
	}
	return ""
}

func (x *OrderPositionRing) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *OrderPositionRing) GetModifying() string {
	if x != nil {
		return x.Modifying
	}
	return ""
}

func (x *OrderPositionRing) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type PositionSnp_Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnpStandardId   string `protobuf:"bytes,1,opt,name=snpStandardId,proto3" json:"snpStandardId,omitempty"`
	SnpTypeId       string `protobuf:"bytes,2,opt,name=snpTypeId,proto3" json:"snpTypeId,omitempty"`
	FlangeTypeCode  string `protobuf:"bytes,3,opt,name=flangeTypeCode,proto3" json:"flangeTypeCode,omitempty"`
	FlangeTypeTitle string `protobuf:"bytes,4,opt,name=flangeTypeTitle,proto3" json:"flangeTypeTitle,omitempty"`
}

func (x *PositionSnp_Main) Reset() {
	*x = PositionSnp_Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionSnp_Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionSnp_Main) ProtoMessage() {}

func (x *PositionSnp_Main) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionSnp_Main.ProtoReflect.Descriptor instead.
func (*PositionSnp_Main) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PositionSnp_Main) GetSnpStandardId() string {
	if x != nil {
		return x.SnpStandardId
	}
	return ""
}

func (x *PositionSnp_Main) GetSnpTypeId() string {
	if x != nil {
		return x.SnpTypeId
	}
	return ""
}

func (x *PositionSnp_Main) GetFlangeTypeCode() string {
	if x != nil {
		return x.FlangeTypeCode
	}
	return ""
}

func (x *PositionSnp_Main) GetFlangeTypeTitle() string {
	if x != nil {
		return x.FlangeTypeTitle
	}
	return ""
}

type PositionSnp_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dn      string             `protobuf:"bytes,1,opt,name=dn,proto3" json:"dn,omitempty"`
	DnMm    string             `protobuf:"bytes,2,opt,name=dnMm,proto3" json:"dnMm,omitempty"`
	Pn      *snp_size_model.Pn `protobuf:"bytes,3,opt,name=pn,proto3" json:"pn,omitempty"`
	D4      string             `protobuf:"bytes,4,opt,name=d4,proto3" json:"d4,omitempty"`
	D3      string             `protobuf:"bytes,5,opt,name=d3,proto3" json:"d3,omitempty"`
	D2      string             `protobuf:"bytes,6,opt,name=d2,proto3" json:"d2,omitempty"`
	D1      string             `protobuf:"bytes,7,opt,name=d1,proto3" json:"d1,omitempty"`
	H       string             `protobuf:"bytes,8,opt,name=h,proto3" json:"h,omitempty"`
	S2      string             `protobuf:"bytes,9,opt,name=s2,proto3" json:"s2,omitempty"`
	S3      string             `protobuf:"bytes,10,opt,name=s3,proto3" json:"s3,omitempty"`
	Another string             `protobuf:"bytes,11,opt,name=another,proto3" json:"another,omitempty"`
}

func (x *PositionSnp_Size) Reset() {
	*x = PositionSnp_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionSnp_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionSnp_Size) ProtoMessage() {}

func (x *PositionSnp_Size) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionSnp_Size.ProtoReflect.Descriptor instead.
func (*PositionSnp_Size) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PositionSnp_Size) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *PositionSnp_Size) GetDnMm() string {
	if x != nil {
		return x.DnMm
	}
	return ""
}

func (x *PositionSnp_Size) GetPn() *snp_size_model.Pn {
	if x != nil {
		return x.Pn
	}
	return nil
}

func (x *PositionSnp_Size) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *PositionSnp_Size) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *PositionSnp_Size) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *PositionSnp_Size) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *PositionSnp_Size) GetH() string {
	if x != nil {
		return x.H
	}
	return ""
}

func (x *PositionSnp_Size) GetS2() string {
	if x != nil {
		return x.S2
	}
	return ""
}

func (x *PositionSnp_Size) GetS3() string {
	if x != nil {
		return x.S3
	}
	return ""
}

func (x *PositionSnp_Size) GetAnother() string {
	if x != nil {
		return x.Another
	}
	return ""
}

type PositionSnp_Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FillerId       string `protobuf:"bytes,1,opt,name=fillerId,proto3" json:"fillerId,omitempty"`
	InnerRingId    string `protobuf:"bytes,2,opt,name=innerRingId,proto3" json:"innerRingId,omitempty"`
	OuterRingId    string `protobuf:"bytes,3,opt,name=outerRingId,proto3" json:"outerRingId,omitempty"`
	FrameId        string `protobuf:"bytes,4,opt,name=frameId,proto3" json:"frameId,omitempty"`
	FillerCode     string `protobuf:"bytes,5,opt,name=fillerCode,proto3" json:"fillerCode,omitempty"`
	InnerRingCode  string `protobuf:"bytes,6,opt,name=innerRingCode,proto3" json:"innerRingCode,omitempty"`
	OuterRingCode  string `protobuf:"bytes,7,opt,name=outerRingCode,proto3" json:"outerRingCode,omitempty"`
	FrameCode      string `protobuf:"bytes,8,opt,name=frameCode,proto3" json:"frameCode,omitempty"`
	FrameTitle     string `protobuf:"bytes,9,opt,name=frameTitle,proto3" json:"frameTitle,omitempty"`
	InnerRingTitle string `protobuf:"bytes,10,opt,name=innerRingTitle,proto3" json:"innerRingTitle,omitempty"`
	OuterRingTitle string `protobuf:"bytes,11,opt,name=outerRingTitle,proto3" json:"outerRingTitle,omitempty"`
}

func (x *PositionSnp_Material) Reset() {
	*x = PositionSnp_Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionSnp_Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionSnp_Material) ProtoMessage() {}

func (x *PositionSnp_Material) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionSnp_Material.ProtoReflect.Descriptor instead.
func (*PositionSnp_Material) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{3, 2}
}

func (x *PositionSnp_Material) GetFillerId() string {
	if x != nil {
		return x.FillerId
	}
	return ""
}

func (x *PositionSnp_Material) GetInnerRingId() string {
	if x != nil {
		return x.InnerRingId
	}
	return ""
}

func (x *PositionSnp_Material) GetOuterRingId() string {
	if x != nil {
		return x.OuterRingId
	}
	return ""
}

func (x *PositionSnp_Material) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *PositionSnp_Material) GetFillerCode() string {
	if x != nil {
		return x.FillerCode
	}
	return ""
}

func (x *PositionSnp_Material) GetInnerRingCode() string {
	if x != nil {
		return x.InnerRingCode
	}
	return ""
}

func (x *PositionSnp_Material) GetOuterRingCode() string {
	if x != nil {
		return x.OuterRingCode
	}
	return ""
}

func (x *PositionSnp_Material) GetFrameCode() string {
	if x != nil {
		return x.FrameCode
	}
	return ""
}

func (x *PositionSnp_Material) GetFrameTitle() string {
	if x != nil {
		return x.FrameTitle
	}
	return ""
}

func (x *PositionSnp_Material) GetInnerRingTitle() string {
	if x != nil {
		return x.InnerRingTitle
	}
	return ""
}

func (x *PositionSnp_Material) GetOuterRingTitle() string {
	if x != nil {
		return x.OuterRingTitle
	}
	return ""
}

type PositionSnp_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasJumper    bool   `protobuf:"varint,1,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	JumperCode   string `protobuf:"bytes,2,opt,name=jumperCode,proto3" json:"jumperCode,omitempty"`
	JumperWidth  string `protobuf:"bytes,3,opt,name=jumperWidth,proto3" json:"jumperWidth,omitempty"`
	HasHole      bool   `protobuf:"varint,4,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	HasMounting  bool   `protobuf:"varint,5,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
	MountingCode string `protobuf:"bytes,6,opt,name=mountingCode,proto3" json:"mountingCode,omitempty"`
	Drawing      string `protobuf:"bytes,7,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *PositionSnp_Design) Reset() {
	*x = PositionSnp_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionSnp_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionSnp_Design) ProtoMessage() {}

func (x *PositionSnp_Design) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionSnp_Design.ProtoReflect.Descriptor instead.
func (*PositionSnp_Design) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{3, 3}
}

func (x *PositionSnp_Design) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *PositionSnp_Design) GetJumperCode() string {
	if x != nil {
		return x.JumperCode
	}
	return ""
}

func (x *PositionSnp_Design) GetJumperWidth() string {
	if x != nil {
		return x.JumperWidth
	}
	return ""
}

func (x *PositionSnp_Design) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *PositionSnp_Design) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

func (x *PositionSnp_Design) GetMountingCode() string {
	if x != nil {
		return x.MountingCode
	}
	return ""
}

func (x *PositionSnp_Design) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type OrderPositionSnp_Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId      string                          `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	SnpStandardId   string                          `protobuf:"bytes,3,opt,name=snpStandardId,proto3" json:"snpStandardId,omitempty"`
	SnpTypeId       string                          `protobuf:"bytes,4,opt,name=snpTypeId,proto3" json:"snpTypeId,omitempty"`
	FlangeTypeCode  string                          `protobuf:"bytes,5,opt,name=flangeTypeCode,proto3" json:"flangeTypeCode,omitempty"`
	FlangeTypeTitle string                          `protobuf:"bytes,6,opt,name=flangeTypeTitle,proto3" json:"flangeTypeTitle,omitempty"`
	SnpStandard     *snp_standard_model.SnpStandard `protobuf:"bytes,7,opt,name=snpStandard,proto3" json:"snpStandard,omitempty"`
	SnpType         *snp_type_model.SnpType         `protobuf:"bytes,8,opt,name=snpType,proto3" json:"snpType,omitempty"`
}

func (x *OrderPositionSnp_Main) Reset() {
	*x = OrderPositionSnp_Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Main) ProtoMessage() {}

func (x *OrderPositionSnp_Main) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Main.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Main) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 0}
}

func (x *OrderPositionSnp_Main) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetSnpStandardId() string {
	if x != nil {
		return x.SnpStandardId
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetSnpTypeId() string {
	if x != nil {
		return x.SnpTypeId
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetFlangeTypeCode() string {
	if x != nil {
		return x.FlangeTypeCode
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetFlangeTypeTitle() string {
	if x != nil {
		return x.FlangeTypeTitle
	}
	return ""
}

func (x *OrderPositionSnp_Main) GetSnpStandard() *snp_standard_model.SnpStandard {
	if x != nil {
		return x.SnpStandard
	}
	return nil
}

func (x *OrderPositionSnp_Main) GetSnpType() *snp_type_model.SnpType {
	if x != nil {
		return x.SnpType
	}
	return nil
}

type OrderPositionSnp_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId string             `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Dn         string             `protobuf:"bytes,3,opt,name=dn,proto3" json:"dn,omitempty"`
	DnMm       string             `protobuf:"bytes,4,opt,name=dnMm,proto3" json:"dnMm,omitempty"`
	Pn         *snp_size_model.Pn `protobuf:"bytes,5,opt,name=pn,proto3" json:"pn,omitempty"`
	D4         string             `protobuf:"bytes,6,opt,name=d4,proto3" json:"d4,omitempty"`
	D3         string             `protobuf:"bytes,7,opt,name=d3,proto3" json:"d3,omitempty"`
	D2         string             `protobuf:"bytes,8,opt,name=d2,proto3" json:"d2,omitempty"`
	D1         string             `protobuf:"bytes,9,opt,name=d1,proto3" json:"d1,omitempty"`
	H          string             `protobuf:"bytes,10,opt,name=h,proto3" json:"h,omitempty"`
	S2         string             `protobuf:"bytes,11,opt,name=s2,proto3" json:"s2,omitempty"`
	S3         string             `protobuf:"bytes,12,opt,name=s3,proto3" json:"s3,omitempty"`
	Another    string             `protobuf:"bytes,13,opt,name=another,proto3" json:"another,omitempty"`
}

func (x *OrderPositionSnp_Size) Reset() {
	*x = OrderPositionSnp_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Size) ProtoMessage() {}

func (x *OrderPositionSnp_Size) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Size.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Size) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 1}
}

func (x *OrderPositionSnp_Size) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetDnMm() string {
	if x != nil {
		return x.DnMm
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetPn() *snp_size_model.Pn {
	if x != nil {
		return x.Pn
	}
	return nil
}

func (x *OrderPositionSnp_Size) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetH() string {
	if x != nil {
		return x.H
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetS2() string {
	if x != nil {
		return x.S2
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetS3() string {
	if x != nil {
		return x.S3
	}
	return ""
}

func (x *OrderPositionSnp_Size) GetAnother() string {
	if x != nil {
		return x.Another
	}
	return ""
}

type OrderPositionSnp_Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId string                       `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Filler     *snp_filler_model.SnpFiller  `protobuf:"bytes,3,opt,name=filler,proto3" json:"filler,omitempty"`
	Frame      *snp_material_model.Material `protobuf:"bytes,4,opt,name=frame,proto3" json:"frame,omitempty"`
	InnerRing  *snp_material_model.Material `protobuf:"bytes,5,opt,name=innerRing,proto3" json:"innerRing,omitempty"`
	OuterRing  *snp_material_model.Material `protobuf:"bytes,6,opt,name=outerRing,proto3" json:"outerRing,omitempty"`
}

func (x *OrderPositionSnp_Material) Reset() {
	*x = OrderPositionSnp_Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Material) ProtoMessage() {}

func (x *OrderPositionSnp_Material) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Material.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Material) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 2}
}

func (x *OrderPositionSnp_Material) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionSnp_Material) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionSnp_Material) GetFiller() *snp_filler_model.SnpFiller {
	if x != nil {
		return x.Filler
	}
	return nil
}

func (x *OrderPositionSnp_Material) GetFrame() *snp_material_model.Material {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *OrderPositionSnp_Material) GetInnerRing() *snp_material_model.Material {
	if x != nil {
		return x.InnerRing
	}
	return nil
}

func (x *OrderPositionSnp_Material) GetOuterRing() *snp_material_model.Material {
	if x != nil {
		return x.OuterRing
	}
	return nil
}

type OrderPositionSnp_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId string                            `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Jumper     *OrderPositionSnp_Design_Jumper   `protobuf:"bytes,3,opt,name=jumper,proto3" json:"jumper,omitempty"`
	HasHole    bool                              `protobuf:"varint,4,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	Mounting   *OrderPositionSnp_Design_Mounting `protobuf:"bytes,5,opt,name=mounting,proto3" json:"mounting,omitempty"`
	Drawing    string                            `protobuf:"bytes,6,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *OrderPositionSnp_Design) Reset() {
	*x = OrderPositionSnp_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Design) ProtoMessage() {}

func (x *OrderPositionSnp_Design) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Design.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Design) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 3}
}

func (x *OrderPositionSnp_Design) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionSnp_Design) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionSnp_Design) GetJumper() *OrderPositionSnp_Design_Jumper {
	if x != nil {
		return x.Jumper
	}
	return nil
}

func (x *OrderPositionSnp_Design) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *OrderPositionSnp_Design) GetMounting() *OrderPositionSnp_Design_Mounting {
	if x != nil {
		return x.Mounting
	}
	return nil
}

func (x *OrderPositionSnp_Design) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type OrderPositionSnp_Design_Jumper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasJumper bool   `protobuf:"varint,1,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Width     string `protobuf:"bytes,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *OrderPositionSnp_Design_Jumper) Reset() {
	*x = OrderPositionSnp_Design_Jumper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Design_Jumper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Design_Jumper) ProtoMessage() {}

func (x *OrderPositionSnp_Design_Jumper) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Design_Jumper.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Design_Jumper) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 3, 0}
}

func (x *OrderPositionSnp_Design_Jumper) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *OrderPositionSnp_Design_Jumper) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderPositionSnp_Design_Jumper) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

type OrderPositionSnp_Design_Mounting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMounting bool   `protobuf:"varint,1,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *OrderPositionSnp_Design_Mounting) Reset() {
	*x = OrderPositionSnp_Design_Mounting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionSnp_Design_Mounting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionSnp_Design_Mounting) ProtoMessage() {}

func (x *OrderPositionSnp_Design_Mounting) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionSnp_Design_Mounting.ProtoReflect.Descriptor instead.
func (*OrderPositionSnp_Design_Mounting) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{4, 3, 1}
}

func (x *OrderPositionSnp_Design_Mounting) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

func (x *OrderPositionSnp_Design_Mounting) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type PositionPutg_Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PutgStandardId    string `protobuf:"bytes,1,opt,name=putgStandardId,proto3" json:"putgStandardId,omitempty"`
	FlangeTypeId      string `protobuf:"bytes,2,opt,name=flangeTypeId,proto3" json:"flangeTypeId,omitempty"`
	ConfigurationId   string `protobuf:"bytes,3,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	ConfigurationCode string `protobuf:"bytes,4,opt,name=configurationCode,proto3" json:"configurationCode,omitempty"`
}

func (x *PositionPutg_Main) Reset() {
	*x = PositionPutg_Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionPutg_Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionPutg_Main) ProtoMessage() {}

func (x *PositionPutg_Main) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionPutg_Main.ProtoReflect.Descriptor instead.
func (*PositionPutg_Main) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PositionPutg_Main) GetPutgStandardId() string {
	if x != nil {
		return x.PutgStandardId
	}
	return ""
}

func (x *PositionPutg_Main) GetFlangeTypeId() string {
	if x != nil {
		return x.FlangeTypeId
	}
	return ""
}

func (x *PositionPutg_Main) GetConfigurationId() string {
	if x != nil {
		return x.ConfigurationId
	}
	return ""
}

func (x *PositionPutg_Main) GetConfigurationCode() string {
	if x != nil {
		return x.ConfigurationCode
	}
	return ""
}

type PositionPutg_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dn            string             `protobuf:"bytes,1,opt,name=dn,proto3" json:"dn,omitempty"`
	DnMm          string             `protobuf:"bytes,2,opt,name=dnMm,proto3" json:"dnMm,omitempty"`
	Pn            *snp_size_model.Pn `protobuf:"bytes,3,opt,name=pn,proto3" json:"pn,omitempty"`
	D4            string             `protobuf:"bytes,4,opt,name=d4,proto3" json:"d4,omitempty"`
	D3            string             `protobuf:"bytes,5,opt,name=d3,proto3" json:"d3,omitempty"`
	D2            string             `protobuf:"bytes,6,opt,name=d2,proto3" json:"d2,omitempty"`
	D1            string             `protobuf:"bytes,7,opt,name=d1,proto3" json:"d1,omitempty"`
	H             string             `protobuf:"bytes,8,opt,name=h,proto3" json:"h,omitempty"`
	Another       string             `protobuf:"bytes,9,opt,name=another,proto3" json:"another,omitempty"`
	UseDimensions bool               `protobuf:"varint,10,opt,name=useDimensions,proto3" json:"useDimensions,omitempty"`
	HasRounding   bool               `protobuf:"varint,11,opt,name=hasRounding,proto3" json:"hasRounding,omitempty"`
}

func (x *PositionPutg_Size) Reset() {
	*x = PositionPutg_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionPutg_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionPutg_Size) ProtoMessage() {}

func (x *PositionPutg_Size) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionPutg_Size.ProtoReflect.Descriptor instead.
func (*PositionPutg_Size) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{5, 1}
}

func (x *PositionPutg_Size) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *PositionPutg_Size) GetDnMm() string {
	if x != nil {
		return x.DnMm
	}
	return ""
}

func (x *PositionPutg_Size) GetPn() *snp_size_model.Pn {
	if x != nil {
		return x.Pn
	}
	return nil
}

func (x *PositionPutg_Size) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *PositionPutg_Size) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *PositionPutg_Size) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *PositionPutg_Size) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *PositionPutg_Size) GetH() string {
	if x != nil {
		return x.H
	}
	return ""
}

func (x *PositionPutg_Size) GetAnother() string {
	if x != nil {
		return x.Another
	}
	return ""
}

func (x *PositionPutg_Size) GetUseDimensions() bool {
	if x != nil {
		return x.UseDimensions
	}
	return false
}

func (x *PositionPutg_Size) GetHasRounding() bool {
	if x != nil {
		return x.HasRounding
	}
	return false
}

type PositionPutg_Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FillerId         string `protobuf:"bytes,1,opt,name=fillerId,proto3" json:"fillerId,omitempty"`
	FillerCode       string `protobuf:"bytes,2,opt,name=fillerCode,proto3" json:"fillerCode,omitempty"`
	TypeId           string `protobuf:"bytes,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	TypeCode         string `protobuf:"bytes,4,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	ConstructionId   string `protobuf:"bytes,5,opt,name=constructionId,proto3" json:"constructionId,omitempty"`
	ConstructionCode string `protobuf:"bytes,6,opt,name=constructionCode,proto3" json:"constructionCode,omitempty"`
	RotaryPlugId     string `protobuf:"bytes,7,opt,name=rotaryPlugId,proto3" json:"rotaryPlugId,omitempty"`
	RotaryPlugCode   string `protobuf:"bytes,8,opt,name=rotaryPlugCode,proto3" json:"rotaryPlugCode,omitempty"`
	InnerRingId      string `protobuf:"bytes,9,opt,name=innerRingId,proto3" json:"innerRingId,omitempty"`
	InnerRindCode    string `protobuf:"bytes,10,opt,name=innerRindCode,proto3" json:"innerRindCode,omitempty"`
	OuterRingId      string `protobuf:"bytes,11,opt,name=outerRingId,proto3" json:"outerRingId,omitempty"`
	OuterRingCode    string `protobuf:"bytes,12,opt,name=outerRingCode,proto3" json:"outerRingCode,omitempty"`
	RotaryPlugTitle  string `protobuf:"bytes,13,opt,name=rotaryPlugTitle,proto3" json:"rotaryPlugTitle,omitempty"`
	InnerRingTitle   string `protobuf:"bytes,14,opt,name=innerRingTitle,proto3" json:"innerRingTitle,omitempty"`
	OuterRingTitle   string `protobuf:"bytes,15,opt,name=outerRingTitle,proto3" json:"outerRingTitle,omitempty"`
}

func (x *PositionPutg_Material) Reset() {
	*x = PositionPutg_Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionPutg_Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionPutg_Material) ProtoMessage() {}

func (x *PositionPutg_Material) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionPutg_Material.ProtoReflect.Descriptor instead.
func (*PositionPutg_Material) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{5, 2}
}

func (x *PositionPutg_Material) GetFillerId() string {
	if x != nil {
		return x.FillerId
	}
	return ""
}

func (x *PositionPutg_Material) GetFillerCode() string {
	if x != nil {
		return x.FillerCode
	}
	return ""
}

func (x *PositionPutg_Material) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *PositionPutg_Material) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *PositionPutg_Material) GetConstructionId() string {
	if x != nil {
		return x.ConstructionId
	}
	return ""
}

func (x *PositionPutg_Material) GetConstructionCode() string {
	if x != nil {
		return x.ConstructionCode
	}
	return ""
}

func (x *PositionPutg_Material) GetRotaryPlugId() string {
	if x != nil {
		return x.RotaryPlugId
	}
	return ""
}

func (x *PositionPutg_Material) GetRotaryPlugCode() string {
	if x != nil {
		return x.RotaryPlugCode
	}
	return ""
}

func (x *PositionPutg_Material) GetInnerRingId() string {
	if x != nil {
		return x.InnerRingId
	}
	return ""
}

func (x *PositionPutg_Material) GetInnerRindCode() string {
	if x != nil {
		return x.InnerRindCode
	}
	return ""
}

func (x *PositionPutg_Material) GetOuterRingId() string {
	if x != nil {
		return x.OuterRingId
	}
	return ""
}

func (x *PositionPutg_Material) GetOuterRingCode() string {
	if x != nil {
		return x.OuterRingCode
	}
	return ""
}

func (x *PositionPutg_Material) GetRotaryPlugTitle() string {
	if x != nil {
		return x.RotaryPlugTitle
	}
	return ""
}

func (x *PositionPutg_Material) GetInnerRingTitle() string {
	if x != nil {
		return x.InnerRingTitle
	}
	return ""
}

func (x *PositionPutg_Material) GetOuterRingTitle() string {
	if x != nil {
		return x.OuterRingTitle
	}
	return ""
}

type PositionPutg_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasJumper    bool   `protobuf:"varint,1,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	JumperCode   string `protobuf:"bytes,2,opt,name=jumperCode,proto3" json:"jumperCode,omitempty"`
	JumperWidth  string `protobuf:"bytes,3,opt,name=jumperWidth,proto3" json:"jumperWidth,omitempty"`
	HasHole      bool   `protobuf:"varint,4,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	HasCoating   bool   `protobuf:"varint,5,opt,name=hasCoating,proto3" json:"hasCoating,omitempty"`
	HasRemovable bool   `protobuf:"varint,6,opt,name=hasRemovable,proto3" json:"hasRemovable,omitempty"`
	HasMounting  bool   `protobuf:"varint,7,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
	MountingCode string `protobuf:"bytes,8,opt,name=mountingCode,proto3" json:"mountingCode,omitempty"`
	Drawing      string `protobuf:"bytes,9,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *PositionPutg_Design) Reset() {
	*x = PositionPutg_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionPutg_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionPutg_Design) ProtoMessage() {}

func (x *PositionPutg_Design) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionPutg_Design.ProtoReflect.Descriptor instead.
func (*PositionPutg_Design) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{5, 3}
}

func (x *PositionPutg_Design) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *PositionPutg_Design) GetJumperCode() string {
	if x != nil {
		return x.JumperCode
	}
	return ""
}

func (x *PositionPutg_Design) GetJumperWidth() string {
	if x != nil {
		return x.JumperWidth
	}
	return ""
}

func (x *PositionPutg_Design) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *PositionPutg_Design) GetHasCoating() bool {
	if x != nil {
		return x.HasCoating
	}
	return false
}

func (x *PositionPutg_Design) GetHasRemovable() bool {
	if x != nil {
		return x.HasRemovable
	}
	return false
}

func (x *PositionPutg_Design) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

func (x *PositionPutg_Design) GetMountingCode() string {
	if x != nil {
		return x.MountingCode
	}
	return ""
}

func (x *PositionPutg_Design) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type OrderPositionPutg_Main struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId    string                                      `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Standard      *putg_standard_model.PutgStandard           `protobuf:"bytes,3,opt,name=standard,proto3" json:"standard,omitempty"`
	FlangeType    *putg_flange_type_model.PutgFlangeType      `protobuf:"bytes,4,opt,name=flangeType,proto3" json:"flangeType,omitempty"`
	Configuration *putg_configuration_model.PutgConfiguration `protobuf:"bytes,5,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *OrderPositionPutg_Main) Reset() {
	*x = OrderPositionPutg_Main{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Main) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Main) ProtoMessage() {}

func (x *OrderPositionPutg_Main) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Main.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Main) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 0}
}

func (x *OrderPositionPutg_Main) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionPutg_Main) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionPutg_Main) GetStandard() *putg_standard_model.PutgStandard {
	if x != nil {
		return x.Standard
	}
	return nil
}

func (x *OrderPositionPutg_Main) GetFlangeType() *putg_flange_type_model.PutgFlangeType {
	if x != nil {
		return x.FlangeType
	}
	return nil
}

func (x *OrderPositionPutg_Main) GetConfiguration() *putg_configuration_model.PutgConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type OrderPositionPutg_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId    string             `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Dn            string             `protobuf:"bytes,3,opt,name=dn,proto3" json:"dn,omitempty"`
	DnMm          string             `protobuf:"bytes,4,opt,name=dnMm,proto3" json:"dnMm,omitempty"`
	Pn            *snp_size_model.Pn `protobuf:"bytes,5,opt,name=pn,proto3" json:"pn,omitempty"`
	D4            string             `protobuf:"bytes,6,opt,name=d4,proto3" json:"d4,omitempty"`
	D3            string             `protobuf:"bytes,7,opt,name=d3,proto3" json:"d3,omitempty"`
	D2            string             `protobuf:"bytes,8,opt,name=d2,proto3" json:"d2,omitempty"`
	D1            string             `protobuf:"bytes,9,opt,name=d1,proto3" json:"d1,omitempty"`
	H             string             `protobuf:"bytes,10,opt,name=h,proto3" json:"h,omitempty"`
	Another       string             `protobuf:"bytes,11,opt,name=another,proto3" json:"another,omitempty"`
	UseDimensions bool               `protobuf:"varint,12,opt,name=useDimensions,proto3" json:"useDimensions,omitempty"`
	HasRounding   bool               `protobuf:"varint,13,opt,name=hasRounding,proto3" json:"hasRounding,omitempty"`
}

func (x *OrderPositionPutg_Size) Reset() {
	*x = OrderPositionPutg_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Size) ProtoMessage() {}

func (x *OrderPositionPutg_Size) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Size.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Size) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 1}
}

func (x *OrderPositionPutg_Size) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetDn() string {
	if x != nil {
		return x.Dn
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetDnMm() string {
	if x != nil {
		return x.DnMm
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetPn() *snp_size_model.Pn {
	if x != nil {
		return x.Pn
	}
	return nil
}

func (x *OrderPositionPutg_Size) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetH() string {
	if x != nil {
		return x.H
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetAnother() string {
	if x != nil {
		return x.Another
	}
	return ""
}

func (x *OrderPositionPutg_Size) GetUseDimensions() bool {
	if x != nil {
		return x.UseDimensions
	}
	return false
}

func (x *OrderPositionPutg_Size) GetHasRounding() bool {
	if x != nil {
		return x.HasRounding
	}
	return false
}

type OrderPositionPutg_Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId   string                                         `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Filler       *putg_filler_model.PutgFiller                  `protobuf:"bytes,3,opt,name=filler,proto3" json:"filler,omitempty"`
	PutgType     *putg_type_model.PutgType                      `protobuf:"bytes,4,opt,name=putgType,proto3" json:"putgType,omitempty"`
	Construction *putg_construction_type_model.PutgConstruction `protobuf:"bytes,5,opt,name=construction,proto3" json:"construction,omitempty"`
	RotaryPlug   *putg_material_model.Material                  `protobuf:"bytes,6,opt,name=rotaryPlug,proto3" json:"rotaryPlug,omitempty"`
	InnerRing    *putg_material_model.Material                  `protobuf:"bytes,7,opt,name=innerRing,proto3" json:"innerRing,omitempty"`
	OuterRing    *putg_material_model.Material                  `protobuf:"bytes,8,opt,name=outerRing,proto3" json:"outerRing,omitempty"`
}

func (x *OrderPositionPutg_Material) Reset() {
	*x = OrderPositionPutg_Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Material) ProtoMessage() {}

func (x *OrderPositionPutg_Material) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Material.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Material) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 2}
}

func (x *OrderPositionPutg_Material) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionPutg_Material) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionPutg_Material) GetFiller() *putg_filler_model.PutgFiller {
	if x != nil {
		return x.Filler
	}
	return nil
}

func (x *OrderPositionPutg_Material) GetPutgType() *putg_type_model.PutgType {
	if x != nil {
		return x.PutgType
	}
	return nil
}

func (x *OrderPositionPutg_Material) GetConstruction() *putg_construction_type_model.PutgConstruction {
	if x != nil {
		return x.Construction
	}
	return nil
}

func (x *OrderPositionPutg_Material) GetRotaryPlug() *putg_material_model.Material {
	if x != nil {
		return x.RotaryPlug
	}
	return nil
}

func (x *OrderPositionPutg_Material) GetInnerRing() *putg_material_model.Material {
	if x != nil {
		return x.InnerRing
	}
	return nil
}

func (x *OrderPositionPutg_Material) GetOuterRing() *putg_material_model.Material {
	if x != nil {
		return x.OuterRing
	}
	return nil
}

type OrderPositionPutg_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PositionId   string                             `protobuf:"bytes,2,opt,name=positionId,proto3" json:"positionId,omitempty"`
	Jumper       *OrderPositionPutg_Design_Jumper   `protobuf:"bytes,3,opt,name=jumper,proto3" json:"jumper,omitempty"`
	HasHole      bool                               `protobuf:"varint,4,opt,name=hasHole,proto3" json:"hasHole,omitempty"`
	HasCoating   bool                               `protobuf:"varint,5,opt,name=hasCoating,proto3" json:"hasCoating,omitempty"`
	HasRemovable bool                               `protobuf:"varint,6,opt,name=hasRemovable,proto3" json:"hasRemovable,omitempty"`
	Mounting     *OrderPositionPutg_Design_Mounting `protobuf:"bytes,7,opt,name=mounting,proto3" json:"mounting,omitempty"`
	Drawing      string                             `protobuf:"bytes,8,opt,name=drawing,proto3" json:"drawing,omitempty"`
}

func (x *OrderPositionPutg_Design) Reset() {
	*x = OrderPositionPutg_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Design) ProtoMessage() {}

func (x *OrderPositionPutg_Design) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Design.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Design) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 3}
}

func (x *OrderPositionPutg_Design) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderPositionPutg_Design) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *OrderPositionPutg_Design) GetJumper() *OrderPositionPutg_Design_Jumper {
	if x != nil {
		return x.Jumper
	}
	return nil
}

func (x *OrderPositionPutg_Design) GetHasHole() bool {
	if x != nil {
		return x.HasHole
	}
	return false
}

func (x *OrderPositionPutg_Design) GetHasCoating() bool {
	if x != nil {
		return x.HasCoating
	}
	return false
}

func (x *OrderPositionPutg_Design) GetHasRemovable() bool {
	if x != nil {
		return x.HasRemovable
	}
	return false
}

func (x *OrderPositionPutg_Design) GetMounting() *OrderPositionPutg_Design_Mounting {
	if x != nil {
		return x.Mounting
	}
	return nil
}

func (x *OrderPositionPutg_Design) GetDrawing() string {
	if x != nil {
		return x.Drawing
	}
	return ""
}

type OrderPositionPutg_Design_Jumper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasJumper bool   `protobuf:"varint,1,opt,name=hasJumper,proto3" json:"hasJumper,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Width     string `protobuf:"bytes,3,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *OrderPositionPutg_Design_Jumper) Reset() {
	*x = OrderPositionPutg_Design_Jumper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Design_Jumper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Design_Jumper) ProtoMessage() {}

func (x *OrderPositionPutg_Design_Jumper) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Design_Jumper.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Design_Jumper) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 3, 0}
}

func (x *OrderPositionPutg_Design_Jumper) GetHasJumper() bool {
	if x != nil {
		return x.HasJumper
	}
	return false
}

func (x *OrderPositionPutg_Design_Jumper) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderPositionPutg_Design_Jumper) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

type OrderPositionPutg_Design_Mounting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMounting bool   `protobuf:"varint,1,opt,name=hasMounting,proto3" json:"hasMounting,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *OrderPositionPutg_Design_Mounting) Reset() {
	*x = OrderPositionPutg_Design_Mounting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_position_model_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPositionPutg_Design_Mounting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPositionPutg_Design_Mounting) ProtoMessage() {}

func (x *OrderPositionPutg_Design_Mounting) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_position_model_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPositionPutg_Design_Mounting.ProtoReflect.Descriptor instead.
func (*OrderPositionPutg_Design_Mounting) Descriptor() ([]byte, []int) {
	return file_pro_models_position_model_proto_rawDescGZIP(), []int{6, 3, 1}
}

func (x *OrderPositionPutg_Design_Mounting) GetHasMounting() bool {
	if x != nil {
		return x.HasMounting
	}
	return false
}

func (x *OrderPositionPutg_Design_Mounting) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_pro_models_position_model_proto protoreflect.FileDescriptor

var file_pro_models_position_model_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e,
	0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73,
	0x6e, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72,
	0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x24, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x29, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70, 0x72, 0x6f, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2d, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x75, 0x74, 0x67,
	0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x70, 0x72,
	0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xed, 0x02, 0x0a, 0x0c, 0x46, 0x75, 0x6c, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x6e,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x52, 0x07, 0x73, 0x6e, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x75, 0x74, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74,
	0x67, 0x52, 0x08, 0x70, 0x75, 0x74, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x08, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x99, 0x03, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x07, 0x73, 0x6e, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x52, 0x07, 0x73, 0x6e, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x75, 0x74, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67, 0x52, 0x08, 0x70, 0x75, 0x74, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xd5, 0x09, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e,
	0x70, 0x12, 0x34, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x4d, 0x61, 0x69,
	0x6e, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6e, 0x70, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a,
	0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12,
	0x3a, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x1a, 0x9c, 0x01, 0x0a, 0x04,
	0x4d, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6e, 0x70,
	0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6e,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x6e, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0xd6, 0x01, 0x0a, 0x04, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x12, 0x22, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6e, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0c, 0x0a, 0x01, 0x68,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x32, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x33, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x1a, 0xfe, 0x02, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x1a, 0xe2, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73,
	0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x22, 0x95, 0x0c, 0x0a, 0x10, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x12, 0x39,
	0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x06, 0x64,
	0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x1a, 0xc2, 0x02, 0x0a,
	0x04, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6e, 0x70, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6e,
	0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x6e, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6e, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x73,
	0x6e, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x52, 0x0b, 0x73, 0x6e, 0x70, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x31,
	0x0a, 0x07, 0x73, 0x6e, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x6e, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73, 0x6e, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x86, 0x02, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6e,
	0x4d, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x12, 0x22,
	0x0a, 0x02, 0x70, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6e, 0x70,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6e, 0x52, 0x02,
	0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x33, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x31, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x68,
	0x12, 0x0e, 0x0a, 0x02, 0x73, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x32,
	0x12, 0x0e, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x33,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x1a, 0x9b, 0x02, 0x0a, 0x08, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70, 0x46, 0x69,
	0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6e,
	0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x3a, 0x0a, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x09,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x1a, 0x96, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x06, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x4a, 0x75, 0x6d,
	0x70, 0x65, 0x72, 0x52, 0x06, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x70, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x1a, 0x50, 0x0a,
	0x06, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75,
	0x6d, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a,
	0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a,
	0x40, 0x0a, 0x08, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xfa, 0x0b, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75,
	0x74, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67, 0x2e, 0x4d,
	0x61, 0x69, 0x6e, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x75, 0x74, 0x67, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67,
	0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74,
	0x67, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x1a, 0xaa, 0x01, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x74,
	0x67, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x75, 0x74, 0x67, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xfe, 0x01,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x12, 0x22, 0x0a, 0x02, 0x70, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6e, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x31, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0c,
	0x0a, 0x01, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x44, 0x69, 0x6d,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75,
	0x73, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0xa4,
	0x04, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x72, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75,
	0x67, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75,
	0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x74,
	0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x6f, 0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69,
	0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0xa6, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61,
	0x73, 0x43, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x68, 0x61, 0x73, 0x43, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61,
	0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x22, 0xf0,
	0x0d, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x75, 0x74, 0x67, 0x12, 0x3a, 0x0a, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x75, 0x74, 0x67, 0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6e,
	0x12, 0x3a, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74,
	0x67, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x46, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74,
	0x67, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x06,
	0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x1a, 0x90, 0x02, 0x0a, 0x04, 0x4d, 0x61, 0x69, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x3d, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x46,
	0x0a, 0x0a, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x66, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x70, 0x75, 0x74, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xae, 0x02, 0x0a, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x6e, 0x4d, 0x6d, 0x12, 0x22, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x50, 0x6e, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x34,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x33,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x32,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x31,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6e, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x44, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68,
	0x61, 0x73, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x1a, 0xb5, 0x03, 0x0a, 0x08, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67,
	0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x35,
	0x0a, 0x08, 0x70, 0x75, 0x74, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x75, 0x74, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x75, 0x74,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x75,
	0x74, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x67, 0x43,
	0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0a, 0x72, 0x6f, 0x74,
	0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x75, 0x74, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0a, 0x72, 0x6f,
	0x74, 0x61, 0x72, 0x79, 0x50, 0x6c, 0x75, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75,
	0x74, 0x67, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x75, 0x74, 0x67, 0x5f,
	0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x69,
	0x6e, 0x67, 0x1a, 0xdc, 0x03, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x47, 0x0a,
	0x06, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67,
	0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x52, 0x06,
	0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x48, 0x6f, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x74, 0x67, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e,
	0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x1a, 0x50, 0x0a,
	0x06, 0x4a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x4a, 0x75,
	0x6d, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4a,
	0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x1a,
	0x40, 0x0a, 0x08, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x92, 0x03, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x52, 0x50, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x52, 0x50, 0x12, 0x32, 0x0a, 0x14,
	0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x72, 0x61, 0x77, 0x69, 0x6e, 0x67, 0x22, 0x8a, 0x03, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x79, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x12, 0x4d,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x72, 0x61,
	0x77, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x72, 0x61, 0x77,
	0x69, 0x6e, 0x67, 0x2a, 0x44, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x6e, 0x70, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x75, 0x74, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x75, 0x74, 0x67, 0x6d, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x69, 0x6e, 0x67, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x69, 0x6e, 0x67, 0x73, 0x4b, 0x69, 0x74, 0x10, 0x04, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x65,
	0x72, 0x32, 0x37, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x6c, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pro_models_position_model_proto_rawDescOnce sync.Once
	file_pro_models_position_model_proto_rawDescData = file_pro_models_position_model_proto_rawDesc
)

func file_pro_models_position_model_proto_rawDescGZIP() []byte {
	file_pro_models_position_model_proto_rawDescOnce.Do(func() {
		file_pro_models_position_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_pro_models_position_model_proto_rawDescData)
	})
	return file_pro_models_position_model_proto_rawDescData
}

var file_pro_models_position_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pro_models_position_model_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_pro_models_position_model_proto_goTypes = []interface{}{
	(PositionType)(0),                                     // 0: position_model.PositionType
	(*Position)(nil),                                      // 1: position_model.Position
	(*FullPosition)(nil),                                  // 2: position_model.FullPosition
	(*OrderPosition)(nil),                                 // 3: position_model.OrderPosition
	(*PositionSnp)(nil),                                   // 4: position_model.PositionSnp
	(*OrderPositionSnp)(nil),                              // 5: position_model.OrderPositionSnp
	(*PositionPutg)(nil),                                  // 6: position_model.PositionPutg
	(*OrderPositionPutg)(nil),                             // 7: position_model.OrderPositionPutg
	(*PositionRing)(nil),                                  // 8: position_model.PositionRing
	(*OrderPositionRing)(nil),                             // 9: position_model.OrderPositionRing
	(*PositionSnp_Main)(nil),                              // 10: position_model.PositionSnp.Main
	(*PositionSnp_Size)(nil),                              // 11: position_model.PositionSnp.Size
	(*PositionSnp_Material)(nil),                          // 12: position_model.PositionSnp.Material
	(*PositionSnp_Design)(nil),                            // 13: position_model.PositionSnp.Design
	(*OrderPositionSnp_Main)(nil),                         // 14: position_model.OrderPositionSnp.Main
	(*OrderPositionSnp_Size)(nil),                         // 15: position_model.OrderPositionSnp.Size
	(*OrderPositionSnp_Material)(nil),                     // 16: position_model.OrderPositionSnp.Material
	(*OrderPositionSnp_Design)(nil),                       // 17: position_model.OrderPositionSnp.Design
	(*OrderPositionSnp_Design_Jumper)(nil),                // 18: position_model.OrderPositionSnp.Design.Jumper
	(*OrderPositionSnp_Design_Mounting)(nil),              // 19: position_model.OrderPositionSnp.Design.Mounting
	(*PositionPutg_Main)(nil),                             // 20: position_model.PositionPutg.Main
	(*PositionPutg_Size)(nil),                             // 21: position_model.PositionPutg.Size
	(*PositionPutg_Material)(nil),                         // 22: position_model.PositionPutg.Material
	(*PositionPutg_Design)(nil),                           // 23: position_model.PositionPutg.Design
	(*OrderPositionPutg_Main)(nil),                        // 24: position_model.OrderPositionPutg.Main
	(*OrderPositionPutg_Size)(nil),                        // 25: position_model.OrderPositionPutg.Size
	(*OrderPositionPutg_Material)(nil),                    // 26: position_model.OrderPositionPutg.Material
	(*OrderPositionPutg_Design)(nil),                      // 27: position_model.OrderPositionPutg.Design
	(*OrderPositionPutg_Design_Jumper)(nil),               // 28: position_model.OrderPositionPutg.Design.Jumper
	(*OrderPositionPutg_Design_Mounting)(nil),             // 29: position_model.OrderPositionPutg.Design.Mounting
	(*ring_type_model.RingType)(nil),                      // 30: ring_type_model.RingType
	(*ring_density_model.RingDensity)(nil),                // 31: ring_density_model.RingDensity
	(*ring_construction_model.RingConstruction)(nil),      // 32: ring_construction_model.RingConstruction
	(*snp_size_model.Pn)(nil),                             // 33: snp_size_model.Pn
	(*snp_standard_model.SnpStandard)(nil),                // 34: snp_standard_model.SnpStandard
	(*snp_type_model.SnpType)(nil),                        // 35: snp_type_model.SnpType
	(*snp_filler_model.SnpFiller)(nil),                    // 36: snp_filler_model.SnpFiller
	(*snp_material_model.Material)(nil),                   // 37: snp_material_model.Material
	(*putg_standard_model.PutgStandard)(nil),              // 38: putg_standard_model.PutgStandard
	(*putg_flange_type_model.PutgFlangeType)(nil),         // 39: putg_flange_type_model.PutgFlangeType
	(*putg_configuration_model.PutgConfiguration)(nil),    // 40: putg_configuration_model.PutgConfiguration
	(*putg_filler_model.PutgFiller)(nil),                  // 41: putg_filler_model.PutgFiller
	(*putg_type_model.PutgType)(nil),                      // 42: putg_type_model.PutgType
	(*putg_construction_type_model.PutgConstruction)(nil), // 43: putg_construction_type_model.PutgConstruction
	(*putg_material_model.Material)(nil),                  // 44: putg_material_model.Material
}
var file_pro_models_position_model_proto_depIdxs = []int32{
	0,  // 0: position_model.FullPosition.type:type_name -> position_model.PositionType
	4,  // 1: position_model.FullPosition.snpData:type_name -> position_model.PositionSnp
	6,  // 2: position_model.FullPosition.putgData:type_name -> position_model.PositionPutg
	8,  // 3: position_model.FullPosition.ringData:type_name -> position_model.PositionRing
	0,  // 4: position_model.OrderPosition.typeCode:type_name -> position_model.PositionType
	5,  // 5: position_model.OrderPosition.snpData:type_name -> position_model.OrderPositionSnp
	7,  // 6: position_model.OrderPosition.putgData:type_name -> position_model.OrderPositionPutg
	9,  // 7: position_model.OrderPosition.ringData:type_name -> position_model.OrderPositionRing
	10, // 8: position_model.PositionSnp.main:type_name -> position_model.PositionSnp.Main
	11, // 9: position_model.PositionSnp.size:type_name -> position_model.PositionSnp.Size
	12, // 10: position_model.PositionSnp.material:type_name -> position_model.PositionSnp.Material
	13, // 11: position_model.PositionSnp.design:type_name -> position_model.PositionSnp.Design
	14, // 12: position_model.OrderPositionSnp.main:type_name -> position_model.OrderPositionSnp.Main
	15, // 13: position_model.OrderPositionSnp.size:type_name -> position_model.OrderPositionSnp.Size
	16, // 14: position_model.OrderPositionSnp.material:type_name -> position_model.OrderPositionSnp.Material
	17, // 15: position_model.OrderPositionSnp.design:type_name -> position_model.OrderPositionSnp.Design
	20, // 16: position_model.PositionPutg.main:type_name -> position_model.PositionPutg.Main
	21, // 17: position_model.PositionPutg.size:type_name -> position_model.PositionPutg.Size
	22, // 18: position_model.PositionPutg.material:type_name -> position_model.PositionPutg.Material
	23, // 19: position_model.PositionPutg.design:type_name -> position_model.PositionPutg.Design
	24, // 20: position_model.OrderPositionPutg.main:type_name -> position_model.OrderPositionPutg.Main
	25, // 21: position_model.OrderPositionPutg.size:type_name -> position_model.OrderPositionPutg.Size
	26, // 22: position_model.OrderPositionPutg.material:type_name -> position_model.OrderPositionPutg.Material
	27, // 23: position_model.OrderPositionPutg.design:type_name -> position_model.OrderPositionPutg.Design
	30, // 24: position_model.OrderPositionRing.ringType:type_name -> ring_type_model.RingType
	31, // 25: position_model.OrderPositionRing.density:type_name -> ring_density_model.RingDensity
	32, // 26: position_model.OrderPositionRing.construction:type_name -> ring_construction_model.RingConstruction
	33, // 27: position_model.PositionSnp.Size.pn:type_name -> snp_size_model.Pn
	34, // 28: position_model.OrderPositionSnp.Main.snpStandard:type_name -> snp_standard_model.SnpStandard
	35, // 29: position_model.OrderPositionSnp.Main.snpType:type_name -> snp_type_model.SnpType
	33, // 30: position_model.OrderPositionSnp.Size.pn:type_name -> snp_size_model.Pn
	36, // 31: position_model.OrderPositionSnp.Material.filler:type_name -> snp_filler_model.SnpFiller
	37, // 32: position_model.OrderPositionSnp.Material.frame:type_name -> snp_material_model.Material
	37, // 33: position_model.OrderPositionSnp.Material.innerRing:type_name -> snp_material_model.Material
	37, // 34: position_model.OrderPositionSnp.Material.outerRing:type_name -> snp_material_model.Material
	18, // 35: position_model.OrderPositionSnp.Design.jumper:type_name -> position_model.OrderPositionSnp.Design.Jumper
	19, // 36: position_model.OrderPositionSnp.Design.mounting:type_name -> position_model.OrderPositionSnp.Design.Mounting
	33, // 37: position_model.PositionPutg.Size.pn:type_name -> snp_size_model.Pn
	38, // 38: position_model.OrderPositionPutg.Main.standard:type_name -> putg_standard_model.PutgStandard
	39, // 39: position_model.OrderPositionPutg.Main.flangeType:type_name -> putg_flange_type_model.PutgFlangeType
	40, // 40: position_model.OrderPositionPutg.Main.configuration:type_name -> putg_configuration_model.PutgConfiguration
	33, // 41: position_model.OrderPositionPutg.Size.pn:type_name -> snp_size_model.Pn
	41, // 42: position_model.OrderPositionPutg.Material.filler:type_name -> putg_filler_model.PutgFiller
	42, // 43: position_model.OrderPositionPutg.Material.putgType:type_name -> putg_type_model.PutgType
	43, // 44: position_model.OrderPositionPutg.Material.construction:type_name -> putg_construction_type_model.PutgConstruction
	44, // 45: position_model.OrderPositionPutg.Material.rotaryPlug:type_name -> putg_material_model.Material
	44, // 46: position_model.OrderPositionPutg.Material.innerRing:type_name -> putg_material_model.Material
	44, // 47: position_model.OrderPositionPutg.Material.outerRing:type_name -> putg_material_model.Material
	28, // 48: position_model.OrderPositionPutg.Design.jumper:type_name -> position_model.OrderPositionPutg.Design.Jumper
	29, // 49: position_model.OrderPositionPutg.Design.mounting:type_name -> position_model.OrderPositionPutg.Design.Mounting
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_pro_models_position_model_proto_init() }
func file_pro_models_position_model_proto_init() {
	if File_pro_models_position_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pro_models_position_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionSnp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionPutg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionRing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionRing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionSnp_Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionSnp_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionSnp_Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionSnp_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Design_Jumper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionSnp_Design_Mounting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionPutg_Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionPutg_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionPutg_Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionPutg_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Main); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Design_Jumper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_position_model_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPositionPutg_Design_Mounting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pro_models_position_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pro_models_position_model_proto_goTypes,
		DependencyIndexes: file_pro_models_position_model_proto_depIdxs,
		EnumInfos:         file_pro_models_position_model_proto_enumTypes,
		MessageInfos:      file_pro_models_position_model_proto_msgTypes,
	}.Build()
	File_pro_models_position_model_proto = out.File
	file_pro_models_position_model_proto_rawDesc = nil
	file_pro_models_position_model_proto_goTypes = nil
	file_pro_models_position_model_proto_depIdxs = nil
}
