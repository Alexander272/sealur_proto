// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pro/models/snp_model.proto

package snp_model

import (
	mounting_model "github.com/Alexander272/sealur_proto/api/pro/models/mounting_model"
	snp_filler_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_filler_model"
	snp_material_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_material_model"
	snp_type_model "github.com/Alexander272/sealur_proto/api/pro/models/snp_type_model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlangeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string                    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Code        string                    `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Description string                    `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Types       []*snp_type_model.SnpType `protobuf:"bytes,5,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *FlangeType) Reset() {
	*x = FlangeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_snp_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeType) ProtoMessage() {}

func (x *FlangeType) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_snp_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeType.ProtoReflect.Descriptor instead.
func (*FlangeType) Descriptor() ([]byte, []int) {
	return file_pro_models_snp_model_proto_rawDescGZIP(), []int{0}
}

func (x *FlangeType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FlangeType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FlangeType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FlangeType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FlangeType) GetTypes() []*snp_type_model.SnpType {
	if x != nil {
		return x.Types
	}
	return nil
}

type SnpData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlangeTypes []*FlangeType                      `protobuf:"bytes,1,rep,name=flangeTypes,proto3" json:"flangeTypes,omitempty"`
	Materials   []*snp_material_model.SnpMaterials `protobuf:"bytes,2,rep,name=materials,proto3" json:"materials,omitempty"`
	Mounting    []*mounting_model.Mounting         `protobuf:"bytes,3,rep,name=mounting,proto3" json:"mounting,omitempty"`
	Fillers     []*snp_filler_model.SnpFiller      `protobuf:"bytes,4,rep,name=fillers,proto3" json:"fillers,omitempty"`
}

func (x *SnpData) Reset() {
	*x = SnpData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pro_models_snp_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnpData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnpData) ProtoMessage() {}

func (x *SnpData) ProtoReflect() protoreflect.Message {
	mi := &file_pro_models_snp_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnpData.ProtoReflect.Descriptor instead.
func (*SnpData) Descriptor() ([]byte, []int) {
	return file_pro_models_snp_model_proto_rawDescGZIP(), []int{1}
}

func (x *SnpData) GetFlangeTypes() []*FlangeType {
	if x != nil {
		return x.FlangeTypes
	}
	return nil
}

func (x *SnpData) GetMaterials() []*snp_material_model.SnpMaterials {
	if x != nil {
		return x.Materials
	}
	return nil
}

func (x *SnpData) GetMounting() []*mounting_model.Mounting {
	if x != nil {
		return x.Mounting
	}
	return nil
}

func (x *SnpData) GetFillers() []*snp_filler_model.SnpFiller {
	if x != nil {
		return x.Fillers
	}
	return nil
}

var File_pro_models_snp_model_proto protoreflect.FileDescriptor

var file_pro_models_snp_model_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x6e,
	0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70,
	0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x66,
	0x69, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x07,
	0x53, 0x6e, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x66, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x6e, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x3e, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6e, 0x70, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x6e, 0x70, 0x46, 0x69,
	0x6c, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x42, 0x3f, 0x5a,
	0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x65, 0x78,
	0x61, 0x6e, 0x64, 0x65, 0x72, 0x32, 0x37, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x6c, 0x75, 0x72, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x73, 0x6e, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pro_models_snp_model_proto_rawDescOnce sync.Once
	file_pro_models_snp_model_proto_rawDescData = file_pro_models_snp_model_proto_rawDesc
)

func file_pro_models_snp_model_proto_rawDescGZIP() []byte {
	file_pro_models_snp_model_proto_rawDescOnce.Do(func() {
		file_pro_models_snp_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_pro_models_snp_model_proto_rawDescData)
	})
	return file_pro_models_snp_model_proto_rawDescData
}

var file_pro_models_snp_model_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pro_models_snp_model_proto_goTypes = []interface{}{
	(*FlangeType)(nil),                      // 0: snp_model.FlangeType
	(*SnpData)(nil),                         // 1: snp_model.SnpData
	(*snp_type_model.SnpType)(nil),          // 2: snp_type_model.SnpType
	(*snp_material_model.SnpMaterials)(nil), // 3: snp_material_model.SnpMaterials
	(*mounting_model.Mounting)(nil),         // 4: mounting_model.Mounting
	(*snp_filler_model.SnpFiller)(nil),      // 5: snp_filler_model.SnpFiller
}
var file_pro_models_snp_model_proto_depIdxs = []int32{
	2, // 0: snp_model.FlangeType.types:type_name -> snp_type_model.SnpType
	0, // 1: snp_model.SnpData.flangeTypes:type_name -> snp_model.FlangeType
	3, // 2: snp_model.SnpData.materials:type_name -> snp_material_model.SnpMaterials
	4, // 3: snp_model.SnpData.mounting:type_name -> mounting_model.Mounting
	5, // 4: snp_model.SnpData.fillers:type_name -> snp_filler_model.SnpFiller
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pro_models_snp_model_proto_init() }
func file_pro_models_snp_model_proto_init() {
	if File_pro_models_snp_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pro_models_snp_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pro_models_snp_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnpData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pro_models_snp_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pro_models_snp_model_proto_goTypes,
		DependencyIndexes: file_pro_models_snp_model_proto_depIdxs,
		MessageInfos:      file_pro_models_snp_model_proto_msgTypes,
	}.Build()
	File_pro_models_snp_model_proto = out.File
	file_pro_models_snp_model_proto_rawDesc = nil
	file_pro_models_snp_model_proto_goTypes = nil
	file_pro_models_snp_model_proto_depIdxs = nil
}
