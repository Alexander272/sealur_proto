// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: moment_api/moment.proto

package moment_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlangeData_Type int32

const (
	FlangeData_welded FlangeData_Type = 0
	FlangeData_flat   FlangeData_Type = 1
	FlangeData_free   FlangeData_Type = 2
)

// Enum value maps for FlangeData_Type.
var (
	FlangeData_Type_name = map[int32]string{
		0: "welded",
		1: "flat",
		2: "free",
	}
	FlangeData_Type_value = map[string]int32{
		"welded": 0,
		"flat":   1,
		"free":   2,
	}
)

func (x FlangeData_Type) Enum() *FlangeData_Type {
	p := new(FlangeData_Type)
	*p = x
	return p
}

func (x FlangeData_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlangeData_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[0].Descriptor()
}

func (FlangeData_Type) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[0]
}

func (x FlangeData_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlangeData_Type.Descriptor instead.
func (FlangeData_Type) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{80, 0}
}

type GasketData_Type int32

const (
	GasketData_Soft  GasketData_Type = 0
	GasketData_Oval  GasketData_Type = 1
	GasketData_Metal GasketData_Type = 2
)

// Enum value maps for GasketData_Type.
var (
	GasketData_Type_name = map[int32]string{
		0: "Soft",
		1: "Oval",
		2: "Metal",
	}
	GasketData_Type_value = map[string]int32{
		"Soft":  0,
		"Oval":  1,
		"Metal": 2,
	}
)

func (x GasketData_Type) Enum() *GasketData_Type {
	p := new(GasketData_Type)
	*p = x
	return p
}

func (x GasketData_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GasketData_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[1].Descriptor()
}

func (GasketData_Type) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[1]
}

func (x GasketData_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GasketData_Type.Descriptor instead.
func (GasketData_Type) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{83, 0}
}

type CalcFlangeRequest_Flanges int32

const (
	CalcFlangeRequest_isolated    CalcFlangeRequest_Flanges = 0
	CalcFlangeRequest_nonIsolated CalcFlangeRequest_Flanges = 1
	CalcFlangeRequest_manually    CalcFlangeRequest_Flanges = 2
)

// Enum value maps for CalcFlangeRequest_Flanges.
var (
	CalcFlangeRequest_Flanges_name = map[int32]string{
		0: "isolated",
		1: "nonIsolated",
		2: "manually",
	}
	CalcFlangeRequest_Flanges_value = map[string]int32{
		"isolated":    0,
		"nonIsolated": 1,
		"manually":    2,
	}
)

func (x CalcFlangeRequest_Flanges) Enum() *CalcFlangeRequest_Flanges {
	p := new(CalcFlangeRequest_Flanges)
	*p = x
	return p
}

func (x CalcFlangeRequest_Flanges) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcFlangeRequest_Flanges) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[2].Descriptor()
}

func (CalcFlangeRequest_Flanges) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[2]
}

func (x CalcFlangeRequest_Flanges) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcFlangeRequest_Flanges.Descriptor instead.
func (CalcFlangeRequest_Flanges) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{85, 0}
}

type CalcFlangeRequest_Type int32

const (
	CalcFlangeRequest_bolt CalcFlangeRequest_Type = 0
	CalcFlangeRequest_pin  CalcFlangeRequest_Type = 1
)

// Enum value maps for CalcFlangeRequest_Type.
var (
	CalcFlangeRequest_Type_name = map[int32]string{
		0: "bolt",
		1: "pin",
	}
	CalcFlangeRequest_Type_value = map[string]int32{
		"bolt": 0,
		"pin":  1,
	}
)

func (x CalcFlangeRequest_Type) Enum() *CalcFlangeRequest_Type {
	p := new(CalcFlangeRequest_Type)
	*p = x
	return p
}

func (x CalcFlangeRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcFlangeRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[3].Descriptor()
}

func (CalcFlangeRequest_Type) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[3]
}

func (x CalcFlangeRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcFlangeRequest_Type.Descriptor instead.
func (CalcFlangeRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{85, 1}
}

type CalcFlangeRequest_Condition int32

const (
	CalcFlangeRequest_uncontrollable  CalcFlangeRequest_Condition = 0
	CalcFlangeRequest_controllable    CalcFlangeRequest_Condition = 1
	CalcFlangeRequest_controllablePin CalcFlangeRequest_Condition = 2
)

// Enum value maps for CalcFlangeRequest_Condition.
var (
	CalcFlangeRequest_Condition_name = map[int32]string{
		0: "uncontrollable",
		1: "controllable",
		2: "controllablePin",
	}
	CalcFlangeRequest_Condition_value = map[string]int32{
		"uncontrollable":  0,
		"controllable":    1,
		"controllablePin": 2,
	}
)

func (x CalcFlangeRequest_Condition) Enum() *CalcFlangeRequest_Condition {
	p := new(CalcFlangeRequest_Condition)
	*p = x
	return p
}

func (x CalcFlangeRequest_Condition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcFlangeRequest_Condition) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[4].Descriptor()
}

func (CalcFlangeRequest_Condition) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[4]
}

func (x CalcFlangeRequest_Condition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcFlangeRequest_Condition.Descriptor instead.
func (CalcFlangeRequest_Condition) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{85, 2}
}

type CalcFlangeRequest_Calcutation int32

const (
	CalcFlangeRequest_basis    CalcFlangeRequest_Calcutation = 0
	CalcFlangeRequest_strength CalcFlangeRequest_Calcutation = 1
)

// Enum value maps for CalcFlangeRequest_Calcutation.
var (
	CalcFlangeRequest_Calcutation_name = map[int32]string{
		0: "basis",
		1: "strength",
	}
	CalcFlangeRequest_Calcutation_value = map[string]int32{
		"basis":    0,
		"strength": 1,
	}
)

func (x CalcFlangeRequest_Calcutation) Enum() *CalcFlangeRequest_Calcutation {
	p := new(CalcFlangeRequest_Calcutation)
	*p = x
	return p
}

func (x CalcFlangeRequest_Calcutation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CalcFlangeRequest_Calcutation) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_api_moment_proto_enumTypes[5].Descriptor()
}

func (CalcFlangeRequest_Calcutation) Type() protoreflect.EnumType {
	return &file_moment_api_moment_proto_enumTypes[5]
}

func (x CalcFlangeRequest_Calcutation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CalcFlangeRequest_Calcutation.Descriptor instead.
func (CalcFlangeRequest_Calcutation) EnumDescriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{85, 3}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{0}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type IdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdResponse) Reset() {
	*x = IdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResponse) ProtoMessage() {}

func (x *IdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResponse.ProtoReflect.Descriptor instead.
func (*IdResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{2}
}

func (x *IdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{3}
}

type Material struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Material) Reset() {
	*x = Material{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Material) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Material) ProtoMessage() {}

func (x *Material) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Material.ProtoReflect.Descriptor instead.
func (*Material) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{4}
}

func (x *Material) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Material) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type MaterialWithIsEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsEmptyAlpha      bool   `protobuf:"varint,3,opt,name=IsEmptyAlpha,json=isEmptyAlpha,proto3" json:"IsEmptyAlpha,omitempty"`                // required
	IsEmptyElasticity bool   `protobuf:"varint,4,opt,name=IsEmptyElasticity,json=isEmptyElasticity,proto3" json:"IsEmptyElasticity,omitempty"` // required
	IsEmptyVoltage    bool   `protobuf:"varint,5,opt,name=IsEmptyVoltage,json=isEmptyVoltage,proto3" json:"IsEmptyVoltage,omitempty"`          // required
}

func (x *MaterialWithIsEmpty) Reset() {
	*x = MaterialWithIsEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialWithIsEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialWithIsEmpty) ProtoMessage() {}

func (x *MaterialWithIsEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialWithIsEmpty.ProtoReflect.Descriptor instead.
func (*MaterialWithIsEmpty) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{5}
}

func (x *MaterialWithIsEmpty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaterialWithIsEmpty) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaterialWithIsEmpty) GetIsEmptyAlpha() bool {
	if x != nil {
		return x.IsEmptyAlpha
	}
	return false
}

func (x *MaterialWithIsEmpty) GetIsEmptyElasticity() bool {
	if x != nil {
		return x.IsEmptyElasticity
	}
	return false
}

func (x *MaterialWithIsEmpty) GetIsEmptyVoltage() bool {
	if x != nil {
		return x.IsEmptyVoltage
	}
	return false
}

type GetMaterialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMaterialsRequest) Reset() {
	*x = GetMaterialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaterialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaterialsRequest) ProtoMessage() {}

func (x *GetMaterialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaterialsRequest.ProtoReflect.Descriptor instead.
func (*GetMaterialsRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{6}
}

type CreateMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateMaterialRequest) Reset() {
	*x = CreateMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMaterialRequest) ProtoMessage() {}

func (x *CreateMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMaterialRequest.ProtoReflect.Descriptor instead.
func (*CreateMaterialRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{7}
}

func (x *CreateMaterialRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateMaterialRequest) Reset() {
	*x = UpdateMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMaterialRequest) ProtoMessage() {}

func (x *UpdateMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMaterialRequest.ProtoReflect.Descriptor instead.
func (*UpdateMaterialRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMaterialRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMaterialRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteMaterialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMaterialRequest) Reset() {
	*x = DeleteMaterialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMaterialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMaterialRequest) ProtoMessage() {}

func (x *DeleteMaterialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMaterialRequest.ProtoReflect.Descriptor instead.
func (*DeleteMaterialRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMaterialRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MaterialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Materials []*Material `protobuf:"bytes,1,rep,name=materials,proto3" json:"materials,omitempty"`
}

func (x *MaterialsResponse) Reset() {
	*x = MaterialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsResponse) ProtoMessage() {}

func (x *MaterialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsResponse.ProtoReflect.Descriptor instead.
func (*MaterialsResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{10}
}

func (x *MaterialsResponse) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

type MaterialsWithIsEmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Materials []*MaterialWithIsEmpty `protobuf:"bytes,1,rep,name=materials,proto3" json:"materials,omitempty"`
}

func (x *MaterialsWithIsEmptyResponse) Reset() {
	*x = MaterialsWithIsEmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsWithIsEmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsWithIsEmptyResponse) ProtoMessage() {}

func (x *MaterialsWithIsEmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsWithIsEmptyResponse.ProtoReflect.Descriptor instead.
func (*MaterialsWithIsEmptyResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{11}
}

func (x *MaterialsWithIsEmptyResponse) GetMaterials() []*MaterialWithIsEmpty {
	if x != nil {
		return x.Materials
	}
	return nil
}

type GetMaterialsDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId string `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
}

func (x *GetMaterialsDataRequest) Reset() {
	*x = GetMaterialsDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaterialsDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaterialsDataRequest) ProtoMessage() {}

func (x *GetMaterialsDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaterialsDataRequest.ProtoReflect.Descriptor instead.
func (*GetMaterialsDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{12}
}

func (x *GetMaterialsDataRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

type MaterialsDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage    []*MaterialsDataResponse_Voltage    `protobuf:"bytes,1,rep,name=voltage,proto3" json:"voltage,omitempty"`
	Elasticity []*MaterialsDataResponse_Elasticity `protobuf:"bytes,2,rep,name=elasticity,proto3" json:"elasticity,omitempty"`
	Alpha      []*MaterialsDataResponse_Alpha      `protobuf:"bytes,3,rep,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *MaterialsDataResponse) Reset() {
	*x = MaterialsDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsDataResponse) ProtoMessage() {}

func (x *MaterialsDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsDataResponse.ProtoReflect.Descriptor instead.
func (*MaterialsDataResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{13}
}

func (x *MaterialsDataResponse) GetVoltage() []*MaterialsDataResponse_Voltage {
	if x != nil {
		return x.Voltage
	}
	return nil
}

func (x *MaterialsDataResponse) GetElasticity() []*MaterialsDataResponse_Elasticity {
	if x != nil {
		return x.Elasticity
	}
	return nil
}

func (x *MaterialsDataResponse) GetAlpha() []*MaterialsDataResponse_Alpha {
	if x != nil {
		return x.Alpha
	}
	return nil
}

type Voltage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature float64 `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Voltage     float64 `protobuf:"fixed64,2,opt,name=voltage,proto3" json:"voltage,omitempty"`
}

func (x *Voltage) Reset() {
	*x = Voltage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voltage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voltage) ProtoMessage() {}

func (x *Voltage) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voltage.ProtoReflect.Descriptor instead.
func (*Voltage) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{14}
}

func (x *Voltage) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Voltage) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

type CreateVoltageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId  string     `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Voltage []*Voltage `protobuf:"bytes,2,rep,name=voltage,proto3" json:"voltage,omitempty"`
}

func (x *CreateVoltageRequest) Reset() {
	*x = CreateVoltageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVoltageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoltageRequest) ProtoMessage() {}

func (x *CreateVoltageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoltageRequest.ProtoReflect.Descriptor instead.
func (*CreateVoltageRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{15}
}

func (x *CreateVoltageRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *CreateVoltageRequest) GetVoltage() []*Voltage {
	if x != nil {
		return x.Voltage
	}
	return nil
}

type UpdateVoltageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarkId      string  `protobuf:"bytes,2,opt,name=markId,proto3" json:"markId,omitempty"`
	Temperature float64 `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Voltage     float64 `protobuf:"fixed64,4,opt,name=voltage,proto3" json:"voltage,omitempty"`
}

func (x *UpdateVoltageRequest) Reset() {
	*x = UpdateVoltageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVoltageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVoltageRequest) ProtoMessage() {}

func (x *UpdateVoltageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVoltageRequest.ProtoReflect.Descriptor instead.
func (*UpdateVoltageRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateVoltageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVoltageRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *UpdateVoltageRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *UpdateVoltageRequest) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

type DeleteVoltageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVoltageRequest) Reset() {
	*x = DeleteVoltageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVoltageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVoltageRequest) ProtoMessage() {}

func (x *DeleteVoltageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVoltageRequest.ProtoReflect.Descriptor instead.
func (*DeleteVoltageRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteVoltageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Elasticity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature float64 `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Elasticity  float64 `protobuf:"fixed64,2,opt,name=elasticity,proto3" json:"elasticity,omitempty"`
}

func (x *Elasticity) Reset() {
	*x = Elasticity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Elasticity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Elasticity) ProtoMessage() {}

func (x *Elasticity) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Elasticity.ProtoReflect.Descriptor instead.
func (*Elasticity) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{18}
}

func (x *Elasticity) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Elasticity) GetElasticity() float64 {
	if x != nil {
		return x.Elasticity
	}
	return 0
}

type CreateElasticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId     string        `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Elasticity []*Elasticity `protobuf:"bytes,2,rep,name=elasticity,proto3" json:"elasticity,omitempty"`
}

func (x *CreateElasticityRequest) Reset() {
	*x = CreateElasticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateElasticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateElasticityRequest) ProtoMessage() {}

func (x *CreateElasticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateElasticityRequest.ProtoReflect.Descriptor instead.
func (*CreateElasticityRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{19}
}

func (x *CreateElasticityRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *CreateElasticityRequest) GetElasticity() []*Elasticity {
	if x != nil {
		return x.Elasticity
	}
	return nil
}

type UpdateElasticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarkId      string  `protobuf:"bytes,2,opt,name=markId,proto3" json:"markId,omitempty"`
	Temperature float64 `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Elasticity  float64 `protobuf:"fixed64,4,opt,name=elasticity,proto3" json:"elasticity,omitempty"`
}

func (x *UpdateElasticityRequest) Reset() {
	*x = UpdateElasticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateElasticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateElasticityRequest) ProtoMessage() {}

func (x *UpdateElasticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateElasticityRequest.ProtoReflect.Descriptor instead.
func (*UpdateElasticityRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateElasticityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateElasticityRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *UpdateElasticityRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *UpdateElasticityRequest) GetElasticity() float64 {
	if x != nil {
		return x.Elasticity
	}
	return 0
}

type DeleteElasticityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteElasticityRequest) Reset() {
	*x = DeleteElasticityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteElasticityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteElasticityRequest) ProtoMessage() {}

func (x *DeleteElasticityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteElasticityRequest.ProtoReflect.Descriptor instead.
func (*DeleteElasticityRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteElasticityRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Alpha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature float64 `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Alpha       float64 `protobuf:"fixed64,2,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *Alpha) Reset() {
	*x = Alpha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alpha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alpha) ProtoMessage() {}

func (x *Alpha) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alpha.ProtoReflect.Descriptor instead.
func (*Alpha) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{22}
}

func (x *Alpha) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *Alpha) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

type CreateAlphaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId string   `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Alpha  []*Alpha `protobuf:"bytes,2,rep,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *CreateAlphaRequest) Reset() {
	*x = CreateAlphaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlphaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlphaRequest) ProtoMessage() {}

func (x *CreateAlphaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlphaRequest.ProtoReflect.Descriptor instead.
func (*CreateAlphaRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAlphaRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *CreateAlphaRequest) GetAlpha() []*Alpha {
	if x != nil {
		return x.Alpha
	}
	return nil
}

type UpdateAlphaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MarkId      string  `protobuf:"bytes,2,opt,name=markId,proto3" json:"markId,omitempty"`
	Temperature float64 `protobuf:"fixed64,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Alpha       float64 `protobuf:"fixed64,4,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *UpdateAlphaRequest) Reset() {
	*x = UpdateAlphaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlphaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlphaRequest) ProtoMessage() {}

func (x *UpdateAlphaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlphaRequest.ProtoReflect.Descriptor instead.
func (*UpdateAlphaRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateAlphaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAlphaRequest) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *UpdateAlphaRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *UpdateAlphaRequest) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

type DeleteAlphaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlphaRequest) Reset() {
	*x = DeleteAlphaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlphaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlphaRequest) ProtoMessage() {}

func (x *DeleteAlphaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlphaRequest.ProtoReflect.Descriptor instead.
func (*DeleteAlphaRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteAlphaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Gasket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Gasket) Reset() {
	*x = Gasket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Gasket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gasket) ProtoMessage() {}

func (x *Gasket) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gasket.ProtoReflect.Descriptor instead.
func (*Gasket) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{26}
}

func (x *Gasket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Gasket) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GasketWithThick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Thickness []float64 `protobuf:"fixed64,3,rep,packed,name=thickness,proto3" json:"thickness,omitempty"`
}

func (x *GasketWithThick) Reset() {
	*x = GasketWithThick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketWithThick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketWithThick) ProtoMessage() {}

func (x *GasketWithThick) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketWithThick.ProtoReflect.Descriptor instead.
func (*GasketWithThick) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{27}
}

func (x *GasketWithThick) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GasketWithThick) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GasketWithThick) GetThickness() []float64 {
	if x != nil {
		return x.Thickness
	}
	return nil
}

type GetGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGasketRequest) Reset() {
	*x = GetGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasketRequest) ProtoMessage() {}

func (x *GetGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasketRequest.ProtoReflect.Descriptor instead.
func (*GetGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{28}
}

type CreateGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateGasketRequest) Reset() {
	*x = CreateGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGasketRequest) ProtoMessage() {}

func (x *CreateGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGasketRequest.ProtoReflect.Descriptor instead.
func (*CreateGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{29}
}

func (x *CreateGasketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateGasketRequest) Reset() {
	*x = UpdateGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGasketRequest) ProtoMessage() {}

func (x *UpdateGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGasketRequest.ProtoReflect.Descriptor instead.
func (*UpdateGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateGasketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGasketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGasketRequest) Reset() {
	*x = DeleteGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGasketRequest) ProtoMessage() {}

func (x *DeleteGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGasketRequest.ProtoReflect.Descriptor instead.
func (*DeleteGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteGasketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GasketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*Gasket `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *GasketResponse) Reset() {
	*x = GasketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketResponse) ProtoMessage() {}

func (x *GasketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketResponse.ProtoReflect.Descriptor instead.
func (*GasketResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{32}
}

func (x *GasketResponse) GetGasket() []*Gasket {
	if x != nil {
		return x.Gasket
	}
	return nil
}

type GasketWithThickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*GasketWithThick `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *GasketWithThickResponse) Reset() {
	*x = GasketWithThickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketWithThickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketWithThickResponse) ProtoMessage() {}

func (x *GasketWithThickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketWithThickResponse.ProtoReflect.Descriptor instead.
func (*GasketWithThickResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{33}
}

func (x *GasketWithThickResponse) GetGasket() []*GasketWithThick {
	if x != nil {
		return x.Gasket
	}
	return nil
}

type GasketType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *GasketType) Reset() {
	*x = GasketType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketType) ProtoMessage() {}

func (x *GasketType) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketType.ProtoReflect.Descriptor instead.
func (*GasketType) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{34}
}

func (x *GasketType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GasketType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GasketType) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type GetGasketTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetGasketTypeRequest) Reset() {
	*x = GetGasketTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGasketTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGasketTypeRequest) ProtoMessage() {}

func (x *GetGasketTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGasketTypeRequest.ProtoReflect.Descriptor instead.
func (*GetGasketTypeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{35}
}

type CreateGasketTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CreateGasketTypeRequest) Reset() {
	*x = CreateGasketTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGasketTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGasketTypeRequest) ProtoMessage() {}

func (x *CreateGasketTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGasketTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateGasketTypeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{36}
}

func (x *CreateGasketTypeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateGasketTypeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type UpdateGasketTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *UpdateGasketTypeRequest) Reset() {
	*x = UpdateGasketTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGasketTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGasketTypeRequest) ProtoMessage() {}

func (x *UpdateGasketTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGasketTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateGasketTypeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateGasketTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGasketTypeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateGasketTypeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type DeleteGasketTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGasketTypeRequest) Reset() {
	*x = DeleteGasketTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGasketTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGasketTypeRequest) ProtoMessage() {}

func (x *DeleteGasketTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGasketTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteGasketTypeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteGasketTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GasketTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasketType []*GasketType `protobuf:"bytes,1,rep,name=gasketType,proto3" json:"gasketType,omitempty"`
}

func (x *GasketTypeResponse) Reset() {
	*x = GasketTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketTypeResponse) ProtoMessage() {}

func (x *GasketTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketTypeResponse.ProtoReflect.Descriptor instead.
func (*GasketTypeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{39}
}

func (x *GasketTypeResponse) GetGasketType() []*GasketType {
	if x != nil {
		return x.GasketType
	}
	return nil
}

type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{40}
}

func (x *Env) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Env) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEnvRequest) Reset() {
	*x = GetEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvRequest) ProtoMessage() {}

func (x *GetEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvRequest.ProtoReflect.Descriptor instead.
func (*GetEnvRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{41}
}

type CreateEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateEnvRequest) Reset() {
	*x = CreateEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvRequest) ProtoMessage() {}

func (x *CreateEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{42}
}

func (x *CreateEnvRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UpdateEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateEnvRequest) Reset() {
	*x = UpdateEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvRequest) ProtoMessage() {}

func (x *UpdateEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateEnvRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnvRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteEnvRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEnvRequest) Reset() {
	*x = DeleteEnvRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvRequest) ProtoMessage() {}

func (x *DeleteEnvRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteEnvRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type EnvResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Env []*Env `protobuf:"bytes,1,rep,name=env,proto3" json:"env,omitempty"`
}

func (x *EnvResponse) Reset() {
	*x = EnvResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvResponse) ProtoMessage() {}

func (x *EnvResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvResponse.ProtoReflect.Descriptor instead.
func (*EnvResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{45}
}

func (x *EnvResponse) GetEnv() []*Env {
	if x != nil {
		return x.Env
	}
	return nil
}

type CreateEnvDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvId        string  `protobuf:"bytes,1,opt,name=envId,proto3" json:"envId,omitempty"`
	GasketId     string  `protobuf:"bytes,2,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	M            float64 `protobuf:"fixed64,3,opt,name=m,proto3" json:"m,omitempty"`
	SpecificPres float64 `protobuf:"fixed64,4,opt,name=specificPres,proto3" json:"specificPres,omitempty"`
}

func (x *CreateEnvDataRequest) Reset() {
	*x = CreateEnvDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEnvDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvDataRequest) ProtoMessage() {}

func (x *CreateEnvDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvDataRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{46}
}

func (x *CreateEnvDataRequest) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *CreateEnvDataRequest) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *CreateEnvDataRequest) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *CreateEnvDataRequest) GetSpecificPres() float64 {
	if x != nil {
		return x.SpecificPres
	}
	return 0
}

type UpdateEnvDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnvId        string  `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	GasketId     string  `protobuf:"bytes,3,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	M            float64 `protobuf:"fixed64,4,opt,name=m,proto3" json:"m,omitempty"`
	SpecificPres float64 `protobuf:"fixed64,5,opt,name=specificPres,proto3" json:"specificPres,omitempty"`
}

func (x *UpdateEnvDataRequest) Reset() {
	*x = UpdateEnvDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEnvDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvDataRequest) ProtoMessage() {}

func (x *UpdateEnvDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{47}
}

func (x *UpdateEnvDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEnvDataRequest) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *UpdateEnvDataRequest) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *UpdateEnvDataRequest) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *UpdateEnvDataRequest) GetSpecificPres() float64 {
	if x != nil {
		return x.SpecificPres
	}
	return 0
}

type DeleteEnvDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEnvDataRequest) Reset() {
	*x = DeleteEnvDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEnvDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvDataRequest) ProtoMessage() {}

func (x *DeleteEnvDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteEnvDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateGasketDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasketId        string  `protobuf:"bytes,1,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	PermissiblePres float64 `protobuf:"fixed64,2,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
	Compression     float64 `protobuf:"fixed64,3,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64 `protobuf:"fixed64,4,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	Thickness       float64 `protobuf:"fixed64,5,opt,name=thickness,proto3" json:"thickness,omitempty"`
	TypeId          string  `protobuf:"bytes,6,opt,name=typeId,proto3" json:"typeId,omitempty"`
}

func (x *CreateGasketDataRequest) Reset() {
	*x = CreateGasketDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGasketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGasketDataRequest) ProtoMessage() {}

func (x *CreateGasketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGasketDataRequest.ProtoReflect.Descriptor instead.
func (*CreateGasketDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{49}
}

func (x *CreateGasketDataRequest) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *CreateGasketDataRequest) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

func (x *CreateGasketDataRequest) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *CreateGasketDataRequest) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *CreateGasketDataRequest) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *CreateGasketDataRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

type UpdateGasketDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GasketId        string  `protobuf:"bytes,2,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	PermissiblePres float64 `protobuf:"fixed64,3,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
	Compression     float64 `protobuf:"fixed64,4,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64 `protobuf:"fixed64,5,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	Thickness       float64 `protobuf:"fixed64,6,opt,name=thickness,proto3" json:"thickness,omitempty"`
	TypeId          string  `protobuf:"bytes,7,opt,name=typeId,proto3" json:"typeId,omitempty"`
}

func (x *UpdateGasketDataRequest) Reset() {
	*x = UpdateGasketDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGasketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGasketDataRequest) ProtoMessage() {}

func (x *UpdateGasketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGasketDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateGasketDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateGasketDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGasketDataRequest) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *UpdateGasketDataRequest) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

func (x *UpdateGasketDataRequest) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *UpdateGasketDataRequest) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *UpdateGasketDataRequest) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *UpdateGasketDataRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

type DeleteGasketDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGasketDataRequest) Reset() {
	*x = DeleteGasketDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGasketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGasketDataRequest) ProtoMessage() {}

func (x *DeleteGasketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGasketDataRequest.ProtoReflect.Descriptor instead.
func (*DeleteGasketDataRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{51}
}

func (x *DeleteGasketDataRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBoltsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBoltsRequest) Reset() {
	*x = GetBoltsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoltsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoltsRequest) ProtoMessage() {}

func (x *GetBoltsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoltsRequest.ProtoReflect.Descriptor instead.
func (*GetBoltsRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{52}
}

type CreateBoltRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Diameter int32   `protobuf:"varint,2,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area     float64 `protobuf:"fixed64,3,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *CreateBoltRequest) Reset() {
	*x = CreateBoltRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBoltRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBoltRequest) ProtoMessage() {}

func (x *CreateBoltRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBoltRequest.ProtoReflect.Descriptor instead.
func (*CreateBoltRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{53}
}

func (x *CreateBoltRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateBoltRequest) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *CreateBoltRequest) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type UpdateBoltRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Diameter int32   `protobuf:"varint,3,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area     float64 `protobuf:"fixed64,4,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *UpdateBoltRequest) Reset() {
	*x = UpdateBoltRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBoltRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBoltRequest) ProtoMessage() {}

func (x *UpdateBoltRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBoltRequest.ProtoReflect.Descriptor instead.
func (*UpdateBoltRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateBoltRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateBoltRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateBoltRequest) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *UpdateBoltRequest) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type DeleteBoltRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBoltRequest) Reset() {
	*x = DeleteBoltRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBoltRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBoltRequest) ProtoMessage() {}

func (x *DeleteBoltRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBoltRequest.ProtoReflect.Descriptor instead.
func (*DeleteBoltRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{55}
}

func (x *DeleteBoltRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Bolt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Diameter int32   `protobuf:"varint,3,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area     float64 `protobuf:"fixed64,4,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *Bolt) Reset() {
	*x = Bolt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bolt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bolt) ProtoMessage() {}

func (x *Bolt) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bolt.ProtoReflect.Descriptor instead.
func (*Bolt) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{56}
}

func (x *Bolt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Bolt) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Bolt) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *Bolt) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

type BoltsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bolts []*Bolt `protobuf:"bytes,1,rep,name=bolts,proto3" json:"bolts,omitempty"`
}

func (x *BoltsResponse) Reset() {
	*x = BoltsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoltsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoltsResponse) ProtoMessage() {}

func (x *BoltsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoltsResponse.ProtoReflect.Descriptor instead.
func (*BoltsResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{57}
}

func (x *BoltsResponse) GetBolts() []*Bolt {
	if x != nil {
		return x.Bolts
	}
	return nil
}

type GetTypeFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTypeFlangeRequest) Reset() {
	*x = GetTypeFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTypeFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTypeFlangeRequest) ProtoMessage() {}

func (x *GetTypeFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTypeFlangeRequest.ProtoReflect.Descriptor instead.
func (*GetTypeFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{58}
}

type CreateTypeFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *CreateTypeFlangeRequest) Reset() {
	*x = CreateTypeFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTypeFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTypeFlangeRequest) ProtoMessage() {}

func (x *CreateTypeFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTypeFlangeRequest.ProtoReflect.Descriptor instead.
func (*CreateTypeFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{59}
}

func (x *CreateTypeFlangeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTypeFlangeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type UpdateTypeFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *UpdateTypeFlangeRequest) Reset() {
	*x = UpdateTypeFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTypeFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTypeFlangeRequest) ProtoMessage() {}

func (x *UpdateTypeFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTypeFlangeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTypeFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{60}
}

func (x *UpdateTypeFlangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTypeFlangeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTypeFlangeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type DeleteTypeFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTypeFlangeRequest) Reset() {
	*x = DeleteTypeFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTypeFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTypeFlangeRequest) ProtoMessage() {}

func (x *DeleteTypeFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTypeFlangeRequest.ProtoReflect.Descriptor instead.
func (*DeleteTypeFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{61}
}

func (x *DeleteTypeFlangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TypeFlange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *TypeFlange) Reset() {
	*x = TypeFlange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeFlange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeFlange) ProtoMessage() {}

func (x *TypeFlange) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeFlange.ProtoReflect.Descriptor instead.
func (*TypeFlange) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{62}
}

func (x *TypeFlange) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TypeFlange) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TypeFlange) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type TypeFlangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFlanges []*TypeFlange `protobuf:"bytes,1,rep,name=typeFlanges,proto3" json:"typeFlanges,omitempty"`
}

func (x *TypeFlangeResponse) Reset() {
	*x = TypeFlangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeFlangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeFlangeResponse) ProtoMessage() {}

func (x *TypeFlangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeFlangeResponse.ProtoReflect.Descriptor instead.
func (*TypeFlangeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{63}
}

func (x *TypeFlangeResponse) GetTypeFlanges() []*TypeFlange {
	if x != nil {
		return x.TypeFlanges
	}
	return nil
}

type GetStandartsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId string `protobuf:"bytes,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
}

func (x *GetStandartsRequest) Reset() {
	*x = GetStandartsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStandartsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStandartsRequest) ProtoMessage() {}

func (x *GetStandartsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStandartsRequest.ProtoReflect.Descriptor instead.
func (*GetStandartsRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{64}
}

func (x *GetStandartsRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

type CreateStandartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	TypeId    string   `protobuf:"bytes,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	TitleDn   string   `protobuf:"bytes,3,opt,name=titleDn,proto3" json:"titleDn,omitempty"`
	TitlePn   string   `protobuf:"bytes,4,opt,name=titlePn,proto3" json:"titlePn,omitempty"`
	IsNeedRow bool     `protobuf:"varint,5,opt,name=isNeedRow,proto3" json:"isNeedRow,omitempty"`
	Rows      []string `protobuf:"bytes,6,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *CreateStandartRequest) Reset() {
	*x = CreateStandartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStandartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStandartRequest) ProtoMessage() {}

func (x *CreateStandartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStandartRequest.ProtoReflect.Descriptor instead.
func (*CreateStandartRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{65}
}

func (x *CreateStandartRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateStandartRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *CreateStandartRequest) GetTitleDn() string {
	if x != nil {
		return x.TitleDn
	}
	return ""
}

func (x *CreateStandartRequest) GetTitlePn() string {
	if x != nil {
		return x.TitlePn
	}
	return ""
}

func (x *CreateStandartRequest) GetIsNeedRow() bool {
	if x != nil {
		return x.IsNeedRow
	}
	return false
}

func (x *CreateStandartRequest) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type UpdateStandartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	TypeId    string   `protobuf:"bytes,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	TitleDn   string   `protobuf:"bytes,4,opt,name=titleDn,proto3" json:"titleDn,omitempty"`
	TitlePn   string   `protobuf:"bytes,5,opt,name=titlePn,proto3" json:"titlePn,omitempty"`
	IsNeedRow bool     `protobuf:"varint,6,opt,name=isNeedRow,proto3" json:"isNeedRow,omitempty"`
	Rows      []string `protobuf:"bytes,7,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *UpdateStandartRequest) Reset() {
	*x = UpdateStandartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStandartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStandartRequest) ProtoMessage() {}

func (x *UpdateStandartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStandartRequest.ProtoReflect.Descriptor instead.
func (*UpdateStandartRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{66}
}

func (x *UpdateStandartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateStandartRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateStandartRequest) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *UpdateStandartRequest) GetTitleDn() string {
	if x != nil {
		return x.TitleDn
	}
	return ""
}

func (x *UpdateStandartRequest) GetTitlePn() string {
	if x != nil {
		return x.TitlePn
	}
	return ""
}

func (x *UpdateStandartRequest) GetIsNeedRow() bool {
	if x != nil {
		return x.IsNeedRow
	}
	return false
}

func (x *UpdateStandartRequest) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type DeleteStandartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteStandartRequest) Reset() {
	*x = DeleteStandartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStandartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStandartRequest) ProtoMessage() {}

func (x *DeleteStandartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStandartRequest.ProtoReflect.Descriptor instead.
func (*DeleteStandartRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteStandartRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StandartWithSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string                   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	TypeId    string                   `protobuf:"bytes,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	Sizes     *BasisFlangeSizeResponse `protobuf:"bytes,4,opt,name=sizes,proto3" json:"sizes,omitempty"`
	TitleDn   string                   `protobuf:"bytes,5,opt,name=titleDn,proto3" json:"titleDn,omitempty"`
	TitlePn   string                   `protobuf:"bytes,6,opt,name=titlePn,proto3" json:"titlePn,omitempty"`
	IsNeedRow bool                     `protobuf:"varint,7,opt,name=isNeedRow,proto3" json:"isNeedRow,omitempty"`
	Rows      []string                 `protobuf:"bytes,8,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *StandartWithSize) Reset() {
	*x = StandartWithSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandartWithSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandartWithSize) ProtoMessage() {}

func (x *StandartWithSize) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandartWithSize.ProtoReflect.Descriptor instead.
func (*StandartWithSize) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{68}
}

func (x *StandartWithSize) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StandartWithSize) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StandartWithSize) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *StandartWithSize) GetSizes() *BasisFlangeSizeResponse {
	if x != nil {
		return x.Sizes
	}
	return nil
}

func (x *StandartWithSize) GetTitleDn() string {
	if x != nil {
		return x.TitleDn
	}
	return ""
}

func (x *StandartWithSize) GetTitlePn() string {
	if x != nil {
		return x.TitlePn
	}
	return ""
}

func (x *StandartWithSize) GetIsNeedRow() bool {
	if x != nil {
		return x.IsNeedRow
	}
	return false
}

func (x *StandartWithSize) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Standart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title     string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	TypeId    string   `protobuf:"bytes,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	TitleDn   string   `protobuf:"bytes,4,opt,name=titleDn,proto3" json:"titleDn,omitempty"`
	TitlePn   string   `protobuf:"bytes,5,opt,name=titlePn,proto3" json:"titlePn,omitempty"`
	IsNeedRow bool     `protobuf:"varint,6,opt,name=isNeedRow,proto3" json:"isNeedRow,omitempty"`
	Rows      []string `protobuf:"bytes,7,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *Standart) Reset() {
	*x = Standart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Standart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Standart) ProtoMessage() {}

func (x *Standart) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Standart.ProtoReflect.Descriptor instead.
func (*Standart) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{69}
}

func (x *Standart) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Standart) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Standart) GetTypeId() string {
	if x != nil {
		return x.TypeId
	}
	return ""
}

func (x *Standart) GetTitleDn() string {
	if x != nil {
		return x.TitleDn
	}
	return ""
}

func (x *Standart) GetTitlePn() string {
	if x != nil {
		return x.TitlePn
	}
	return ""
}

func (x *Standart) GetIsNeedRow() bool {
	if x != nil {
		return x.IsNeedRow
	}
	return false
}

func (x *Standart) GetRows() []string {
	if x != nil {
		return x.Rows
	}
	return nil
}

type StandartsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standarts []*Standart `protobuf:"bytes,1,rep,name=standarts,proto3" json:"standarts,omitempty"`
}

func (x *StandartsResponse) Reset() {
	*x = StandartsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandartsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandartsResponse) ProtoMessage() {}

func (x *StandartsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandartsResponse.ProtoReflect.Descriptor instead.
func (*StandartsResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{70}
}

func (x *StandartsResponse) GetStandarts() []*Standart {
	if x != nil {
		return x.Standarts
	}
	return nil
}

type StandartsWithSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Standarts []*StandartWithSize `protobuf:"bytes,1,rep,name=standarts,proto3" json:"standarts,omitempty"`
}

func (x *StandartsWithSizeResponse) Reset() {
	*x = StandartsWithSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StandartsWithSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandartsWithSizeResponse) ProtoMessage() {}

func (x *StandartsWithSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandartsWithSizeResponse.ProtoReflect.Descriptor instead.
func (*StandartsWithSizeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{71}
}

func (x *StandartsWithSizeResponse) GetStandarts() []*StandartWithSize {
	if x != nil {
		return x.Standarts
	}
	return nil
}

type GetFlangeSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandId string  `protobuf:"bytes,1,opt,name=standId,proto3" json:"standId,omitempty"`
	Pn      float64 `protobuf:"fixed64,2,opt,name=pn,proto3" json:"pn,omitempty"`
	D       float64 `protobuf:"fixed64,3,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *GetFlangeSizeRequest) Reset() {
	*x = GetFlangeSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlangeSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlangeSizeRequest) ProtoMessage() {}

func (x *GetFlangeSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlangeSizeRequest.ProtoReflect.Descriptor instead.
func (*GetFlangeSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{72}
}

func (x *GetFlangeSizeRequest) GetStandId() string {
	if x != nil {
		return x.StandId
	}
	return ""
}

func (x *GetFlangeSizeRequest) GetPn() float64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *GetFlangeSizeRequest) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

type CreateFlangeSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandId string  `protobuf:"bytes,1,opt,name=standId,proto3" json:"standId,omitempty"`
	Pn      float64 `protobuf:"fixed64,2,opt,name=pn,proto3" json:"pn,omitempty"`
	D       float64 `protobuf:"fixed64,3,opt,name=d,proto3" json:"d,omitempty"`
	D6      float64 `protobuf:"fixed64,4,opt,name=d6,proto3" json:"d6,omitempty"`
	DOut    float64 `protobuf:"fixed64,5,opt,name=dOut,proto3" json:"dOut,omitempty"`
	H       float64 `protobuf:"fixed64,6,opt,name=h,proto3" json:"h,omitempty"`
	S0      float64 `protobuf:"fixed64,7,opt,name=s0,proto3" json:"s0,omitempty"`
	S1      float64 `protobuf:"fixed64,8,opt,name=s1,proto3" json:"s1,omitempty"`
	Length  float64 `protobuf:"fixed64,9,opt,name=length,proto3" json:"length,omitempty"`
	Count   int32   `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	BoltId  string  `protobuf:"bytes,11,opt,name=boltId,proto3" json:"boltId,omitempty"`
}

func (x *CreateFlangeSizeRequest) Reset() {
	*x = CreateFlangeSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFlangeSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFlangeSizeRequest) ProtoMessage() {}

func (x *CreateFlangeSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFlangeSizeRequest.ProtoReflect.Descriptor instead.
func (*CreateFlangeSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{73}
}

func (x *CreateFlangeSizeRequest) GetStandId() string {
	if x != nil {
		return x.StandId
	}
	return ""
}

func (x *CreateFlangeSizeRequest) GetPn() float64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetS0() float64 {
	if x != nil {
		return x.S0
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetS1() float64 {
	if x != nil {
		return x.S1
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CreateFlangeSizeRequest) GetBoltId() string {
	if x != nil {
		return x.BoltId
	}
	return ""
}

type UpdateFlangeSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StandId string  `protobuf:"bytes,2,opt,name=standId,proto3" json:"standId,omitempty"`
	Pn      float64 `protobuf:"fixed64,3,opt,name=pn,proto3" json:"pn,omitempty"`
	D       float64 `protobuf:"fixed64,4,opt,name=d,proto3" json:"d,omitempty"`
	D6      float64 `protobuf:"fixed64,5,opt,name=d6,proto3" json:"d6,omitempty"`
	DOut    float64 `protobuf:"fixed64,6,opt,name=dOut,proto3" json:"dOut,omitempty"`
	H       float64 `protobuf:"fixed64,7,opt,name=h,proto3" json:"h,omitempty"`
	S0      float64 `protobuf:"fixed64,8,opt,name=s0,proto3" json:"s0,omitempty"`
	S1      float64 `protobuf:"fixed64,9,opt,name=s1,proto3" json:"s1,omitempty"`
	Length  float64 `protobuf:"fixed64,10,opt,name=length,proto3" json:"length,omitempty"`
	Count   int32   `protobuf:"varint,11,opt,name=count,proto3" json:"count,omitempty"`
	BoltId  string  `protobuf:"bytes,12,opt,name=boltId,proto3" json:"boltId,omitempty"`
}

func (x *UpdateFlangeSizeRequest) Reset() {
	*x = UpdateFlangeSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlangeSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlangeSizeRequest) ProtoMessage() {}

func (x *UpdateFlangeSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlangeSizeRequest.ProtoReflect.Descriptor instead.
func (*UpdateFlangeSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{74}
}

func (x *UpdateFlangeSizeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFlangeSizeRequest) GetStandId() string {
	if x != nil {
		return x.StandId
	}
	return ""
}

func (x *UpdateFlangeSizeRequest) GetPn() float64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetS0() float64 {
	if x != nil {
		return x.S0
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetS1() float64 {
	if x != nil {
		return x.S1
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UpdateFlangeSizeRequest) GetBoltId() string {
	if x != nil {
		return x.BoltId
	}
	return ""
}

type DeleteFlangeSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFlangeSizeRequest) Reset() {
	*x = DeleteFlangeSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFlangeSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFlangeSizeRequest) ProtoMessage() {}

func (x *DeleteFlangeSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFlangeSizeRequest.ProtoReflect.Descriptor instead.
func (*DeleteFlangeSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{75}
}

func (x *DeleteFlangeSizeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetBasisFlangeSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsUseRow bool   `protobuf:"varint,1,opt,name=isUseRow,proto3" json:"isUseRow,omitempty"`
	StandId  string `protobuf:"bytes,2,opt,name=standId,proto3" json:"standId,omitempty"`
}

func (x *GetBasisFlangeSizeRequest) Reset() {
	*x = GetBasisFlangeSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasisFlangeSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasisFlangeSizeRequest) ProtoMessage() {}

func (x *GetBasisFlangeSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasisFlangeSizeRequest.ProtoReflect.Descriptor instead.
func (*GetBasisFlangeSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{76}
}

func (x *GetBasisFlangeSizeRequest) GetIsUseRow() bool {
	if x != nil {
		return x.IsUseRow
	}
	return false
}

func (x *GetBasisFlangeSizeRequest) GetStandId() string {
	if x != nil {
		return x.StandId
	}
	return ""
}

type BasisFlangeSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dn float64   `protobuf:"fixed64,1,opt,name=dn,proto3" json:"dn,omitempty"`
	Pn []float64 `protobuf:"fixed64,2,rep,packed,name=pn,proto3" json:"pn,omitempty"`
}

func (x *BasisFlangeSize) Reset() {
	*x = BasisFlangeSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasisFlangeSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasisFlangeSize) ProtoMessage() {}

func (x *BasisFlangeSize) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasisFlangeSize.ProtoReflect.Descriptor instead.
func (*BasisFlangeSize) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{77}
}

func (x *BasisFlangeSize) GetDn() float64 {
	if x != nil {
		return x.Dn
	}
	return 0
}

func (x *BasisFlangeSize) GetPn() []float64 {
	if x != nil {
		return x.Pn
	}
	return nil
}

type BasisFlangeSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SizeRow1 []*BasisFlangeSize `protobuf:"bytes,1,rep,name=sizeRow1,proto3" json:"sizeRow1,omitempty"`
	SizeRow2 []*BasisFlangeSize `protobuf:"bytes,2,rep,name=sizeRow2,proto3" json:"sizeRow2,omitempty"`
}

func (x *BasisFlangeSizeResponse) Reset() {
	*x = BasisFlangeSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasisFlangeSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasisFlangeSizeResponse) ProtoMessage() {}

func (x *BasisFlangeSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasisFlangeSizeResponse.ProtoReflect.Descriptor instead.
func (*BasisFlangeSizeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{78}
}

func (x *BasisFlangeSizeResponse) GetSizeRow1() []*BasisFlangeSize {
	if x != nil {
		return x.SizeRow1
	}
	return nil
}

func (x *BasisFlangeSizeResponse) GetSizeRow2() []*BasisFlangeSize {
	if x != nil {
		return x.SizeRow2
	}
	return nil
}

// -----------------------------------------------------------------------
type MaterialData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	AlphaF      float64 `protobuf:"fixed64,2,opt,name=alphaF,proto3" json:"alphaF,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,3,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,4,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20   float64 `protobuf:"fixed64,5,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma       float64 `protobuf:"fixed64,6,opt,name=sigma,proto3" json:"sigma,omitempty"`
}

func (x *MaterialData) Reset() {
	*x = MaterialData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialData) ProtoMessage() {}

func (x *MaterialData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialData.ProtoReflect.Descriptor instead.
func (*MaterialData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{79}
}

func (x *MaterialData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaterialData) GetAlphaF() float64 {
	if x != nil {
		return x.AlphaF
	}
	return 0
}

func (x *MaterialData) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *MaterialData) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *MaterialData) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *MaterialData) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

type FlangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         FlangeData_Type  `protobuf:"varint,1,opt,name=type,proto3,enum=moment_api.FlangeData_Type" json:"type,omitempty"`
	StandartId   string           `protobuf:"bytes,2,opt,name=standartId,proto3" json:"standartId,omitempty"`
	MarkId       string           `protobuf:"bytes,3,opt,name=markId,proto3" json:"markId,omitempty"`
	Dy           int32            `protobuf:"varint,4,opt,name=dy,proto3" json:"dy,omitempty"`
	Py           float64          `protobuf:"fixed64,5,opt,name=py,proto3" json:"py,omitempty"`
	Corrosion    float64          `protobuf:"fixed64,6,opt,name=corrosion,proto3" json:"corrosion,omitempty"`
	Size         *FlangeData_Size `protobuf:"bytes,7,opt,name=size,proto3" json:"size,omitempty"`
	Material     *MaterialData    `protobuf:"bytes,8,opt,name=material,proto3" json:"material,omitempty"`
	Temp         float64          `protobuf:"fixed64,9,opt,name=temp,proto3" json:"temp,omitempty"`
	RingMarkId   string           `protobuf:"bytes,10,opt,name=ringMarkId,proto3" json:"ringMarkId,omitempty"`
	RingMaterial *MaterialData    `protobuf:"bytes,11,opt,name=ringMaterial,proto3" json:"ringMaterial,omitempty"`
}

func (x *FlangeData) Reset() {
	*x = FlangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeData) ProtoMessage() {}

func (x *FlangeData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeData.ProtoReflect.Descriptor instead.
func (*FlangeData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{80}
}

func (x *FlangeData) GetType() FlangeData_Type {
	if x != nil {
		return x.Type
	}
	return FlangeData_welded
}

func (x *FlangeData) GetStandartId() string {
	if x != nil {
		return x.StandartId
	}
	return ""
}

func (x *FlangeData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *FlangeData) GetDy() int32 {
	if x != nil {
		return x.Dy
	}
	return 0
}

func (x *FlangeData) GetPy() float64 {
	if x != nil {
		return x.Py
	}
	return 0
}

func (x *FlangeData) GetCorrosion() float64 {
	if x != nil {
		return x.Corrosion
	}
	return 0
}

func (x *FlangeData) GetSize() *FlangeData_Size {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *FlangeData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *FlangeData) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *FlangeData) GetRingMarkId() string {
	if x != nil {
		return x.RingMarkId
	}
	return ""
}

func (x *FlangeData) GetRingMaterial() *MaterialData {
	if x != nil {
		return x.RingMaterial
	}
	return nil
}

type BoltData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId   string        `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Diameter int32         `protobuf:"varint,2,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Count    int32         `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Material *MaterialData `protobuf:"bytes,4,opt,name=material,proto3" json:"material,omitempty"`
	Temp     float64       `protobuf:"fixed64,5,opt,name=temp,proto3" json:"temp,omitempty"`
	Title    string        `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Area     float64       `protobuf:"fixed64,7,opt,name=area,proto3" json:"area,omitempty"`
	Name     string        `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BoltData) Reset() {
	*x = BoltData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoltData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoltData) ProtoMessage() {}

func (x *BoltData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoltData.ProtoReflect.Descriptor instead.
func (*BoltData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{81}
}

func (x *BoltData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *BoltData) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *BoltData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BoltData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *BoltData) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *BoltData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BoltData) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *BoltData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WasherData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId    string        `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Thickness float64       `protobuf:"fixed64,2,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Material  *MaterialData `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *WasherData) Reset() {
	*x = WasherData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WasherData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasherData) ProtoMessage() {}

func (x *WasherData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasherData.ProtoReflect.Descriptor instead.
func (*WasherData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{82}
}

func (x *WasherData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *WasherData) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *WasherData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

type GasketData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasketId  string           `protobuf:"bytes,1,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	EnvId     string           `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	Thickness float64          `protobuf:"fixed64,3,opt,name=thickness,proto3" json:"thickness,omitempty"`
	DOut      float64          `protobuf:"fixed64,4,opt,name=d_out,json=dOut,proto3" json:"d_out,omitempty"`
	DIn       float64          `protobuf:"fixed64,5,opt,name=d_in,json=dIn,proto3" json:"d_in,omitempty"`
	Data      *GasketData_Data `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GasketData) Reset() {
	*x = GasketData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketData) ProtoMessage() {}

func (x *GasketData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketData.ProtoReflect.Descriptor instead.
func (*GasketData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{83}
}

func (x *GasketData) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *GasketData) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GasketData) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *GasketData) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *GasketData) GetDIn() float64 {
	if x != nil {
		return x.DIn
	}
	return 0
}

func (x *GasketData) GetData() *GasketData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type EmbedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId    string        `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Thickness float64       `protobuf:"fixed64,2,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Material  *MaterialData `protobuf:"bytes,3,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *EmbedData) Reset() {
	*x = EmbedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedData) ProtoMessage() {}

func (x *EmbedData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedData.ProtoReflect.Descriptor instead.
func (*EmbedData) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{84}
}

func (x *EmbedData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *EmbedData) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *EmbedData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

type CalcFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure       float64                       `protobuf:"fixed64,1,opt,name=pressure,proto3" json:"pressure,omitempty"`
	AxialForce     int32                         `protobuf:"varint,2,opt,name=axialForce,proto3" json:"axialForce,omitempty"`
	BendingMoment  int32                         `protobuf:"varint,3,opt,name=bendingMoment,proto3" json:"bendingMoment,omitempty"`
	Temp           float64                       `protobuf:"fixed64,4,opt,name=temp,proto3" json:"temp,omitempty"`
	IsWork         bool                          `protobuf:"varint,5,opt,name=isWork,proto3" json:"isWork,omitempty"`
	Flanges        CalcFlangeRequest_Flanges     `protobuf:"varint,6,opt,name=flanges,proto3,enum=moment_api.CalcFlangeRequest_Flanges" json:"flanges,omitempty"`
	IsSameFlange   bool                          `protobuf:"varint,7,opt,name=isSameFlange,proto3" json:"isSameFlange,omitempty"`
	IsEmbedded     bool                          `protobuf:"varint,8,opt,name=isEmbedded,proto3" json:"isEmbedded,omitempty"`
	Type           CalcFlangeRequest_Type        `protobuf:"varint,9,opt,name=type,proto3,enum=moment_api.CalcFlangeRequest_Type" json:"type,omitempty"`
	Condition      CalcFlangeRequest_Condition   `protobuf:"varint,10,opt,name=condition,proto3,enum=moment_api.CalcFlangeRequest_Condition" json:"condition,omitempty"`
	Calculation    CalcFlangeRequest_Calcutation `protobuf:"varint,11,opt,name=calculation,proto3,enum=moment_api.CalcFlangeRequest_Calcutation" json:"calculation,omitempty"`
	FlangesData    []*FlangeData                 `protobuf:"bytes,12,rep,name=flangesData,proto3" json:"flangesData,omitempty"`
	Bolts          *BoltData                     `protobuf:"bytes,13,opt,name=bolts,proto3" json:"bolts,omitempty"`
	Gasket         *GasketData                   `protobuf:"bytes,14,opt,name=gasket,proto3" json:"gasket,omitempty"`
	Embed          *EmbedData                    `protobuf:"bytes,15,opt,name=embed,proto3" json:"embed,omitempty"`
	IsUseWasher    bool                          `protobuf:"varint,16,opt,name=isUseWasher,proto3" json:"isUseWasher,omitempty"`
	Washer         []*WasherData                 `protobuf:"bytes,17,rep,name=washer,proto3" json:"washer,omitempty"`
	IsNeedFormulas bool                          `protobuf:"varint,18,opt,name=isNeedFormulas,proto3" json:"isNeedFormulas,omitempty"`
}

func (x *CalcFlangeRequest) Reset() {
	*x = CalcFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcFlangeRequest) ProtoMessage() {}

func (x *CalcFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcFlangeRequest.ProtoReflect.Descriptor instead.
func (*CalcFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{85}
}

func (x *CalcFlangeRequest) GetPressure() float64 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *CalcFlangeRequest) GetAxialForce() int32 {
	if x != nil {
		return x.AxialForce
	}
	return 0
}

func (x *CalcFlangeRequest) GetBendingMoment() int32 {
	if x != nil {
		return x.BendingMoment
	}
	return 0
}

func (x *CalcFlangeRequest) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *CalcFlangeRequest) GetIsWork() bool {
	if x != nil {
		return x.IsWork
	}
	return false
}

func (x *CalcFlangeRequest) GetFlanges() CalcFlangeRequest_Flanges {
	if x != nil {
		return x.Flanges
	}
	return CalcFlangeRequest_isolated
}

func (x *CalcFlangeRequest) GetIsSameFlange() bool {
	if x != nil {
		return x.IsSameFlange
	}
	return false
}

func (x *CalcFlangeRequest) GetIsEmbedded() bool {
	if x != nil {
		return x.IsEmbedded
	}
	return false
}

func (x *CalcFlangeRequest) GetType() CalcFlangeRequest_Type {
	if x != nil {
		return x.Type
	}
	return CalcFlangeRequest_bolt
}

func (x *CalcFlangeRequest) GetCondition() CalcFlangeRequest_Condition {
	if x != nil {
		return x.Condition
	}
	return CalcFlangeRequest_uncontrollable
}

func (x *CalcFlangeRequest) GetCalculation() CalcFlangeRequest_Calcutation {
	if x != nil {
		return x.Calculation
	}
	return CalcFlangeRequest_basis
}

func (x *CalcFlangeRequest) GetFlangesData() []*FlangeData {
	if x != nil {
		return x.FlangesData
	}
	return nil
}

func (x *CalcFlangeRequest) GetBolts() *BoltData {
	if x != nil {
		return x.Bolts
	}
	return nil
}

func (x *CalcFlangeRequest) GetGasket() *GasketData {
	if x != nil {
		return x.Gasket
	}
	return nil
}

func (x *CalcFlangeRequest) GetEmbed() *EmbedData {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *CalcFlangeRequest) GetIsUseWasher() bool {
	if x != nil {
		return x.IsUseWasher
	}
	return false
}

func (x *CalcFlangeRequest) GetWasher() []*WasherData {
	if x != nil {
		return x.Washer
	}
	return nil
}

func (x *CalcFlangeRequest) GetIsNeedFormulas() bool {
	if x != nil {
		return x.IsNeedFormulas
	}
	return false
}

type FlangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DOut         float64 `protobuf:"fixed64,1,opt,name=dOut,proto3" json:"dOut,omitempty"`
	D            float64 `protobuf:"fixed64,2,opt,name=d,proto3" json:"d,omitempty"`
	Dk           float64 `protobuf:"fixed64,3,opt,name=dk,proto3" json:"dk,omitempty"`
	Dnk          float64 `protobuf:"fixed64,4,opt,name=dnk,proto3" json:"dnk,omitempty"`
	Ds           float64 `protobuf:"fixed64,5,opt,name=ds,proto3" json:"ds,omitempty"`
	H            float64 `protobuf:"fixed64,6,opt,name=h,proto3" json:"h,omitempty"`
	Hk           float64 `protobuf:"fixed64,7,opt,name=hk,proto3" json:"hk,omitempty"`
	S0           float64 `protobuf:"fixed64,8,opt,name=s0,proto3" json:"s0,omitempty"`
	S1           float64 `protobuf:"fixed64,9,opt,name=s1,proto3" json:"s1,omitempty"`
	L            float64 `protobuf:"fixed64,10,opt,name=l,proto3" json:"l,omitempty"`
	D6           float64 `protobuf:"fixed64,11,opt,name=d6,proto3" json:"d6,omitempty"`
	C            float64 `protobuf:"fixed64,12,opt,name=c,proto3" json:"c,omitempty"`
	Tf           float64 `protobuf:"fixed64,13,opt,name=tf,proto3" json:"tf,omitempty"`
	Tk           float64 `protobuf:"fixed64,14,opt,name=tk,proto3" json:"tk,omitempty"`
	AlphaK       float64 `protobuf:"fixed64,15,opt,name=alphaK,proto3" json:"alphaK,omitempty"`
	EpsilonKAt20 float64 `protobuf:"fixed64,16,opt,name=epsilonKAt20,proto3" json:"epsilonKAt20,omitempty"`
	EpsilonK     float64 `protobuf:"fixed64,17,opt,name=epsilonK,proto3" json:"epsilonK,omitempty"`
	SigmaKAt20   float64 `protobuf:"fixed64,18,opt,name=sigmaKAt20,proto3" json:"sigmaKAt20,omitempty"`
	SigmaK       float64 `protobuf:"fixed64,19,opt,name=sigmaK,proto3" json:"sigmaK,omitempty"`
	AlphaF       float64 `protobuf:"fixed64,20,opt,name=alphaF,proto3" json:"alphaF,omitempty"`
	EpsilonAt20  float64 `protobuf:"fixed64,21,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon      float64 `protobuf:"fixed64,22,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20    float64 `protobuf:"fixed64,23,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma        float64 `protobuf:"fixed64,24,opt,name=sigma,proto3" json:"sigma,omitempty"`
	SigmaM       float64 `protobuf:"fixed64,25,opt,name=sigmaM,proto3" json:"sigmaM,omitempty"`
	SigmaMAt20   float64 `protobuf:"fixed64,26,opt,name=sigmaMAt20,proto3" json:"sigmaMAt20,omitempty"`
	SigmaR       float64 `protobuf:"fixed64,27,opt,name=sigmaR,proto3" json:"sigmaR,omitempty"`
	SigmaRAt20   float64 `protobuf:"fixed64,28,opt,name=sigmaRAt20,proto3" json:"sigmaRAt20,omitempty"`
	Material     string  `protobuf:"bytes,29,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *FlangeResult) Reset() {
	*x = FlangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeResult) ProtoMessage() {}

func (x *FlangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeResult.ProtoReflect.Descriptor instead.
func (*FlangeResult) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{86}
}

func (x *FlangeResult) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *FlangeResult) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *FlangeResult) GetDk() float64 {
	if x != nil {
		return x.Dk
	}
	return 0
}

func (x *FlangeResult) GetDnk() float64 {
	if x != nil {
		return x.Dnk
	}
	return 0
}

func (x *FlangeResult) GetDs() float64 {
	if x != nil {
		return x.Ds
	}
	return 0
}

func (x *FlangeResult) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *FlangeResult) GetHk() float64 {
	if x != nil {
		return x.Hk
	}
	return 0
}

func (x *FlangeResult) GetS0() float64 {
	if x != nil {
		return x.S0
	}
	return 0
}

func (x *FlangeResult) GetS1() float64 {
	if x != nil {
		return x.S1
	}
	return 0
}

func (x *FlangeResult) GetL() float64 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *FlangeResult) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

func (x *FlangeResult) GetC() float64 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *FlangeResult) GetTf() float64 {
	if x != nil {
		return x.Tf
	}
	return 0
}

func (x *FlangeResult) GetTk() float64 {
	if x != nil {
		return x.Tk
	}
	return 0
}

func (x *FlangeResult) GetAlphaK() float64 {
	if x != nil {
		return x.AlphaK
	}
	return 0
}

func (x *FlangeResult) GetEpsilonKAt20() float64 {
	if x != nil {
		return x.EpsilonKAt20
	}
	return 0
}

func (x *FlangeResult) GetEpsilonK() float64 {
	if x != nil {
		return x.EpsilonK
	}
	return 0
}

func (x *FlangeResult) GetSigmaKAt20() float64 {
	if x != nil {
		return x.SigmaKAt20
	}
	return 0
}

func (x *FlangeResult) GetSigmaK() float64 {
	if x != nil {
		return x.SigmaK
	}
	return 0
}

func (x *FlangeResult) GetAlphaF() float64 {
	if x != nil {
		return x.AlphaF
	}
	return 0
}

func (x *FlangeResult) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *FlangeResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *FlangeResult) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *FlangeResult) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

func (x *FlangeResult) GetSigmaM() float64 {
	if x != nil {
		return x.SigmaM
	}
	return 0
}

func (x *FlangeResult) GetSigmaMAt20() float64 {
	if x != nil {
		return x.SigmaMAt20
	}
	return 0
}

func (x *FlangeResult) GetSigmaR() float64 {
	if x != nil {
		return x.SigmaR
	}
	return 0
}

func (x *FlangeResult) GetSigmaRAt20() float64 {
	if x != nil {
		return x.SigmaRAt20
	}
	return 0
}

func (x *FlangeResult) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

type BoltResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diameter    int32   `protobuf:"varint,1,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area        float64 `protobuf:"fixed64,2,opt,name=area,proto3" json:"area,omitempty"`
	Count       int32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Lenght      float64 `protobuf:"fixed64,4,opt,name=lenght,proto3" json:"lenght,omitempty"`
	Temp        float64 `protobuf:"fixed64,5,opt,name=temp,proto3" json:"temp,omitempty"`
	Alpha       float64 `protobuf:"fixed64,6,opt,name=alpha,proto3" json:"alpha,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,7,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,8,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20   float64 `protobuf:"fixed64,9,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma       float64 `protobuf:"fixed64,10,opt,name=sigma,proto3" json:"sigma,omitempty"`
}

func (x *BoltResult) Reset() {
	*x = BoltResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoltResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoltResult) ProtoMessage() {}

func (x *BoltResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoltResult.ProtoReflect.Descriptor instead.
func (*BoltResult) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{87}
}

func (x *BoltResult) GetDiameter() int32 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *BoltResult) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *BoltResult) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BoltResult) GetLenght() float64 {
	if x != nil {
		return x.Lenght
	}
	return 0
}

func (x *BoltResult) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *BoltResult) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *BoltResult) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *BoltResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *BoltResult) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *BoltResult) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

type GasketResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasketId        string  `protobuf:"bytes,1,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	EnvId           string  `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	Thickness       float64 `protobuf:"fixed64,3,opt,name=thickness,proto3" json:"thickness,omitempty"`
	DOut            float64 `protobuf:"fixed64,4,opt,name=d_out,json=dOut,proto3" json:"d_out,omitempty"`
	Width           float64 `protobuf:"fixed64,5,opt,name=width,proto3" json:"width,omitempty"`
	M               float64 `protobuf:"fixed64,6,opt,name=m,proto3" json:"m,omitempty"`
	Pres            float64 `protobuf:"fixed64,7,opt,name=pres,proto3" json:"pres,omitempty"`
	Compression     float64 `protobuf:"fixed64,8,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64 `protobuf:"fixed64,9,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	PermissiblePres float64 `protobuf:"fixed64,10,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
}

func (x *GasketResult) Reset() {
	*x = GasketResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketResult) ProtoMessage() {}

func (x *GasketResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketResult.ProtoReflect.Descriptor instead.
func (*GasketResult) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{88}
}

func (x *GasketResult) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *GasketResult) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GasketResult) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *GasketResult) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *GasketResult) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GasketResult) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *GasketResult) GetPres() float64 {
	if x != nil {
		return x.Pres
	}
	return 0
}

func (x *GasketResult) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *GasketResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *GasketResult) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

type EmbedResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarkId    string  `protobuf:"bytes,1,opt,name=markId,proto3" json:"markId,omitempty"`
	Thickness float64 `protobuf:"fixed64,2,opt,name=thickness,proto3" json:"thickness,omitempty"`
	Alpfa     float64 `protobuf:"fixed64,3,opt,name=alpfa,proto3" json:"alpfa,omitempty"`
	Temp      float64 `protobuf:"fixed64,4,opt,name=temp,proto3" json:"temp,omitempty"`
}

func (x *EmbedResult) Reset() {
	*x = EmbedResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmbedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbedResult) ProtoMessage() {}

func (x *EmbedResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbedResult.ProtoReflect.Descriptor instead.
func (*EmbedResult) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{89}
}

func (x *EmbedResult) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *EmbedResult) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *EmbedResult) GetAlpfa() float64 {
	if x != nil {
		return x.Alpfa
	}
	return 0
}

func (x *EmbedResult) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

type StrengthResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mkp       float64 `protobuf:"fixed64,1,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1      float64 `protobuf:"fixed64,2,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Cf        float64 `protobuf:"fixed64,3,opt,name=Cf,json=cf,proto3" json:"Cf,omitempty"`
	Dzv       float64 `protobuf:"fixed64,4,opt,name=Dzv,json=dzv,proto3" json:"Dzv,omitempty"`
	MM        float64 `protobuf:"fixed64,5,opt,name=MM,json=mM,proto3" json:"MM,omitempty"`
	MMk       float64 `protobuf:"fixed64,6,opt,name=MMk,json=mMk,proto3" json:"MMk,omitempty"`
	Mpk       float64 `protobuf:"fixed64,7,opt,name=Mpk,json=mpk,proto3" json:"Mpk,omitempty"`
	Mp        float64 `protobuf:"fixed64,8,opt,name=Mp,json=mp,proto3" json:"Mp,omitempty"`
	SigmaM1   float64 `protobuf:"fixed64,9,opt,name=sigmaM1,proto3" json:"sigmaM1,omitempty"`
	SigmaM0   float64 `protobuf:"fixed64,10,opt,name=sigmaM0,proto3" json:"sigmaM0,omitempty"`
	SigmaT    float64 `protobuf:"fixed64,11,opt,name=sigmaT,proto3" json:"sigmaT,omitempty"`
	SigmaR    float64 `protobuf:"fixed64,12,opt,name=sigmaR,proto3" json:"sigmaR,omitempty"`
	SigmaTp   float64 `protobuf:"fixed64,13,opt,name=sigmaTp,proto3" json:"sigmaTp,omitempty"`
	SigmaRp   float64 `protobuf:"fixed64,14,opt,name=sigmaRp,proto3" json:"sigmaRp,omitempty"`
	SigmaK    float64 `protobuf:"fixed64,15,opt,name=sigmaK,proto3" json:"sigmaK,omitempty"`
	SigmaP1   float64 `protobuf:"fixed64,16,opt,name=sigmaP1,proto3" json:"sigmaP1,omitempty"`
	SigmaP0   float64 `protobuf:"fixed64,17,opt,name=sigmaP0,proto3" json:"sigmaP0,omitempty"`
	SigmaMp   float64 `protobuf:"fixed64,18,opt,name=sigmaMp,proto3" json:"sigmaMp,omitempty"`
	SigmaMpm  float64 `protobuf:"fixed64,19,opt,name=sigmaMpm,proto3" json:"sigmaMpm,omitempty"`
	SigmaMp0  float64 `protobuf:"fixed64,20,opt,name=sigmaMp0,proto3" json:"sigmaMp0,omitempty"`
	SigmaMpm0 float64 `protobuf:"fixed64,21,opt,name=sigmaMpm0,proto3" json:"sigmaMpm0,omitempty"`
	SigmaMop  float64 `protobuf:"fixed64,22,opt,name=sigmaMop,proto3" json:"sigmaMop,omitempty"`
	SigmaKp   float64 `protobuf:"fixed64,23,opt,name=sigmaKp,proto3" json:"sigmaKp,omitempty"`
	Teta      float64 `protobuf:"fixed64,24,opt,name=teta,proto3" json:"teta,omitempty"`
	DTeta     float64 `protobuf:"fixed64,25,opt,name=dTeta,proto3" json:"dTeta,omitempty"`
	DTetaK    float64 `protobuf:"fixed64,26,opt,name=dTetaK,proto3" json:"dTetaK,omitempty"`
	TetaK     float64 `protobuf:"fixed64,27,opt,name=tetaK,proto3" json:"tetaK,omitempty"`
	Max1      float64 `protobuf:"fixed64,28,opt,name=Max1,json=max1,proto3" json:"Max1,omitempty"`
	Max2      float64 `protobuf:"fixed64,29,opt,name=Max2,json=max2,proto3" json:"Max2,omitempty"`
	Max3      float64 `protobuf:"fixed64,30,opt,name=Max3,json=max3,proto3" json:"Max3,omitempty"`
	Max4      float64 `protobuf:"fixed64,31,opt,name=Max4,json=max4,proto3" json:"Max4,omitempty"`
	Max5      float64 `protobuf:"fixed64,32,opt,name=Max5,json=max5,proto3" json:"Max5,omitempty"`
	Max6      float64 `protobuf:"fixed64,33,opt,name=Max6,json=max6,proto3" json:"Max6,omitempty"`
	Max7      float64 `protobuf:"fixed64,34,opt,name=Max7,json=max7,proto3" json:"Max7,omitempty"`
	Max8      float64 `protobuf:"fixed64,35,opt,name=Max8,json=max8,proto3" json:"Max8,omitempty"`
	Max9      float64 `protobuf:"fixed64,36,opt,name=Max9,json=max9,proto3" json:"Max9,omitempty"`
	Max10     float64 `protobuf:"fixed64,37,opt,name=Max10,json=max10,proto3" json:"Max10,omitempty"`
	Max11     float64 `protobuf:"fixed64,38,opt,name=Max11,json=max11,proto3" json:"Max11,omitempty"`
}

func (x *StrengthResult) Reset() {
	*x = StrengthResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StrengthResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrengthResult) ProtoMessage() {}

func (x *StrengthResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrengthResult.ProtoReflect.Descriptor instead.
func (*StrengthResult) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{90}
}

func (x *StrengthResult) GetMkp() float64 {
	if x != nil {
		return x.Mkp
	}
	return 0
}

func (x *StrengthResult) GetMkp1() float64 {
	if x != nil {
		return x.Mkp1
	}
	return 0
}

func (x *StrengthResult) GetCf() float64 {
	if x != nil {
		return x.Cf
	}
	return 0
}

func (x *StrengthResult) GetDzv() float64 {
	if x != nil {
		return x.Dzv
	}
	return 0
}

func (x *StrengthResult) GetMM() float64 {
	if x != nil {
		return x.MM
	}
	return 0
}

func (x *StrengthResult) GetMMk() float64 {
	if x != nil {
		return x.MMk
	}
	return 0
}

func (x *StrengthResult) GetMpk() float64 {
	if x != nil {
		return x.Mpk
	}
	return 0
}

func (x *StrengthResult) GetMp() float64 {
	if x != nil {
		return x.Mp
	}
	return 0
}

func (x *StrengthResult) GetSigmaM1() float64 {
	if x != nil {
		return x.SigmaM1
	}
	return 0
}

func (x *StrengthResult) GetSigmaM0() float64 {
	if x != nil {
		return x.SigmaM0
	}
	return 0
}

func (x *StrengthResult) GetSigmaT() float64 {
	if x != nil {
		return x.SigmaT
	}
	return 0
}

func (x *StrengthResult) GetSigmaR() float64 {
	if x != nil {
		return x.SigmaR
	}
	return 0
}

func (x *StrengthResult) GetSigmaTp() float64 {
	if x != nil {
		return x.SigmaTp
	}
	return 0
}

func (x *StrengthResult) GetSigmaRp() float64 {
	if x != nil {
		return x.SigmaRp
	}
	return 0
}

func (x *StrengthResult) GetSigmaK() float64 {
	if x != nil {
		return x.SigmaK
	}
	return 0
}

func (x *StrengthResult) GetSigmaP1() float64 {
	if x != nil {
		return x.SigmaP1
	}
	return 0
}

func (x *StrengthResult) GetSigmaP0() float64 {
	if x != nil {
		return x.SigmaP0
	}
	return 0
}

func (x *StrengthResult) GetSigmaMp() float64 {
	if x != nil {
		return x.SigmaMp
	}
	return 0
}

func (x *StrengthResult) GetSigmaMpm() float64 {
	if x != nil {
		return x.SigmaMpm
	}
	return 0
}

func (x *StrengthResult) GetSigmaMp0() float64 {
	if x != nil {
		return x.SigmaMp0
	}
	return 0
}

func (x *StrengthResult) GetSigmaMpm0() float64 {
	if x != nil {
		return x.SigmaMpm0
	}
	return 0
}

func (x *StrengthResult) GetSigmaMop() float64 {
	if x != nil {
		return x.SigmaMop
	}
	return 0
}

func (x *StrengthResult) GetSigmaKp() float64 {
	if x != nil {
		return x.SigmaKp
	}
	return 0
}

func (x *StrengthResult) GetTeta() float64 {
	if x != nil {
		return x.Teta
	}
	return 0
}

func (x *StrengthResult) GetDTeta() float64 {
	if x != nil {
		return x.DTeta
	}
	return 0
}

func (x *StrengthResult) GetDTetaK() float64 {
	if x != nil {
		return x.DTetaK
	}
	return 0
}

func (x *StrengthResult) GetTetaK() float64 {
	if x != nil {
		return x.TetaK
	}
	return 0
}

func (x *StrengthResult) GetMax1() float64 {
	if x != nil {
		return x.Max1
	}
	return 0
}

func (x *StrengthResult) GetMax2() float64 {
	if x != nil {
		return x.Max2
	}
	return 0
}

func (x *StrengthResult) GetMax3() float64 {
	if x != nil {
		return x.Max3
	}
	return 0
}

func (x *StrengthResult) GetMax4() float64 {
	if x != nil {
		return x.Max4
	}
	return 0
}

func (x *StrengthResult) GetMax5() float64 {
	if x != nil {
		return x.Max5
	}
	return 0
}

func (x *StrengthResult) GetMax6() float64 {
	if x != nil {
		return x.Max6
	}
	return 0
}

func (x *StrengthResult) GetMax7() float64 {
	if x != nil {
		return x.Max7
	}
	return 0
}

func (x *StrengthResult) GetMax8() float64 {
	if x != nil {
		return x.Max8
	}
	return 0
}

func (x *StrengthResult) GetMax9() float64 {
	if x != nil {
		return x.Max9
	}
	return 0
}

func (x *StrengthResult) GetMax10() float64 {
	if x != nil {
		return x.Max10
	}
	return 0
}

func (x *StrengthResult) GetMax11() float64 {
	if x != nil {
		return x.Max11
	}
	return 0
}

type CalcMomentStrength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FPb      float64           `protobuf:"fixed64,1,opt,name=fPb,proto3" json:"fPb,omitempty"`
	FPb1     float64           `protobuf:"fixed64,2,opt,name=fPb1,proto3" json:"fPb1,omitempty"`
	FPb2     float64           `protobuf:"fixed64,3,opt,name=fPb2,proto3" json:"fPb2,omitempty"`
	FPbr     float64           `protobuf:"fixed64,4,opt,name=fPbr,proto3" json:"fPbr,omitempty"`
	FSigmaB1 float64           `protobuf:"fixed64,5,opt,name=fSigmaB1,proto3" json:"fSigmaB1,omitempty"`
	FSigmaB2 float64           `protobuf:"fixed64,6,opt,name=fSigmaB2,proto3" json:"fSigmaB2,omitempty"`
	FDSigmaM float64           `protobuf:"fixed64,7,opt,name=fDSigmaM,proto3" json:"fDSigmaM,omitempty"`
	FDSigmaR float64           `protobuf:"fixed64,8,opt,name=fDSigmaR,proto3" json:"fDSigmaR,omitempty"`
	FQ       float64           `protobuf:"fixed64,9,opt,name=fQ,proto3" json:"fQ,omitempty"`
	SPb      float64           `protobuf:"fixed64,10,opt,name=sPb,proto3" json:"sPb,omitempty"`
	SPb1     float64           `protobuf:"fixed64,11,opt,name=sPb1,proto3" json:"sPb1,omitempty"`
	SPb2     float64           `protobuf:"fixed64,12,opt,name=sPb2,proto3" json:"sPb2,omitempty"`
	SPbr     float64           `protobuf:"fixed64,13,opt,name=sPbr,proto3" json:"sPbr,omitempty"`
	SSigmaB1 float64           `protobuf:"fixed64,14,opt,name=sSigmaB1,proto3" json:"sSigmaB1,omitempty"`
	SSigmaB2 float64           `protobuf:"fixed64,15,opt,name=sSigmaB2,proto3" json:"sSigmaB2,omitempty"`
	SDSigmaM float64           `protobuf:"fixed64,16,opt,name=sDSigmaM,proto3" json:"sDSigmaM,omitempty"`
	SDSigmaR float64           `protobuf:"fixed64,17,opt,name=sDSigmaR,proto3" json:"sDSigmaR,omitempty"`
	SQ       float64           `protobuf:"fixed64,18,opt,name=sQ,proto3" json:"sQ,omitempty"`
	QP       float64           `protobuf:"fixed64,19,opt,name=qP,proto3" json:"qP,omitempty"`
	Mkp      float64           `protobuf:"fixed64,20,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1     float64           `protobuf:"fixed64,21,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek     float64           `protobuf:"fixed64,22,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek     float64           `protobuf:"fixed64,23,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax     float64           `protobuf:"fixed64,24,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax     float64           `protobuf:"fixed64,25,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
	Strength []*StrengthResult `protobuf:"bytes,26,rep,name=strength,proto3" json:"strength,omitempty"`
	VSigmaB1 bool              `protobuf:"varint,27,opt,name=vSigmaB1,proto3" json:"vSigmaB1,omitempty"`
	VSigmaB2 bool              `protobuf:"varint,28,opt,name=vSigmaB2,proto3" json:"vSigmaB2,omitempty"`
	VQmax    bool              `protobuf:"varint,29,opt,name=vQmax,proto3" json:"vQmax,omitempty"`
	VTeta1   bool              `protobuf:"varint,30,opt,name=vTeta1,proto3" json:"vTeta1,omitempty"`
	VTetaK1  bool              `protobuf:"varint,31,opt,name=vTetaK1,proto3" json:"vTetaK1,omitempty"`
	VTeta2   bool              `protobuf:"varint,32,opt,name=vTeta2,proto3" json:"vTeta2,omitempty"`
	VTetaK2  bool              `protobuf:"varint,33,opt,name=vTetaK2,proto3" json:"vTetaK2,omitempty"`
}

func (x *CalcMomentStrength) Reset() {
	*x = CalcMomentStrength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcMomentStrength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcMomentStrength) ProtoMessage() {}

func (x *CalcMomentStrength) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcMomentStrength.ProtoReflect.Descriptor instead.
func (*CalcMomentStrength) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{91}
}

func (x *CalcMomentStrength) GetFPb() float64 {
	if x != nil {
		return x.FPb
	}
	return 0
}

func (x *CalcMomentStrength) GetFPb1() float64 {
	if x != nil {
		return x.FPb1
	}
	return 0
}

func (x *CalcMomentStrength) GetFPb2() float64 {
	if x != nil {
		return x.FPb2
	}
	return 0
}

func (x *CalcMomentStrength) GetFPbr() float64 {
	if x != nil {
		return x.FPbr
	}
	return 0
}

func (x *CalcMomentStrength) GetFSigmaB1() float64 {
	if x != nil {
		return x.FSigmaB1
	}
	return 0
}

func (x *CalcMomentStrength) GetFSigmaB2() float64 {
	if x != nil {
		return x.FSigmaB2
	}
	return 0
}

func (x *CalcMomentStrength) GetFDSigmaM() float64 {
	if x != nil {
		return x.FDSigmaM
	}
	return 0
}

func (x *CalcMomentStrength) GetFDSigmaR() float64 {
	if x != nil {
		return x.FDSigmaR
	}
	return 0
}

func (x *CalcMomentStrength) GetFQ() float64 {
	if x != nil {
		return x.FQ
	}
	return 0
}

func (x *CalcMomentStrength) GetSPb() float64 {
	if x != nil {
		return x.SPb
	}
	return 0
}

func (x *CalcMomentStrength) GetSPb1() float64 {
	if x != nil {
		return x.SPb1
	}
	return 0
}

func (x *CalcMomentStrength) GetSPb2() float64 {
	if x != nil {
		return x.SPb2
	}
	return 0
}

func (x *CalcMomentStrength) GetSPbr() float64 {
	if x != nil {
		return x.SPbr
	}
	return 0
}

func (x *CalcMomentStrength) GetSSigmaB1() float64 {
	if x != nil {
		return x.SSigmaB1
	}
	return 0
}

func (x *CalcMomentStrength) GetSSigmaB2() float64 {
	if x != nil {
		return x.SSigmaB2
	}
	return 0
}

func (x *CalcMomentStrength) GetSDSigmaM() float64 {
	if x != nil {
		return x.SDSigmaM
	}
	return 0
}

func (x *CalcMomentStrength) GetSDSigmaR() float64 {
	if x != nil {
		return x.SDSigmaR
	}
	return 0
}

func (x *CalcMomentStrength) GetSQ() float64 {
	if x != nil {
		return x.SQ
	}
	return 0
}

func (x *CalcMomentStrength) GetQP() float64 {
	if x != nil {
		return x.QP
	}
	return 0
}

func (x *CalcMomentStrength) GetMkp() float64 {
	if x != nil {
		return x.Mkp
	}
	return 0
}

func (x *CalcMomentStrength) GetMkp1() float64 {
	if x != nil {
		return x.Mkp1
	}
	return 0
}

func (x *CalcMomentStrength) GetMrek() float64 {
	if x != nil {
		return x.Mrek
	}
	return 0
}

func (x *CalcMomentStrength) GetQrek() float64 {
	if x != nil {
		return x.Qrek
	}
	return 0
}

func (x *CalcMomentStrength) GetMmax() float64 {
	if x != nil {
		return x.Mmax
	}
	return 0
}

func (x *CalcMomentStrength) GetQmax() float64 {
	if x != nil {
		return x.Qmax
	}
	return 0
}

func (x *CalcMomentStrength) GetStrength() []*StrengthResult {
	if x != nil {
		return x.Strength
	}
	return nil
}

func (x *CalcMomentStrength) GetVSigmaB1() bool {
	if x != nil {
		return x.VSigmaB1
	}
	return false
}

func (x *CalcMomentStrength) GetVSigmaB2() bool {
	if x != nil {
		return x.VSigmaB2
	}
	return false
}

func (x *CalcMomentStrength) GetVQmax() bool {
	if x != nil {
		return x.VQmax
	}
	return false
}

func (x *CalcMomentStrength) GetVTeta1() bool {
	if x != nil {
		return x.VTeta1
	}
	return false
}

func (x *CalcMomentStrength) GetVTetaK1() bool {
	if x != nil {
		return x.VTetaK1
	}
	return false
}

func (x *CalcMomentStrength) GetVTeta2() bool {
	if x != nil {
		return x.VTeta2
	}
	return false
}

func (x *CalcMomentStrength) GetVTetaK2() bool {
	if x != nil {
		return x.VTetaK2
	}
	return false
}

type CalcMomentBasis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pb       float64 `protobuf:"fixed64,1,opt,name=Pb,json=pb,proto3" json:"Pb,omitempty"`
	Pb1      float64 `protobuf:"fixed64,2,opt,name=Pb1,json=pb1,proto3" json:"Pb1,omitempty"`
	Pb2      float64 `protobuf:"fixed64,3,opt,name=Pb2,json=pb2,proto3" json:"Pb2,omitempty"`
	Pbr      float64 `protobuf:"fixed64,4,opt,name=Pbr,json=pbr,proto3" json:"Pbr,omitempty"`
	SigmaB1  float64 `protobuf:"fixed64,5,opt,name=sigmaB1,proto3" json:"sigmaB1,omitempty"`
	SigmaB2  float64 `protobuf:"fixed64,6,opt,name=sigmaB2,proto3" json:"sigmaB2,omitempty"`
	DSigmaM  float64 `protobuf:"fixed64,7,opt,name=dSigmaM,proto3" json:"dSigmaM,omitempty"`
	DSigmaR  float64 `protobuf:"fixed64,8,opt,name=dSigmaR,proto3" json:"dSigmaR,omitempty"`
	Q        float64 `protobuf:"fixed64,9,opt,name=q,proto3" json:"q,omitempty"`
	QP       float64 `protobuf:"fixed64,10,opt,name=qP,proto3" json:"qP,omitempty"`
	Mkp      float64 `protobuf:"fixed64,11,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1     float64 `protobuf:"fixed64,12,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek     float64 `protobuf:"fixed64,13,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek     float64 `protobuf:"fixed64,14,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax     float64 `protobuf:"fixed64,15,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax     float64 `protobuf:"fixed64,16,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
	VSigmaB1 bool    `protobuf:"varint,17,opt,name=VSigmaB1,json=vSigmaB1,proto3" json:"VSigmaB1,omitempty"`
	VSigmaB2 bool    `protobuf:"varint,18,opt,name=VSigmaB2,json=vSigmaB2,proto3" json:"VSigmaB2,omitempty"`
}

func (x *CalcMomentBasis) Reset() {
	*x = CalcMomentBasis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcMomentBasis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcMomentBasis) ProtoMessage() {}

func (x *CalcMomentBasis) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcMomentBasis.ProtoReflect.Descriptor instead.
func (*CalcMomentBasis) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{92}
}

func (x *CalcMomentBasis) GetPb() float64 {
	if x != nil {
		return x.Pb
	}
	return 0
}

func (x *CalcMomentBasis) GetPb1() float64 {
	if x != nil {
		return x.Pb1
	}
	return 0
}

func (x *CalcMomentBasis) GetPb2() float64 {
	if x != nil {
		return x.Pb2
	}
	return 0
}

func (x *CalcMomentBasis) GetPbr() float64 {
	if x != nil {
		return x.Pbr
	}
	return 0
}

func (x *CalcMomentBasis) GetSigmaB1() float64 {
	if x != nil {
		return x.SigmaB1
	}
	return 0
}

func (x *CalcMomentBasis) GetSigmaB2() float64 {
	if x != nil {
		return x.SigmaB2
	}
	return 0
}

func (x *CalcMomentBasis) GetDSigmaM() float64 {
	if x != nil {
		return x.DSigmaM
	}
	return 0
}

func (x *CalcMomentBasis) GetDSigmaR() float64 {
	if x != nil {
		return x.DSigmaR
	}
	return 0
}

func (x *CalcMomentBasis) GetQ() float64 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *CalcMomentBasis) GetQP() float64 {
	if x != nil {
		return x.QP
	}
	return 0
}

func (x *CalcMomentBasis) GetMkp() float64 {
	if x != nil {
		return x.Mkp
	}
	return 0
}

func (x *CalcMomentBasis) GetMkp1() float64 {
	if x != nil {
		return x.Mkp1
	}
	return 0
}

func (x *CalcMomentBasis) GetMrek() float64 {
	if x != nil {
		return x.Mrek
	}
	return 0
}

func (x *CalcMomentBasis) GetQrek() float64 {
	if x != nil {
		return x.Qrek
	}
	return 0
}

func (x *CalcMomentBasis) GetMmax() float64 {
	if x != nil {
		return x.Mmax
	}
	return 0
}

func (x *CalcMomentBasis) GetQmax() float64 {
	if x != nil {
		return x.Qmax
	}
	return 0
}

func (x *CalcMomentBasis) GetVSigmaB1() bool {
	if x != nil {
		return x.VSigmaB1
	}
	return false
}

func (x *CalcMomentBasis) GetVSigmaB2() bool {
	if x != nil {
		return x.VSigmaB2
	}
	return false
}

type CalculatedFlange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B0       float64             `protobuf:"fixed64,1,opt,name=b0,proto3" json:"b0,omitempty"`
	Dsp      float64             `protobuf:"fixed64,2,opt,name=Dsp,json=dsp,proto3" json:"Dsp,omitempty"`
	Po       float64             `protobuf:"fixed64,3,opt,name=Po,json=po,proto3" json:"Po,omitempty"`
	Rp       float64             `protobuf:"fixed64,4,opt,name=Rp,json=rp,proto3" json:"Rp,omitempty"`
	A        float64             `protobuf:"fixed64,5,opt,name=A,json=a,proto3" json:"A,omitempty"`
	Qd       float64             `protobuf:"fixed64,6,opt,name=Qd,json=qd,proto3" json:"Qd,omitempty"`
	Qfm      float64             `protobuf:"fixed64,7,opt,name=Qfm,json=qfm,proto3" json:"Qfm,omitempty"`
	Qt       float64             `protobuf:"fixed64,8,opt,name=Qt,json=qt,proto3" json:"Qt,omitempty"`
	Alpha    float64             `protobuf:"fixed64,9,opt,name=alpha,proto3" json:"alpha,omitempty"`
	AlphaM   float64             `protobuf:"fixed64,10,opt,name=alphaM,proto3" json:"alphaM,omitempty"`
	Strength *CalcMomentStrength `protobuf:"bytes,11,opt,name=strength,proto3" json:"strength,omitempty"`
	Basis    *CalcMomentBasis    `protobuf:"bytes,12,opt,name=basis,proto3" json:"basis,omitempty"`
}

func (x *CalculatedFlange) Reset() {
	*x = CalculatedFlange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatedFlange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatedFlange) ProtoMessage() {}

func (x *CalculatedFlange) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatedFlange.ProtoReflect.Descriptor instead.
func (*CalculatedFlange) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{93}
}

func (x *CalculatedFlange) GetB0() float64 {
	if x != nil {
		return x.B0
	}
	return 0
}

func (x *CalculatedFlange) GetDsp() float64 {
	if x != nil {
		return x.Dsp
	}
	return 0
}

func (x *CalculatedFlange) GetPo() float64 {
	if x != nil {
		return x.Po
	}
	return 0
}

func (x *CalculatedFlange) GetRp() float64 {
	if x != nil {
		return x.Rp
	}
	return 0
}

func (x *CalculatedFlange) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *CalculatedFlange) GetQd() float64 {
	if x != nil {
		return x.Qd
	}
	return 0
}

func (x *CalculatedFlange) GetQfm() float64 {
	if x != nil {
		return x.Qfm
	}
	return 0
}

func (x *CalculatedFlange) GetQt() float64 {
	if x != nil {
		return x.Qt
	}
	return 0
}

func (x *CalculatedFlange) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *CalculatedFlange) GetAlphaM() float64 {
	if x != nil {
		return x.AlphaM
	}
	return 0
}

func (x *CalculatedFlange) GetStrength() *CalcMomentStrength {
	if x != nil {
		return x.Strength
	}
	return nil
}

func (x *CalculatedFlange) GetBasis() *CalcMomentBasis {
	if x != nil {
		return x.Basis
	}
	return nil
}

type CalcFormulas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B0       string                 `protobuf:"bytes,1,opt,name=b0,proto3" json:"b0,omitempty"`
	Dcp      string                 `protobuf:"bytes,2,opt,name=Dcp,json=dcp,proto3" json:"Dcp,omitempty"`
	Po       string                 `protobuf:"bytes,3,opt,name=Po,json=po,proto3" json:"Po,omitempty"`
	Rp       string                 `protobuf:"bytes,4,opt,name=Rp,json=rp,proto3" json:"Rp,omitempty"`
	A        string                 `protobuf:"bytes,5,opt,name=A,json=a,proto3" json:"A,omitempty"`
	Qd       string                 `protobuf:"bytes,6,opt,name=Qd,json=qd,proto3" json:"Qd,omitempty"`
	Qfm      string                 `protobuf:"bytes,7,opt,name=Qfm,json=qfm,proto3" json:"Qfm,omitempty"`
	Qt       string                 `protobuf:"bytes,8,opt,name=Qt,json=qt,proto3" json:"Qt,omitempty"`
	Alpha    string                 `protobuf:"bytes,9,opt,name=alpha,proto3" json:"alpha,omitempty"`
	AlphaM   string                 `protobuf:"bytes,10,opt,name=alphaM,proto3" json:"alphaM,omitempty"`
	Basis    *CalcFormulas_Basis    `protobuf:"bytes,12,opt,name=basis,proto3" json:"basis,omitempty"`
	Strength *CalcFormulas_Strength `protobuf:"bytes,13,opt,name=strength,proto3" json:"strength,omitempty"`
}

func (x *CalcFormulas) Reset() {
	*x = CalcFormulas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcFormulas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcFormulas) ProtoMessage() {}

func (x *CalcFormulas) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcFormulas.ProtoReflect.Descriptor instead.
func (*CalcFormulas) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{94}
}

func (x *CalcFormulas) GetB0() string {
	if x != nil {
		return x.B0
	}
	return ""
}

func (x *CalcFormulas) GetDcp() string {
	if x != nil {
		return x.Dcp
	}
	return ""
}

func (x *CalcFormulas) GetPo() string {
	if x != nil {
		return x.Po
	}
	return ""
}

func (x *CalcFormulas) GetRp() string {
	if x != nil {
		return x.Rp
	}
	return ""
}

func (x *CalcFormulas) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *CalcFormulas) GetQd() string {
	if x != nil {
		return x.Qd
	}
	return ""
}

func (x *CalcFormulas) GetQfm() string {
	if x != nil {
		return x.Qfm
	}
	return ""
}

func (x *CalcFormulas) GetQt() string {
	if x != nil {
		return x.Qt
	}
	return ""
}

func (x *CalcFormulas) GetAlpha() string {
	if x != nil {
		return x.Alpha
	}
	return ""
}

func (x *CalcFormulas) GetAlphaM() string {
	if x != nil {
		return x.AlphaM
	}
	return ""
}

func (x *CalcFormulas) GetBasis() *CalcFormulas_Basis {
	if x != nil {
		return x.Basis
	}
	return nil
}

func (x *CalcFormulas) GetStrength() *CalcFormulas_Strength {
	if x != nil {
		return x.Strength
	}
	return nil
}

type FlangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSameFlange bool              `protobuf:"varint,1,opt,name=isSameFlange,proto3" json:"isSameFlange,omitempty"`
	Flanges      []*FlangeResult   `protobuf:"bytes,2,rep,name=flanges,proto3" json:"flanges,omitempty"`
	Bolt         *BoltResult       `protobuf:"bytes,3,opt,name=bolt,proto3" json:"bolt,omitempty"`
	Gasket       *GasketResult     `protobuf:"bytes,4,opt,name=gasket,proto3" json:"gasket,omitempty"`
	Embed        *EmbedResult      `protobuf:"bytes,5,opt,name=embed,proto3" json:"embed,omitempty"`
	Calc         *CalculatedFlange `protobuf:"bytes,6,opt,name=calc,proto3" json:"calc,omitempty"`
	Formulas     *CalcFormulas     `protobuf:"bytes,7,opt,name=formulas,proto3" json:"formulas,omitempty"`
}

func (x *FlangeResponse) Reset() {
	*x = FlangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeResponse) ProtoMessage() {}

func (x *FlangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeResponse.ProtoReflect.Descriptor instead.
func (*FlangeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{95}
}

func (x *FlangeResponse) GetIsSameFlange() bool {
	if x != nil {
		return x.IsSameFlange
	}
	return false
}

func (x *FlangeResponse) GetFlanges() []*FlangeResult {
	if x != nil {
		return x.Flanges
	}
	return nil
}

func (x *FlangeResponse) GetBolt() *BoltResult {
	if x != nil {
		return x.Bolt
	}
	return nil
}

func (x *FlangeResponse) GetGasket() *GasketResult {
	if x != nil {
		return x.Gasket
	}
	return nil
}

func (x *FlangeResponse) GetEmbed() *EmbedResult {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *FlangeResponse) GetCalc() *CalculatedFlange {
	if x != nil {
		return x.Calc
	}
	return nil
}

func (x *FlangeResponse) GetFormulas() *CalcFormulas {
	if x != nil {
		return x.Formulas
	}
	return nil
}

// ------------------------------------------------------
type GetFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFlangeRequest) Reset() {
	*x = GetFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlangeRequest) ProtoMessage() {}

func (x *GetFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlangeRequest.ProtoReflect.Descriptor instead.
func (*GetFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{96}
}

type GetFlangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFlange []*TypeFlange       `protobuf:"bytes,1,rep,name=typeFlange,proto3" json:"typeFlange,omitempty"`
	Standarts  []*StandartWithSize `protobuf:"bytes,2,rep,name=standarts,proto3" json:"standarts,omitempty"`
	Gaskets    []*GasketWithThick  `protobuf:"bytes,3,rep,name=gaskets,proto3" json:"gaskets,omitempty"`
	Env        []*Env              `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	Materials  []*Material         `protobuf:"bytes,5,rep,name=materials,proto3" json:"materials,omitempty"`
}

func (x *GetFlangeResponse) Reset() {
	*x = GetFlangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlangeResponse) ProtoMessage() {}

func (x *GetFlangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlangeResponse.ProtoReflect.Descriptor instead.
func (*GetFlangeResponse) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{97}
}

func (x *GetFlangeResponse) GetTypeFlange() []*TypeFlange {
	if x != nil {
		return x.TypeFlange
	}
	return nil
}

func (x *GetFlangeResponse) GetStandarts() []*StandartWithSize {
	if x != nil {
		return x.Standarts
	}
	return nil
}

func (x *GetFlangeResponse) GetGaskets() []*GasketWithThick {
	if x != nil {
		return x.Gaskets
	}
	return nil
}

func (x *GetFlangeResponse) GetEnv() []*Env {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *GetFlangeResponse) GetMaterials() []*Material {
	if x != nil {
		return x.Materials
	}
	return nil
}

type MaterialsDataResponse_Voltage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Voltage     float64 `protobuf:"fixed64,3,opt,name=voltage,proto3" json:"voltage,omitempty"`
}

func (x *MaterialsDataResponse_Voltage) Reset() {
	*x = MaterialsDataResponse_Voltage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsDataResponse_Voltage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsDataResponse_Voltage) ProtoMessage() {}

func (x *MaterialsDataResponse_Voltage) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsDataResponse_Voltage.ProtoReflect.Descriptor instead.
func (*MaterialsDataResponse_Voltage) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{13, 0}
}

func (x *MaterialsDataResponse_Voltage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaterialsDataResponse_Voltage) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *MaterialsDataResponse_Voltage) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

type MaterialsDataResponse_Elasticity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Elasticity  float64 `protobuf:"fixed64,3,opt,name=elasticity,proto3" json:"elasticity,omitempty"`
}

func (x *MaterialsDataResponse_Elasticity) Reset() {
	*x = MaterialsDataResponse_Elasticity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsDataResponse_Elasticity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsDataResponse_Elasticity) ProtoMessage() {}

func (x *MaterialsDataResponse_Elasticity) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsDataResponse_Elasticity.ProtoReflect.Descriptor instead.
func (*MaterialsDataResponse_Elasticity) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{13, 1}
}

func (x *MaterialsDataResponse_Elasticity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaterialsDataResponse_Elasticity) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *MaterialsDataResponse_Elasticity) GetElasticity() float64 {
	if x != nil {
		return x.Elasticity
	}
	return 0
}

type MaterialsDataResponse_Alpha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Alpha       float64 `protobuf:"fixed64,3,opt,name=alpha,proto3" json:"alpha,omitempty"`
}

func (x *MaterialsDataResponse_Alpha) Reset() {
	*x = MaterialsDataResponse_Alpha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialsDataResponse_Alpha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialsDataResponse_Alpha) ProtoMessage() {}

func (x *MaterialsDataResponse_Alpha) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialsDataResponse_Alpha.ProtoReflect.Descriptor instead.
func (*MaterialsDataResponse_Alpha) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{13, 2}
}

func (x *MaterialsDataResponse_Alpha) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MaterialsDataResponse_Alpha) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *MaterialsDataResponse_Alpha) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

type FlangeData_Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DOut float64 `protobuf:"fixed64,1,opt,name=dOut,proto3" json:"dOut,omitempty"`
	D    float64 `protobuf:"fixed64,2,opt,name=d,proto3" json:"d,omitempty"`
	H    float64 `protobuf:"fixed64,3,opt,name=h,proto3" json:"h,omitempty"`
	S0   float64 `protobuf:"fixed64,4,opt,name=s0,proto3" json:"s0,omitempty"`
	S1   float64 `protobuf:"fixed64,5,opt,name=s1,proto3" json:"s1,omitempty"`
	L    float64 `protobuf:"fixed64,6,opt,name=l,proto3" json:"l,omitempty"`
	D6   float64 `protobuf:"fixed64,7,opt,name=d6,proto3" json:"d6,omitempty"`
}

func (x *FlangeData_Size) Reset() {
	*x = FlangeData_Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeData_Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeData_Size) ProtoMessage() {}

func (x *FlangeData_Size) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeData_Size.ProtoReflect.Descriptor instead.
func (*FlangeData_Size) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{80, 0}
}

func (x *FlangeData_Size) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *FlangeData_Size) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *FlangeData_Size) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *FlangeData_Size) GetS0() float64 {
	if x != nil {
		return x.S0
	}
	return 0
}

func (x *FlangeData_Size) GetS1() float64 {
	if x != nil {
		return x.S1
	}
	return 0
}

func (x *FlangeData_Size) GetL() float64 {
	if x != nil {
		return x.L
	}
	return 0
}

func (x *FlangeData_Size) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

type GasketData_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Type            GasketData_Type `protobuf:"varint,2,opt,name=type,proto3,enum=moment_api.GasketData_Type" json:"type,omitempty"`
	Qo              float64         `protobuf:"fixed64,3,opt,name=qo,proto3" json:"qo,omitempty"`
	M               float64         `protobuf:"fixed64,4,opt,name=m,proto3" json:"m,omitempty"`
	Compression     float64         `protobuf:"fixed64,5,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64         `protobuf:"fixed64,6,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	PermissiblePres float64         `protobuf:"fixed64,7,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
}

func (x *GasketData_Data) Reset() {
	*x = GasketData_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketData_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketData_Data) ProtoMessage() {}

func (x *GasketData_Data) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketData_Data.ProtoReflect.Descriptor instead.
func (*GasketData_Data) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{83, 0}
}

func (x *GasketData_Data) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GasketData_Data) GetType() GasketData_Type {
	if x != nil {
		return x.Type
	}
	return GasketData_Soft
}

func (x *GasketData_Data) GetQo() float64 {
	if x != nil {
		return x.Qo
	}
	return 0
}

func (x *GasketData_Data) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *GasketData_Data) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *GasketData_Data) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *GasketData_Data) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

type CalcFormulas_StrengthF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mkp       string `protobuf:"bytes,1,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1      string `protobuf:"bytes,2,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Cf        string `protobuf:"bytes,3,opt,name=Cf,json=cf,proto3" json:"Cf,omitempty"`
	Dzv       string `protobuf:"bytes,4,opt,name=Dzv,json=dzv,proto3" json:"Dzv,omitempty"`
	MM        string `protobuf:"bytes,5,opt,name=MM,json=mM,proto3" json:"MM,omitempty"`
	MMk       string `protobuf:"bytes,6,opt,name=MMk,json=mMk,proto3" json:"MMk,omitempty"`
	Mpk       string `protobuf:"bytes,7,opt,name=Mpk,json=mpk,proto3" json:"Mpk,omitempty"`
	Mp        string `protobuf:"bytes,8,opt,name=Mp,json=mp,proto3" json:"Mp,omitempty"`
	SigmaM1   string `protobuf:"bytes,9,opt,name=sigmaM1,proto3" json:"sigmaM1,omitempty"`
	SigmaM0   string `protobuf:"bytes,10,opt,name=sigmaM0,proto3" json:"sigmaM0,omitempty"`
	SigmaT    string `protobuf:"bytes,11,opt,name=sigmaT,proto3" json:"sigmaT,omitempty"`
	SigmaR    string `protobuf:"bytes,12,opt,name=sigmaR,proto3" json:"sigmaR,omitempty"`
	SigmaTp   string `protobuf:"bytes,13,opt,name=sigmaTp,proto3" json:"sigmaTp,omitempty"`
	SigmaRp   string `protobuf:"bytes,14,opt,name=sigmaRp,proto3" json:"sigmaRp,omitempty"`
	SigmaK    string `protobuf:"bytes,15,opt,name=sigmaK,proto3" json:"sigmaK,omitempty"`
	SigmaP1   string `protobuf:"bytes,16,opt,name=sigmaP1,proto3" json:"sigmaP1,omitempty"`
	SigmaP0   string `protobuf:"bytes,17,opt,name=sigmaP0,proto3" json:"sigmaP0,omitempty"`
	SigmaMp   string `protobuf:"bytes,18,opt,name=sigmaMp,proto3" json:"sigmaMp,omitempty"`
	SigmaMpm  string `protobuf:"bytes,19,opt,name=sigmaMpm,proto3" json:"sigmaMpm,omitempty"`
	SigmaMp0  string `protobuf:"bytes,20,opt,name=sigmaMp0,proto3" json:"sigmaMp0,omitempty"`
	SigmaMpm0 string `protobuf:"bytes,21,opt,name=sigmaMpm0,proto3" json:"sigmaMpm0,omitempty"`
	SigmaMop  string `protobuf:"bytes,22,opt,name=sigmaMop,proto3" json:"sigmaMop,omitempty"`
	SigmaKp   string `protobuf:"bytes,23,opt,name=sigmaKp,proto3" json:"sigmaKp,omitempty"`
	Teta      string `protobuf:"bytes,24,opt,name=teta,proto3" json:"teta,omitempty"`
	DTeta     string `protobuf:"bytes,25,opt,name=dTeta,proto3" json:"dTeta,omitempty"`
	DTetaK    string `protobuf:"bytes,26,opt,name=dTetaK,proto3" json:"dTetaK,omitempty"`
	TetaK     string `protobuf:"bytes,27,opt,name=tetaK,proto3" json:"tetaK,omitempty"`
	Max1      string `protobuf:"bytes,28,opt,name=Max1,json=max1,proto3" json:"Max1,omitempty"`
	Max2      string `protobuf:"bytes,29,opt,name=Max2,json=max2,proto3" json:"Max2,omitempty"`
	Max3      string `protobuf:"bytes,30,opt,name=Max3,json=max3,proto3" json:"Max3,omitempty"`
	Max4      string `protobuf:"bytes,31,opt,name=Max4,json=max4,proto3" json:"Max4,omitempty"`
	Max5      string `protobuf:"bytes,32,opt,name=Max5,json=max5,proto3" json:"Max5,omitempty"`
	Max6      string `protobuf:"bytes,33,opt,name=Max6,json=max6,proto3" json:"Max6,omitempty"`
	Max7      string `protobuf:"bytes,34,opt,name=Max7,json=max7,proto3" json:"Max7,omitempty"`
	Max8      string `protobuf:"bytes,35,opt,name=Max8,json=max8,proto3" json:"Max8,omitempty"`
	Max9      string `protobuf:"bytes,36,opt,name=Max9,json=max9,proto3" json:"Max9,omitempty"`
	Max10     string `protobuf:"bytes,37,opt,name=Max10,json=max10,proto3" json:"Max10,omitempty"`
	Max11     string `protobuf:"bytes,38,opt,name=Max11,json=max11,proto3" json:"Max11,omitempty"`
}

func (x *CalcFormulas_StrengthF) Reset() {
	*x = CalcFormulas_StrengthF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcFormulas_StrengthF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcFormulas_StrengthF) ProtoMessage() {}

func (x *CalcFormulas_StrengthF) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcFormulas_StrengthF.ProtoReflect.Descriptor instead.
func (*CalcFormulas_StrengthF) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{94, 0}
}

func (x *CalcFormulas_StrengthF) GetMkp() string {
	if x != nil {
		return x.Mkp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMkp1() string {
	if x != nil {
		return x.Mkp1
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetCf() string {
	if x != nil {
		return x.Cf
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetDzv() string {
	if x != nil {
		return x.Dzv
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMM() string {
	if x != nil {
		return x.MM
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMMk() string {
	if x != nil {
		return x.MMk
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMpk() string {
	if x != nil {
		return x.Mpk
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMp() string {
	if x != nil {
		return x.Mp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaM1() string {
	if x != nil {
		return x.SigmaM1
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaM0() string {
	if x != nil {
		return x.SigmaM0
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaT() string {
	if x != nil {
		return x.SigmaT
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaR() string {
	if x != nil {
		return x.SigmaR
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaTp() string {
	if x != nil {
		return x.SigmaTp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaRp() string {
	if x != nil {
		return x.SigmaRp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaK() string {
	if x != nil {
		return x.SigmaK
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaP1() string {
	if x != nil {
		return x.SigmaP1
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaP0() string {
	if x != nil {
		return x.SigmaP0
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaMp() string {
	if x != nil {
		return x.SigmaMp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaMpm() string {
	if x != nil {
		return x.SigmaMpm
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaMp0() string {
	if x != nil {
		return x.SigmaMp0
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaMpm0() string {
	if x != nil {
		return x.SigmaMpm0
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaMop() string {
	if x != nil {
		return x.SigmaMop
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetSigmaKp() string {
	if x != nil {
		return x.SigmaKp
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetTeta() string {
	if x != nil {
		return x.Teta
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetDTeta() string {
	if x != nil {
		return x.DTeta
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetDTetaK() string {
	if x != nil {
		return x.DTetaK
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetTetaK() string {
	if x != nil {
		return x.TetaK
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax1() string {
	if x != nil {
		return x.Max1
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax2() string {
	if x != nil {
		return x.Max2
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax3() string {
	if x != nil {
		return x.Max3
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax4() string {
	if x != nil {
		return x.Max4
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax5() string {
	if x != nil {
		return x.Max5
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax6() string {
	if x != nil {
		return x.Max6
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax7() string {
	if x != nil {
		return x.Max7
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax8() string {
	if x != nil {
		return x.Max8
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax9() string {
	if x != nil {
		return x.Max9
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax10() string {
	if x != nil {
		return x.Max10
	}
	return ""
}

func (x *CalcFormulas_StrengthF) GetMax11() string {
	if x != nil {
		return x.Max11
	}
	return ""
}

type CalcFormulas_Strength struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FPb      string                    `protobuf:"bytes,1,opt,name=fPb,proto3" json:"fPb,omitempty"`
	FPb1     string                    `protobuf:"bytes,2,opt,name=fPb1,proto3" json:"fPb1,omitempty"`
	FPb2     string                    `protobuf:"bytes,3,opt,name=fPb2,proto3" json:"fPb2,omitempty"`
	FPbr     string                    `protobuf:"bytes,4,opt,name=fPbr,proto3" json:"fPbr,omitempty"`
	FSigmaB1 string                    `protobuf:"bytes,5,opt,name=fSigmaB1,proto3" json:"fSigmaB1,omitempty"`
	FSigmaB2 string                    `protobuf:"bytes,6,opt,name=fSigmaB2,proto3" json:"fSigmaB2,omitempty"`
	FDSigmaM string                    `protobuf:"bytes,7,opt,name=fDSigmaM,proto3" json:"fDSigmaM,omitempty"`
	FDSigmaR string                    `protobuf:"bytes,8,opt,name=fDSigmaR,proto3" json:"fDSigmaR,omitempty"`
	FQ       string                    `protobuf:"bytes,9,opt,name=fQ,proto3" json:"fQ,omitempty"`
	SPb      string                    `protobuf:"bytes,10,opt,name=sPb,proto3" json:"sPb,omitempty"`
	SPb1     string                    `protobuf:"bytes,11,opt,name=sPb1,proto3" json:"sPb1,omitempty"`
	SPb2     string                    `protobuf:"bytes,12,opt,name=sPb2,proto3" json:"sPb2,omitempty"`
	SPbr     string                    `protobuf:"bytes,13,opt,name=sPbr,proto3" json:"sPbr,omitempty"`
	SSigmaB1 string                    `protobuf:"bytes,14,opt,name=sSigmaB1,proto3" json:"sSigmaB1,omitempty"`
	SSigmaB2 string                    `protobuf:"bytes,15,opt,name=sSigmaB2,proto3" json:"sSigmaB2,omitempty"`
	SDSigmaM string                    `protobuf:"bytes,16,opt,name=sDSigmaM,proto3" json:"sDSigmaM,omitempty"`
	SDSigmaR string                    `protobuf:"bytes,17,opt,name=sDSigmaR,proto3" json:"sDSigmaR,omitempty"`
	SQ       string                    `protobuf:"bytes,18,opt,name=sQ,proto3" json:"sQ,omitempty"`
	QP       string                    `protobuf:"bytes,19,opt,name=qP,proto3" json:"qP,omitempty"`
	Mkp      string                    `protobuf:"bytes,20,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1     string                    `protobuf:"bytes,21,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek     string                    `protobuf:"bytes,22,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek     string                    `protobuf:"bytes,23,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax     string                    `protobuf:"bytes,24,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax     string                    `protobuf:"bytes,25,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
	Strength []*CalcFormulas_StrengthF `protobuf:"bytes,26,rep,name=strength,proto3" json:"strength,omitempty"`
}

func (x *CalcFormulas_Strength) Reset() {
	*x = CalcFormulas_Strength{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcFormulas_Strength) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcFormulas_Strength) ProtoMessage() {}

func (x *CalcFormulas_Strength) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcFormulas_Strength.ProtoReflect.Descriptor instead.
func (*CalcFormulas_Strength) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{94, 1}
}

func (x *CalcFormulas_Strength) GetFPb() string {
	if x != nil {
		return x.FPb
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFPb1() string {
	if x != nil {
		return x.FPb1
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFPb2() string {
	if x != nil {
		return x.FPb2
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFPbr() string {
	if x != nil {
		return x.FPbr
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFSigmaB1() string {
	if x != nil {
		return x.FSigmaB1
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFSigmaB2() string {
	if x != nil {
		return x.FSigmaB2
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFDSigmaM() string {
	if x != nil {
		return x.FDSigmaM
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFDSigmaR() string {
	if x != nil {
		return x.FDSigmaR
	}
	return ""
}

func (x *CalcFormulas_Strength) GetFQ() string {
	if x != nil {
		return x.FQ
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSPb() string {
	if x != nil {
		return x.SPb
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSPb1() string {
	if x != nil {
		return x.SPb1
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSPb2() string {
	if x != nil {
		return x.SPb2
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSPbr() string {
	if x != nil {
		return x.SPbr
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSSigmaB1() string {
	if x != nil {
		return x.SSigmaB1
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSSigmaB2() string {
	if x != nil {
		return x.SSigmaB2
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSDSigmaM() string {
	if x != nil {
		return x.SDSigmaM
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSDSigmaR() string {
	if x != nil {
		return x.SDSigmaR
	}
	return ""
}

func (x *CalcFormulas_Strength) GetSQ() string {
	if x != nil {
		return x.SQ
	}
	return ""
}

func (x *CalcFormulas_Strength) GetQP() string {
	if x != nil {
		return x.QP
	}
	return ""
}

func (x *CalcFormulas_Strength) GetMkp() string {
	if x != nil {
		return x.Mkp
	}
	return ""
}

func (x *CalcFormulas_Strength) GetMkp1() string {
	if x != nil {
		return x.Mkp1
	}
	return ""
}

func (x *CalcFormulas_Strength) GetMrek() string {
	if x != nil {
		return x.Mrek
	}
	return ""
}

func (x *CalcFormulas_Strength) GetQrek() string {
	if x != nil {
		return x.Qrek
	}
	return ""
}

func (x *CalcFormulas_Strength) GetMmax() string {
	if x != nil {
		return x.Mmax
	}
	return ""
}

func (x *CalcFormulas_Strength) GetQmax() string {
	if x != nil {
		return x.Qmax
	}
	return ""
}

func (x *CalcFormulas_Strength) GetStrength() []*CalcFormulas_StrengthF {
	if x != nil {
		return x.Strength
	}
	return nil
}

type CalcFormulas_Basis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pb      string `protobuf:"bytes,1,opt,name=Pb,json=pb,proto3" json:"Pb,omitempty"`
	Pb1     string `protobuf:"bytes,2,opt,name=Pb1,json=pb1,proto3" json:"Pb1,omitempty"`
	Pb2     string `protobuf:"bytes,3,opt,name=Pb2,json=pb2,proto3" json:"Pb2,omitempty"`
	Pbr     string `protobuf:"bytes,4,opt,name=Pbr,json=pbr,proto3" json:"Pbr,omitempty"`
	SigmaB1 string `protobuf:"bytes,5,opt,name=sigmaB1,proto3" json:"sigmaB1,omitempty"`
	SigmaB2 string `protobuf:"bytes,6,opt,name=sigmaB2,proto3" json:"sigmaB2,omitempty"`
	DSigmaM string `protobuf:"bytes,7,opt,name=dSigmaM,proto3" json:"dSigmaM,omitempty"`
	DSigmaR string `protobuf:"bytes,8,opt,name=dSigmaR,proto3" json:"dSigmaR,omitempty"`
	Q       string `protobuf:"bytes,9,opt,name=q,proto3" json:"q,omitempty"`
	QP      string `protobuf:"bytes,10,opt,name=qP,proto3" json:"qP,omitempty"`
	Mkp     string `protobuf:"bytes,11,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1    string `protobuf:"bytes,12,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek    string `protobuf:"bytes,13,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek    string `protobuf:"bytes,14,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax    string `protobuf:"bytes,15,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax    string `protobuf:"bytes,16,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
}

func (x *CalcFormulas_Basis) Reset() {
	*x = CalcFormulas_Basis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_api_moment_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcFormulas_Basis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcFormulas_Basis) ProtoMessage() {}

func (x *CalcFormulas_Basis) ProtoReflect() protoreflect.Message {
	mi := &file_moment_api_moment_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcFormulas_Basis.ProtoReflect.Descriptor instead.
func (*CalcFormulas_Basis) Descriptor() ([]byte, []int) {
	return file_moment_api_moment_proto_rawDescGZIP(), []int{94, 2}
}

func (x *CalcFormulas_Basis) GetPb() string {
	if x != nil {
		return x.Pb
	}
	return ""
}

func (x *CalcFormulas_Basis) GetPb1() string {
	if x != nil {
		return x.Pb1
	}
	return ""
}

func (x *CalcFormulas_Basis) GetPb2() string {
	if x != nil {
		return x.Pb2
	}
	return ""
}

func (x *CalcFormulas_Basis) GetPbr() string {
	if x != nil {
		return x.Pbr
	}
	return ""
}

func (x *CalcFormulas_Basis) GetSigmaB1() string {
	if x != nil {
		return x.SigmaB1
	}
	return ""
}

func (x *CalcFormulas_Basis) GetSigmaB2() string {
	if x != nil {
		return x.SigmaB2
	}
	return ""
}

func (x *CalcFormulas_Basis) GetDSigmaM() string {
	if x != nil {
		return x.DSigmaM
	}
	return ""
}

func (x *CalcFormulas_Basis) GetDSigmaR() string {
	if x != nil {
		return x.DSigmaR
	}
	return ""
}

func (x *CalcFormulas_Basis) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *CalcFormulas_Basis) GetQP() string {
	if x != nil {
		return x.QP
	}
	return ""
}

func (x *CalcFormulas_Basis) GetMkp() string {
	if x != nil {
		return x.Mkp
	}
	return ""
}

func (x *CalcFormulas_Basis) GetMkp1() string {
	if x != nil {
		return x.Mkp1
	}
	return ""
}

func (x *CalcFormulas_Basis) GetMrek() string {
	if x != nil {
		return x.Mrek
	}
	return ""
}

func (x *CalcFormulas_Basis) GetQrek() string {
	if x != nil {
		return x.Qrek
	}
	return ""
}

func (x *CalcFormulas_Basis) GetMmax() string {
	if x != nil {
		return x.Mmax
	}
	return ""
}

func (x *CalcFormulas_Basis) GetQmax() string {
	if x != nil {
		return x.Qmax
	}
	return ""
}

var File_moment_api_moment_proto protoreflect.FileDescriptor

var file_moment_api_moment_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x30, 0x0a, 0x08, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x41, 0x6c, 0x70,
	0x68, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x69, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x3d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x11, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x1c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x64, 0x22, 0xf1, 0x03, 0x0a, 0x15, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x1a, 0x55, 0x0a, 0x07, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x1a, 0x5e, 0x0a, 0x0a, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x1a, 0x4f, 0x0a, 0x05, 0x41, 0x6c, 0x70, 0x68,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x45, 0x0a, 0x07, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x22, 0x5d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x22,
	0x7a, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x0a, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x22, 0x69, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x61,
	0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x52, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x22, 0x83,
	0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x65, 0x6c, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x69, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3f, 0x0a, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x22, 0x55, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x6c, 0x70, 0x68, 0x61,
	0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x74, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0x24, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x06, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x3b, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x3c, 0x0a, 0x0e, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22, 0x4e, 0x0a,
	0x17, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22, 0x48, 0x0a,
	0x0a, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x45, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x29, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x0a, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x38,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x0b,
	0x45, 0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x7a,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x50,
	0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x50, 0x72, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xd1, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x22, 0xe1, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6c, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x22, 0x69, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x23, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x5c, 0x0a, 0x04, 0x42, 0x6f, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x37,
	0x0a, 0x0d, 0x42, 0x6f, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x62, 0x6f, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c, 0x74,
	0x52, 0x05, 0x62, 0x6f, 0x6c, 0x74, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x45, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x29, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x22, 0x4e, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0xab, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x44, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22,
	0xbb, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x44, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x27, 0x0a,
	0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x69, 0x7a,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x73,
	0x69, 0x7a, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4e, 0x65,
	0x65, 0x64, 0x52, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x50, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4e,
	0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x4e, 0x65, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x47, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3a, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x22, 0x4e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x6e, 0x12,
	0x0c, 0x0a, 0x01, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x22, 0xe9, 0x01,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x02, 0x70, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x36, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64,
	0x36, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x02, 0x73, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x02, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x6f, 0x6c, 0x74, 0x49, 0x64, 0x22, 0xf9, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x6e, 0x12,
	0x0c, 0x0a, 0x01, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x36, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x36, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x4f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x68, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x30, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x31, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x6f, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x6f, 0x6c, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x51, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x55, 0x73, 0x65, 0x52, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x55, 0x73, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x02, 0x64, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x02, 0x70, 0x6e, 0x22, 0x8b, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x73, 0x69, 0x73,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x6f, 0x77, 0x31, 0x12, 0x37, 0x0a, 0x08, 0x73,
	0x69, 0x7a, 0x65, 0x52, 0x6f, 0x77, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x73, 0x69, 0x7a, 0x65,
	0x52, 0x6f, 0x77, 0x32, 0x22, 0xac, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x46, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x46, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74,
	0x32, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f,
	0x6e, 0x41, 0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x22, 0xaa, 0x04, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c,
	0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x70,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x72, 0x72, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x63, 0x6f, 0x72, 0x72, 0x6f, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x74, 0x65, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61,
	0x72, 0x6b, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x1a, 0x74, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x4f,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x0c,
	0x0a, 0x01, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0c, 0x0a, 0x01,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x30,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x31, 0x12, 0x0c, 0x0a, 0x01, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x36, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x36, 0x22, 0x26, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0a, 0x0a, 0x06, 0x77, 0x65, 0x6c, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x66, 0x6c, 0x61, 0x74, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x65, 0x10, 0x02,
	0x22, 0xdc, 0x01, 0x0a, 0x08, 0x42, 0x6f, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x78, 0x0a, 0x0a, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xb0, 0x03, 0x0a, 0x0a, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68,
	0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x11, 0x0a,
	0x04, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x49, 0x6e,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0xd1, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71,
	0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x6f, 0x66, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x76, 0x61, 0x6c, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x10, 0x02, 0x22, 0x77, 0x0a, 0x09,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x34, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xf2, 0x07, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x78, 0x69, 0x61, 0x6c,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x78, 0x69,
	0x61, 0x6c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x62, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x3f, 0x0a, 0x07, 0x66, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x52, 0x07, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x53, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x36,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x0b, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0b, 0x66, 0x6c,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x6f, 0x6c, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x6f, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x62, 0x6f, 0x6c, 0x74, 0x73,
	0x12, 0x2e, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x12, 0x2b, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x73, 0x65, 0x57, 0x61, 0x73, 0x68, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x06, 0x77, 0x61, 0x73, 0x68, 0x65, 0x72, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x73,
	0x68, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x77, 0x61, 0x73, 0x68, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x22, 0x36, 0x0a, 0x07, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x6e, 0x6f, 0x6e, 0x49, 0x73, 0x6f, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x10, 0x02, 0x22,
	0x19, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x62, 0x6f, 0x6c, 0x74, 0x10,
	0x00, 0x12, 0x07, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x10, 0x01, 0x22, 0x46, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x0e, 0x75, 0x6e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x69, 0x6e,
	0x10, 0x02, 0x22, 0x26, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x10, 0x01, 0x22, 0x90, 0x05, 0x0a, 0x0c, 0x46,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x68, 0x12, 0x0e, 0x0a,
	0x02, 0x68, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x68, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x30, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x30, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x31, 0x12, 0x0c, 0x0a,
	0x01, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x64,
	0x36, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x36, 0x12, 0x0c, 0x0a, 0x01, 0x63,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x66, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x4b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x4b, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x4b, 0x41, 0x74, 0x32,
	0x30, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x4b, 0x41, 0x74, 0x32, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x4b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x4b, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x41, 0x74, 0x32, 0x30, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x41, 0x74, 0x32,
	0x30, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x46, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x46, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41,
	0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x69, 0x67, 0x6d,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x4d, 0x41, 0x74, 0x32, 0x30, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x4d, 0x41, 0x74, 0x32, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x52, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x52, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x41, 0x74, 0x32, 0x30, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x41, 0x74, 0x32,
	0x30, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x84, 0x02,
	0x0a, 0x0a, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41,
	0x74, 0x32, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x22, 0x91, 0x02, 0x0a, 0x0c, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63,
	0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x70, 0x72,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x0b, 0x45, 0x6d, 0x62, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x6c, 0x70, 0x66, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x61, 0x6c,
	0x70, 0x66, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x22, 0xde, 0x06, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x6b,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x6b, 0x70, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6b, 0x70, 0x31,
	0x12, 0x0e, 0x0a, 0x02, 0x43, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x63, 0x66,
	0x12, 0x10, 0x0a, 0x03, 0x44, 0x7a, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64,
	0x7a, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x4d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02,
	0x6d, 0x4d, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x4d, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x6d, 0x4d, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x70, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x70, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x02, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d,
	0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x31,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x30, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x54, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d,
	0x61, 0x54, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x54, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x54, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x70, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50,
	0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x31,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x4d, 0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x4d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x30, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x30, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d, 0x30, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x4d, 0x6f, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x4d, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b,
	0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x74, 0x61, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x74, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x54, 0x65, 0x74, 0x61, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x05, 0x64, 0x54, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x54,
	0x65, 0x74, 0x61, 0x4b, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x54, 0x65, 0x74,
	0x61, 0x4b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x74, 0x61, 0x4b, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x74, 0x65, 0x74, 0x61, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x31,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x61, 0x78, 0x32, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x32,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x33, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x6d, 0x61, 0x78, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x34, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x35,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x35, 0x12, 0x12, 0x0a, 0x04,
	0x4d, 0x61, 0x78, 0x36, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x36,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x37, 0x18, 0x22, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x6d, 0x61, 0x78, 0x37, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x38, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x38, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x39,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x39, 0x12, 0x14, 0x0a, 0x05,
	0x4d, 0x61, 0x78, 0x31, 0x30, 0x18, 0x25, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x61, 0x78,
	0x31, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x31, 0x31, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x31, 0x31, 0x22, 0xa0, 0x06, 0x0a, 0x12, 0x43, 0x61, 0x6c,
	0x63, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x50, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x66, 0x50,
	0x62, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x50, 0x62, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x66, 0x50, 0x62, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x50, 0x62, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x50, 0x62, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x50, 0x62,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x50, 0x62, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x66, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x42, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x42, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61,
	0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61,
	0x4d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x51, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x66, 0x51, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x50, 0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x50, 0x62, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x50, 0x62, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73,
	0x50, 0x62, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x50, 0x62, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x73, 0x50, 0x62, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x50, 0x62, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x73, 0x50, 0x62, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x53, 0x69, 0x67, 0x6d,
	0x61, 0x42, 0x32, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x53, 0x69, 0x67, 0x6d,
	0x61, 0x42, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0e, 0x0a, 0x02, 0x73,
	0x51, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x51, 0x12, 0x0e, 0x0a, 0x02, 0x71,
	0x50, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x6b, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6b, 0x70,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x72, 0x65, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x6d, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x71, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61,
	0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x51, 0x6d, 0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x71, 0x6d, 0x61,
	0x78, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x1a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42,
	0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42,
	0x32, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x51, 0x6d, 0x61, 0x78, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x51, 0x6d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x54, 0x65, 0x74, 0x61,
	0x31, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x54, 0x65, 0x74, 0x61, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x31, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x76, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x54, 0x65,
	0x74, 0x61, 0x32, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x54, 0x65, 0x74, 0x61,
	0x32, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x32, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x32, 0x22, 0x8b, 0x03, 0x0a, 0x0f,
	0x43, 0x61, 0x6c, 0x63, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x50, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x62, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x62, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x62,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x70, 0x62, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x70, 0x62, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x4d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67,
	0x6d, 0x61, 0x4d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0c, 0x0a,
	0x01, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x71,
	0x50, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x6b, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6b, 0x70,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x72, 0x65, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x6d, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x71, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61,
	0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x51, 0x6d, 0x61, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x71, 0x6d, 0x61,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x56, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a,
	0x08, 0x56, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x76, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x22, 0xb1, 0x02, 0x0a, 0x10, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x62, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x62, 0x30, 0x12, 0x10,
	0x0a, 0x03, 0x44, 0x73, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x50, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x52, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72, 0x70,
	0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x51, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x51, 0x66, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x66, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x51, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x4d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x4d, 0x12, 0x3a,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x61,
	0x73, 0x69, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x73, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73, 0x22, 0xca, 0x10,
	0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x62, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x30, 0x12, 0x10,
	0x0a, 0x03, 0x44, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x63, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x50, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x52, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x70,
	0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x51, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x51, 0x66, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x71, 0x66, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x51, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x4d,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x4d, 0x12, 0x34,
	0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x52, 0x05, 0x62,
	0x61, 0x73, 0x69, 0x73, 0x12, 0x3d, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x1a, 0xd9, 0x06, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x46, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x6b, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6b, 0x70, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x43, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x7a, 0x76, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x7a, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x4d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x4d, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x4d, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x4d, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x70, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x70, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x4d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6d, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x4d, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d,
	0x30, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x54, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x54, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6d, 0x61, 0x52, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x52, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x54, 0x70, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x54, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x52, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x52, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x31, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x6d, 0x61, 0x50, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x50, 0x30, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x50,
	0x30, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x4d, 0x70, 0x30, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x4d, 0x70, 0x30, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d, 0x30,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x70, 0x6d,
	0x30, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x6f, 0x70, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x6f, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x70, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x69, 0x67, 0x6d, 0x61, 0x4b, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x74, 0x61, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x54, 0x65, 0x74, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x54, 0x65, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x54, 0x65, 0x74, 0x61, 0x4b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x65, 0x74,
	0x61, 0x4b, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x74, 0x61, 0x4b, 0x12,
	0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x31, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x61, 0x78, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x32, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x33, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x33, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x61, 0x78, 0x34, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x34, 0x12,
	0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x35, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x61, 0x78, 0x35, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x36, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x36, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x37, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x37, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x61, 0x78, 0x38, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x78, 0x38, 0x12,
	0x12, 0x0a, 0x04, 0x4d, 0x61, 0x78, 0x39, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x61, 0x78, 0x39, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78, 0x31, 0x30, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x31, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x78,
	0x31, 0x31, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x31, 0x31, 0x1a,
	0xec, 0x04, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x50, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x50, 0x62, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x50, 0x62, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x50,
	0x62, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x50, 0x62, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x50, 0x62, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x50, 0x62, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x50, 0x62, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x53,
	0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x53,
	0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x53, 0x69, 0x67, 0x6d, 0x61,
	0x42, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x53, 0x69, 0x67, 0x6d, 0x61,
	0x42, 0x32, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x51,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x51, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x50,
	0x62, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x50, 0x62, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x50, 0x62, 0x31, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x50, 0x62, 0x31,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x50, 0x62, 0x32, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x50, 0x62, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x50, 0x62, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x50, 0x62, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x53, 0x69, 0x67,
	0x6d, 0x61, 0x42, 0x31, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x53, 0x69, 0x67,
	0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x44, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x51, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x51, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x50, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x6b, 0x70, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6b,
	0x70, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6b, 0x70, 0x31, 0x12, 0x12,
	0x0a, 0x04, 0x4d, 0x72, 0x65, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x72,
	0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x71, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61, 0x78, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x6d,
	0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x6d, 0x61, 0x78, 0x12, 0x3e,
	0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x46, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0xc9,
	0x02, 0x0a, 0x05, 0x42, 0x61, 0x73, 0x69, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x62, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62,
	0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x62, 0x32, 0x12, 0x10, 0x0a, 0x03,
	0x50, 0x62, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x62, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d,
	0x61, 0x42, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61,
	0x42, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x50, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x71, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x6b, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6b, 0x70, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x72,
	0x65, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x72, 0x65, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x72,
	0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x6d, 0x61, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x6d, 0x61, 0x78, 0x22, 0xdd, 0x02, 0x0a, 0x0e, 0x46,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x66, 0x6c,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x6f, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x62, 0x6f, 0x6c,
	0x74, 0x12, 0x30, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x04,
	0x63, 0x61, 0x6c, 0x63, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73,
	0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x95,
	0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61,
	0x6e, 0x64, 0x61, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x07, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x32, 0x0a, 0x09, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x09, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x32, 0x48, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x9e, 0x09, 0x0a, 0x10, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x1f, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x57, 0x69, 0x74, 0x68, 0x49, 0x73, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x61,
	0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6c,
	0x61, 0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6c, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6c, 0x61,
	0x73, 0x74, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6c, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68,
	0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x6c, 0x70, 0x68, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x93, 0x0b, 0x0a, 0x0d, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b,
	0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x45,
	0x6e, 0x76, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x12, 0x1c, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6e, 0x76, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc0, 0x0a, 0x0a, 0x0d, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x6c, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x42, 0x6f, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6f, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x12, 0x1d,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6c,
	0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61,
	0x72, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x2e,
	0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x25,
	0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x73, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x61, 0x0a, 0x11, 0x43, 0x61,
	0x6c, 0x63, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4c, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x57, 0x0a,
	0x0b, 0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_moment_api_moment_proto_rawDescOnce sync.Once
	file_moment_api_moment_proto_rawDescData = file_moment_api_moment_proto_rawDesc
)

func file_moment_api_moment_proto_rawDescGZIP() []byte {
	file_moment_api_moment_proto_rawDescOnce.Do(func() {
		file_moment_api_moment_proto_rawDescData = protoimpl.X.CompressGZIP(file_moment_api_moment_proto_rawDescData)
	})
	return file_moment_api_moment_proto_rawDescData
}

var file_moment_api_moment_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_moment_api_moment_proto_msgTypes = make([]protoimpl.MessageInfo, 106)
var file_moment_api_moment_proto_goTypes = []interface{}{
	(FlangeData_Type)(0),                     // 0: moment_api.FlangeData.Type
	(GasketData_Type)(0),                     // 1: moment_api.GasketData.Type
	(CalcFlangeRequest_Flanges)(0),           // 2: moment_api.CalcFlangeRequest.Flanges
	(CalcFlangeRequest_Type)(0),              // 3: moment_api.CalcFlangeRequest.Type
	(CalcFlangeRequest_Condition)(0),         // 4: moment_api.CalcFlangeRequest.Condition
	(CalcFlangeRequest_Calcutation)(0),       // 5: moment_api.CalcFlangeRequest.Calcutation
	(*PingRequest)(nil),                      // 6: moment_api.PingRequest
	(*PingResponse)(nil),                     // 7: moment_api.PingResponse
	(*IdResponse)(nil),                       // 8: moment_api.IdResponse
	(*Response)(nil),                         // 9: moment_api.Response
	(*Material)(nil),                         // 10: moment_api.Material
	(*MaterialWithIsEmpty)(nil),              // 11: moment_api.MaterialWithIsEmpty
	(*GetMaterialsRequest)(nil),              // 12: moment_api.GetMaterialsRequest
	(*CreateMaterialRequest)(nil),            // 13: moment_api.CreateMaterialRequest
	(*UpdateMaterialRequest)(nil),            // 14: moment_api.UpdateMaterialRequest
	(*DeleteMaterialRequest)(nil),            // 15: moment_api.DeleteMaterialRequest
	(*MaterialsResponse)(nil),                // 16: moment_api.MaterialsResponse
	(*MaterialsWithIsEmptyResponse)(nil),     // 17: moment_api.MaterialsWithIsEmptyResponse
	(*GetMaterialsDataRequest)(nil),          // 18: moment_api.GetMaterialsDataRequest
	(*MaterialsDataResponse)(nil),            // 19: moment_api.MaterialsDataResponse
	(*Voltage)(nil),                          // 20: moment_api.Voltage
	(*CreateVoltageRequest)(nil),             // 21: moment_api.CreateVoltageRequest
	(*UpdateVoltageRequest)(nil),             // 22: moment_api.UpdateVoltageRequest
	(*DeleteVoltageRequest)(nil),             // 23: moment_api.DeleteVoltageRequest
	(*Elasticity)(nil),                       // 24: moment_api.Elasticity
	(*CreateElasticityRequest)(nil),          // 25: moment_api.CreateElasticityRequest
	(*UpdateElasticityRequest)(nil),          // 26: moment_api.UpdateElasticityRequest
	(*DeleteElasticityRequest)(nil),          // 27: moment_api.DeleteElasticityRequest
	(*Alpha)(nil),                            // 28: moment_api.Alpha
	(*CreateAlphaRequest)(nil),               // 29: moment_api.CreateAlphaRequest
	(*UpdateAlphaRequest)(nil),               // 30: moment_api.UpdateAlphaRequest
	(*DeleteAlphaRequest)(nil),               // 31: moment_api.DeleteAlphaRequest
	(*Gasket)(nil),                           // 32: moment_api.Gasket
	(*GasketWithThick)(nil),                  // 33: moment_api.GasketWithThick
	(*GetGasketRequest)(nil),                 // 34: moment_api.GetGasketRequest
	(*CreateGasketRequest)(nil),              // 35: moment_api.CreateGasketRequest
	(*UpdateGasketRequest)(nil),              // 36: moment_api.UpdateGasketRequest
	(*DeleteGasketRequest)(nil),              // 37: moment_api.DeleteGasketRequest
	(*GasketResponse)(nil),                   // 38: moment_api.GasketResponse
	(*GasketWithThickResponse)(nil),          // 39: moment_api.GasketWithThickResponse
	(*GasketType)(nil),                       // 40: moment_api.GasketType
	(*GetGasketTypeRequest)(nil),             // 41: moment_api.GetGasketTypeRequest
	(*CreateGasketTypeRequest)(nil),          // 42: moment_api.CreateGasketTypeRequest
	(*UpdateGasketTypeRequest)(nil),          // 43: moment_api.UpdateGasketTypeRequest
	(*DeleteGasketTypeRequest)(nil),          // 44: moment_api.DeleteGasketTypeRequest
	(*GasketTypeResponse)(nil),               // 45: moment_api.GasketTypeResponse
	(*Env)(nil),                              // 46: moment_api.Env
	(*GetEnvRequest)(nil),                    // 47: moment_api.GetEnvRequest
	(*CreateEnvRequest)(nil),                 // 48: moment_api.CreateEnvRequest
	(*UpdateEnvRequest)(nil),                 // 49: moment_api.UpdateEnvRequest
	(*DeleteEnvRequest)(nil),                 // 50: moment_api.DeleteEnvRequest
	(*EnvResponse)(nil),                      // 51: moment_api.EnvResponse
	(*CreateEnvDataRequest)(nil),             // 52: moment_api.CreateEnvDataRequest
	(*UpdateEnvDataRequest)(nil),             // 53: moment_api.UpdateEnvDataRequest
	(*DeleteEnvDataRequest)(nil),             // 54: moment_api.DeleteEnvDataRequest
	(*CreateGasketDataRequest)(nil),          // 55: moment_api.CreateGasketDataRequest
	(*UpdateGasketDataRequest)(nil),          // 56: moment_api.UpdateGasketDataRequest
	(*DeleteGasketDataRequest)(nil),          // 57: moment_api.DeleteGasketDataRequest
	(*GetBoltsRequest)(nil),                  // 58: moment_api.GetBoltsRequest
	(*CreateBoltRequest)(nil),                // 59: moment_api.CreateBoltRequest
	(*UpdateBoltRequest)(nil),                // 60: moment_api.UpdateBoltRequest
	(*DeleteBoltRequest)(nil),                // 61: moment_api.DeleteBoltRequest
	(*Bolt)(nil),                             // 62: moment_api.Bolt
	(*BoltsResponse)(nil),                    // 63: moment_api.BoltsResponse
	(*GetTypeFlangeRequest)(nil),             // 64: moment_api.GetTypeFlangeRequest
	(*CreateTypeFlangeRequest)(nil),          // 65: moment_api.CreateTypeFlangeRequest
	(*UpdateTypeFlangeRequest)(nil),          // 66: moment_api.UpdateTypeFlangeRequest
	(*DeleteTypeFlangeRequest)(nil),          // 67: moment_api.DeleteTypeFlangeRequest
	(*TypeFlange)(nil),                       // 68: moment_api.TypeFlange
	(*TypeFlangeResponse)(nil),               // 69: moment_api.TypeFlangeResponse
	(*GetStandartsRequest)(nil),              // 70: moment_api.GetStandartsRequest
	(*CreateStandartRequest)(nil),            // 71: moment_api.CreateStandartRequest
	(*UpdateStandartRequest)(nil),            // 72: moment_api.UpdateStandartRequest
	(*DeleteStandartRequest)(nil),            // 73: moment_api.DeleteStandartRequest
	(*StandartWithSize)(nil),                 // 74: moment_api.StandartWithSize
	(*Standart)(nil),                         // 75: moment_api.Standart
	(*StandartsResponse)(nil),                // 76: moment_api.StandartsResponse
	(*StandartsWithSizeResponse)(nil),        // 77: moment_api.StandartsWithSizeResponse
	(*GetFlangeSizeRequest)(nil),             // 78: moment_api.GetFlangeSizeRequest
	(*CreateFlangeSizeRequest)(nil),          // 79: moment_api.CreateFlangeSizeRequest
	(*UpdateFlangeSizeRequest)(nil),          // 80: moment_api.UpdateFlangeSizeRequest
	(*DeleteFlangeSizeRequest)(nil),          // 81: moment_api.DeleteFlangeSizeRequest
	(*GetBasisFlangeSizeRequest)(nil),        // 82: moment_api.GetBasisFlangeSizeRequest
	(*BasisFlangeSize)(nil),                  // 83: moment_api.BasisFlangeSize
	(*BasisFlangeSizeResponse)(nil),          // 84: moment_api.BasisFlangeSizeResponse
	(*MaterialData)(nil),                     // 85: moment_api.MaterialData
	(*FlangeData)(nil),                       // 86: moment_api.FlangeData
	(*BoltData)(nil),                         // 87: moment_api.BoltData
	(*WasherData)(nil),                       // 88: moment_api.WasherData
	(*GasketData)(nil),                       // 89: moment_api.GasketData
	(*EmbedData)(nil),                        // 90: moment_api.EmbedData
	(*CalcFlangeRequest)(nil),                // 91: moment_api.CalcFlangeRequest
	(*FlangeResult)(nil),                     // 92: moment_api.FlangeResult
	(*BoltResult)(nil),                       // 93: moment_api.BoltResult
	(*GasketResult)(nil),                     // 94: moment_api.GasketResult
	(*EmbedResult)(nil),                      // 95: moment_api.EmbedResult
	(*StrengthResult)(nil),                   // 96: moment_api.StrengthResult
	(*CalcMomentStrength)(nil),               // 97: moment_api.CalcMomentStrength
	(*CalcMomentBasis)(nil),                  // 98: moment_api.CalcMomentBasis
	(*CalculatedFlange)(nil),                 // 99: moment_api.CalculatedFlange
	(*CalcFormulas)(nil),                     // 100: moment_api.CalcFormulas
	(*FlangeResponse)(nil),                   // 101: moment_api.FlangeResponse
	(*GetFlangeRequest)(nil),                 // 102: moment_api.GetFlangeRequest
	(*GetFlangeResponse)(nil),                // 103: moment_api.GetFlangeResponse
	(*MaterialsDataResponse_Voltage)(nil),    // 104: moment_api.MaterialsDataResponse.Voltage
	(*MaterialsDataResponse_Elasticity)(nil), // 105: moment_api.MaterialsDataResponse.Elasticity
	(*MaterialsDataResponse_Alpha)(nil),      // 106: moment_api.MaterialsDataResponse.Alpha
	(*FlangeData_Size)(nil),                  // 107: moment_api.FlangeData.Size
	(*GasketData_Data)(nil),                  // 108: moment_api.GasketData.Data
	(*CalcFormulas_StrengthF)(nil),           // 109: moment_api.CalcFormulas.StrengthF
	(*CalcFormulas_Strength)(nil),            // 110: moment_api.CalcFormulas.Strength
	(*CalcFormulas_Basis)(nil),               // 111: moment_api.CalcFormulas.Basis
}
var file_moment_api_moment_proto_depIdxs = []int32{
	10,  // 0: moment_api.MaterialsResponse.materials:type_name -> moment_api.Material
	11,  // 1: moment_api.MaterialsWithIsEmptyResponse.materials:type_name -> moment_api.MaterialWithIsEmpty
	104, // 2: moment_api.MaterialsDataResponse.voltage:type_name -> moment_api.MaterialsDataResponse.Voltage
	105, // 3: moment_api.MaterialsDataResponse.elasticity:type_name -> moment_api.MaterialsDataResponse.Elasticity
	106, // 4: moment_api.MaterialsDataResponse.alpha:type_name -> moment_api.MaterialsDataResponse.Alpha
	20,  // 5: moment_api.CreateVoltageRequest.voltage:type_name -> moment_api.Voltage
	24,  // 6: moment_api.CreateElasticityRequest.elasticity:type_name -> moment_api.Elasticity
	28,  // 7: moment_api.CreateAlphaRequest.alpha:type_name -> moment_api.Alpha
	32,  // 8: moment_api.GasketResponse.gasket:type_name -> moment_api.Gasket
	33,  // 9: moment_api.GasketWithThickResponse.gasket:type_name -> moment_api.GasketWithThick
	40,  // 10: moment_api.GasketTypeResponse.gasketType:type_name -> moment_api.GasketType
	46,  // 11: moment_api.EnvResponse.env:type_name -> moment_api.Env
	62,  // 12: moment_api.BoltsResponse.bolts:type_name -> moment_api.Bolt
	68,  // 13: moment_api.TypeFlangeResponse.typeFlanges:type_name -> moment_api.TypeFlange
	84,  // 14: moment_api.StandartWithSize.sizes:type_name -> moment_api.BasisFlangeSizeResponse
	75,  // 15: moment_api.StandartsResponse.standarts:type_name -> moment_api.Standart
	74,  // 16: moment_api.StandartsWithSizeResponse.standarts:type_name -> moment_api.StandartWithSize
	83,  // 17: moment_api.BasisFlangeSizeResponse.sizeRow1:type_name -> moment_api.BasisFlangeSize
	83,  // 18: moment_api.BasisFlangeSizeResponse.sizeRow2:type_name -> moment_api.BasisFlangeSize
	0,   // 19: moment_api.FlangeData.type:type_name -> moment_api.FlangeData.Type
	107, // 20: moment_api.FlangeData.size:type_name -> moment_api.FlangeData.Size
	85,  // 21: moment_api.FlangeData.material:type_name -> moment_api.MaterialData
	85,  // 22: moment_api.FlangeData.ringMaterial:type_name -> moment_api.MaterialData
	85,  // 23: moment_api.BoltData.material:type_name -> moment_api.MaterialData
	85,  // 24: moment_api.WasherData.material:type_name -> moment_api.MaterialData
	108, // 25: moment_api.GasketData.data:type_name -> moment_api.GasketData.Data
	85,  // 26: moment_api.EmbedData.material:type_name -> moment_api.MaterialData
	2,   // 27: moment_api.CalcFlangeRequest.flanges:type_name -> moment_api.CalcFlangeRequest.Flanges
	3,   // 28: moment_api.CalcFlangeRequest.type:type_name -> moment_api.CalcFlangeRequest.Type
	4,   // 29: moment_api.CalcFlangeRequest.condition:type_name -> moment_api.CalcFlangeRequest.Condition
	5,   // 30: moment_api.CalcFlangeRequest.calculation:type_name -> moment_api.CalcFlangeRequest.Calcutation
	86,  // 31: moment_api.CalcFlangeRequest.flangesData:type_name -> moment_api.FlangeData
	87,  // 32: moment_api.CalcFlangeRequest.bolts:type_name -> moment_api.BoltData
	89,  // 33: moment_api.CalcFlangeRequest.gasket:type_name -> moment_api.GasketData
	90,  // 34: moment_api.CalcFlangeRequest.embed:type_name -> moment_api.EmbedData
	88,  // 35: moment_api.CalcFlangeRequest.washer:type_name -> moment_api.WasherData
	96,  // 36: moment_api.CalcMomentStrength.strength:type_name -> moment_api.StrengthResult
	97,  // 37: moment_api.CalculatedFlange.strength:type_name -> moment_api.CalcMomentStrength
	98,  // 38: moment_api.CalculatedFlange.basis:type_name -> moment_api.CalcMomentBasis
	111, // 39: moment_api.CalcFormulas.basis:type_name -> moment_api.CalcFormulas.Basis
	110, // 40: moment_api.CalcFormulas.strength:type_name -> moment_api.CalcFormulas.Strength
	92,  // 41: moment_api.FlangeResponse.flanges:type_name -> moment_api.FlangeResult
	93,  // 42: moment_api.FlangeResponse.bolt:type_name -> moment_api.BoltResult
	94,  // 43: moment_api.FlangeResponse.gasket:type_name -> moment_api.GasketResult
	95,  // 44: moment_api.FlangeResponse.embed:type_name -> moment_api.EmbedResult
	99,  // 45: moment_api.FlangeResponse.calc:type_name -> moment_api.CalculatedFlange
	100, // 46: moment_api.FlangeResponse.formulas:type_name -> moment_api.CalcFormulas
	68,  // 47: moment_api.GetFlangeResponse.typeFlange:type_name -> moment_api.TypeFlange
	74,  // 48: moment_api.GetFlangeResponse.standarts:type_name -> moment_api.StandartWithSize
	33,  // 49: moment_api.GetFlangeResponse.gaskets:type_name -> moment_api.GasketWithThick
	46,  // 50: moment_api.GetFlangeResponse.env:type_name -> moment_api.Env
	10,  // 51: moment_api.GetFlangeResponse.materials:type_name -> moment_api.Material
	1,   // 52: moment_api.GasketData.Data.type:type_name -> moment_api.GasketData.Type
	109, // 53: moment_api.CalcFormulas.Strength.strength:type_name -> moment_api.CalcFormulas.StrengthF
	6,   // 54: moment_api.PingService.Ping:input_type -> moment_api.PingRequest
	12,  // 55: moment_api.MaterialsService.GetMaterials:input_type -> moment_api.GetMaterialsRequest
	18,  // 56: moment_api.MaterialsService.GetMaterialsData:input_type -> moment_api.GetMaterialsDataRequest
	12,  // 57: moment_api.MaterialsService.GetMaterialsWithIsEmpty:input_type -> moment_api.GetMaterialsRequest
	13,  // 58: moment_api.MaterialsService.CreateMaterial:input_type -> moment_api.CreateMaterialRequest
	14,  // 59: moment_api.MaterialsService.UpdateMaterial:input_type -> moment_api.UpdateMaterialRequest
	15,  // 60: moment_api.MaterialsService.DeleteMaterial:input_type -> moment_api.DeleteMaterialRequest
	21,  // 61: moment_api.MaterialsService.CreateVoltage:input_type -> moment_api.CreateVoltageRequest
	22,  // 62: moment_api.MaterialsService.UpdateVoltage:input_type -> moment_api.UpdateVoltageRequest
	23,  // 63: moment_api.MaterialsService.DeleteVoltage:input_type -> moment_api.DeleteVoltageRequest
	25,  // 64: moment_api.MaterialsService.CreateElasticity:input_type -> moment_api.CreateElasticityRequest
	26,  // 65: moment_api.MaterialsService.UpdateElasticity:input_type -> moment_api.UpdateElasticityRequest
	27,  // 66: moment_api.MaterialsService.DeleteElasticity:input_type -> moment_api.DeleteElasticityRequest
	29,  // 67: moment_api.MaterialsService.CreateAlpha:input_type -> moment_api.CreateAlphaRequest
	30,  // 68: moment_api.MaterialsService.UpdateAlpha:input_type -> moment_api.UpdateAlphaRequest
	31,  // 69: moment_api.MaterialsService.DeleteAlpha:input_type -> moment_api.DeleteAlphaRequest
	34,  // 70: moment_api.GasketService.GetGasket:input_type -> moment_api.GetGasketRequest
	34,  // 71: moment_api.GasketService.GetGasketWithThick:input_type -> moment_api.GetGasketRequest
	35,  // 72: moment_api.GasketService.CreateGasket:input_type -> moment_api.CreateGasketRequest
	36,  // 73: moment_api.GasketService.UpdateGasket:input_type -> moment_api.UpdateGasketRequest
	37,  // 74: moment_api.GasketService.DeleteGasket:input_type -> moment_api.DeleteGasketRequest
	41,  // 75: moment_api.GasketService.GetGasketType:input_type -> moment_api.GetGasketTypeRequest
	42,  // 76: moment_api.GasketService.CreateGasketType:input_type -> moment_api.CreateGasketTypeRequest
	43,  // 77: moment_api.GasketService.UpdateGasketType:input_type -> moment_api.UpdateGasketTypeRequest
	44,  // 78: moment_api.GasketService.DeleteGasketType:input_type -> moment_api.DeleteGasketTypeRequest
	47,  // 79: moment_api.GasketService.GetEnv:input_type -> moment_api.GetEnvRequest
	48,  // 80: moment_api.GasketService.CreateEnv:input_type -> moment_api.CreateEnvRequest
	49,  // 81: moment_api.GasketService.UpdateEnv:input_type -> moment_api.UpdateEnvRequest
	50,  // 82: moment_api.GasketService.DeleteEnv:input_type -> moment_api.DeleteEnvRequest
	52,  // 83: moment_api.GasketService.CreateEnvData:input_type -> moment_api.CreateEnvDataRequest
	53,  // 84: moment_api.GasketService.UpdateEnvData:input_type -> moment_api.UpdateEnvDataRequest
	54,  // 85: moment_api.GasketService.DeleteEnvData:input_type -> moment_api.DeleteEnvDataRequest
	55,  // 86: moment_api.GasketService.CreateGasketData:input_type -> moment_api.CreateGasketDataRequest
	56,  // 87: moment_api.GasketService.UpdateGasketData:input_type -> moment_api.UpdateGasketDataRequest
	57,  // 88: moment_api.GasketService.DeleteGasketData:input_type -> moment_api.DeleteGasketDataRequest
	58,  // 89: moment_api.FlangeService.GetBolts:input_type -> moment_api.GetBoltsRequest
	59,  // 90: moment_api.FlangeService.CreateBolt:input_type -> moment_api.CreateBoltRequest
	60,  // 91: moment_api.FlangeService.UpdateBolt:input_type -> moment_api.UpdateBoltRequest
	61,  // 92: moment_api.FlangeService.DeleteBolt:input_type -> moment_api.DeleteBoltRequest
	64,  // 93: moment_api.FlangeService.GetTypeFlange:input_type -> moment_api.GetTypeFlangeRequest
	65,  // 94: moment_api.FlangeService.CreateTypeFlange:input_type -> moment_api.CreateTypeFlangeRequest
	66,  // 95: moment_api.FlangeService.UpdateTypeFlange:input_type -> moment_api.UpdateTypeFlangeRequest
	67,  // 96: moment_api.FlangeService.DeleteTypeFlange:input_type -> moment_api.DeleteTypeFlangeRequest
	70,  // 97: moment_api.FlangeService.GetStandarts:input_type -> moment_api.GetStandartsRequest
	70,  // 98: moment_api.FlangeService.GetStandartsWithSize:input_type -> moment_api.GetStandartsRequest
	71,  // 99: moment_api.FlangeService.CreateStandart:input_type -> moment_api.CreateStandartRequest
	72,  // 100: moment_api.FlangeService.UpdateStandart:input_type -> moment_api.UpdateStandartRequest
	73,  // 101: moment_api.FlangeService.DeleteStandart:input_type -> moment_api.DeleteStandartRequest
	79,  // 102: moment_api.FlangeService.CreateFlangeSize:input_type -> moment_api.CreateFlangeSizeRequest
	80,  // 103: moment_api.FlangeService.UpdateFlangeSize:input_type -> moment_api.UpdateFlangeSizeRequest
	81,  // 104: moment_api.FlangeService.DeleteFlangeSize:input_type -> moment_api.DeleteFlangeSizeRequest
	82,  // 105: moment_api.FlangeService.GetBasisFlangeSize:input_type -> moment_api.GetBasisFlangeSizeRequest
	91,  // 106: moment_api.CalcFlangeService.CalculateFlange:input_type -> moment_api.CalcFlangeRequest
	102, // 107: moment_api.ReadService.GetFlange:input_type -> moment_api.GetFlangeRequest
	7,   // 108: moment_api.PingService.Ping:output_type -> moment_api.PingResponse
	16,  // 109: moment_api.MaterialsService.GetMaterials:output_type -> moment_api.MaterialsResponse
	19,  // 110: moment_api.MaterialsService.GetMaterialsData:output_type -> moment_api.MaterialsDataResponse
	17,  // 111: moment_api.MaterialsService.GetMaterialsWithIsEmpty:output_type -> moment_api.MaterialsWithIsEmptyResponse
	8,   // 112: moment_api.MaterialsService.CreateMaterial:output_type -> moment_api.IdResponse
	9,   // 113: moment_api.MaterialsService.UpdateMaterial:output_type -> moment_api.Response
	9,   // 114: moment_api.MaterialsService.DeleteMaterial:output_type -> moment_api.Response
	9,   // 115: moment_api.MaterialsService.CreateVoltage:output_type -> moment_api.Response
	9,   // 116: moment_api.MaterialsService.UpdateVoltage:output_type -> moment_api.Response
	9,   // 117: moment_api.MaterialsService.DeleteVoltage:output_type -> moment_api.Response
	9,   // 118: moment_api.MaterialsService.CreateElasticity:output_type -> moment_api.Response
	9,   // 119: moment_api.MaterialsService.UpdateElasticity:output_type -> moment_api.Response
	9,   // 120: moment_api.MaterialsService.DeleteElasticity:output_type -> moment_api.Response
	9,   // 121: moment_api.MaterialsService.CreateAlpha:output_type -> moment_api.Response
	9,   // 122: moment_api.MaterialsService.UpdateAlpha:output_type -> moment_api.Response
	9,   // 123: moment_api.MaterialsService.DeleteAlpha:output_type -> moment_api.Response
	38,  // 124: moment_api.GasketService.GetGasket:output_type -> moment_api.GasketResponse
	39,  // 125: moment_api.GasketService.GetGasketWithThick:output_type -> moment_api.GasketWithThickResponse
	8,   // 126: moment_api.GasketService.CreateGasket:output_type -> moment_api.IdResponse
	9,   // 127: moment_api.GasketService.UpdateGasket:output_type -> moment_api.Response
	9,   // 128: moment_api.GasketService.DeleteGasket:output_type -> moment_api.Response
	45,  // 129: moment_api.GasketService.GetGasketType:output_type -> moment_api.GasketTypeResponse
	8,   // 130: moment_api.GasketService.CreateGasketType:output_type -> moment_api.IdResponse
	9,   // 131: moment_api.GasketService.UpdateGasketType:output_type -> moment_api.Response
	9,   // 132: moment_api.GasketService.DeleteGasketType:output_type -> moment_api.Response
	51,  // 133: moment_api.GasketService.GetEnv:output_type -> moment_api.EnvResponse
	8,   // 134: moment_api.GasketService.CreateEnv:output_type -> moment_api.IdResponse
	9,   // 135: moment_api.GasketService.UpdateEnv:output_type -> moment_api.Response
	9,   // 136: moment_api.GasketService.DeleteEnv:output_type -> moment_api.Response
	9,   // 137: moment_api.GasketService.CreateEnvData:output_type -> moment_api.Response
	9,   // 138: moment_api.GasketService.UpdateEnvData:output_type -> moment_api.Response
	9,   // 139: moment_api.GasketService.DeleteEnvData:output_type -> moment_api.Response
	9,   // 140: moment_api.GasketService.CreateGasketData:output_type -> moment_api.Response
	9,   // 141: moment_api.GasketService.UpdateGasketData:output_type -> moment_api.Response
	9,   // 142: moment_api.GasketService.DeleteGasketData:output_type -> moment_api.Response
	63,  // 143: moment_api.FlangeService.GetBolts:output_type -> moment_api.BoltsResponse
	9,   // 144: moment_api.FlangeService.CreateBolt:output_type -> moment_api.Response
	9,   // 145: moment_api.FlangeService.UpdateBolt:output_type -> moment_api.Response
	9,   // 146: moment_api.FlangeService.DeleteBolt:output_type -> moment_api.Response
	69,  // 147: moment_api.FlangeService.GetTypeFlange:output_type -> moment_api.TypeFlangeResponse
	8,   // 148: moment_api.FlangeService.CreateTypeFlange:output_type -> moment_api.IdResponse
	9,   // 149: moment_api.FlangeService.UpdateTypeFlange:output_type -> moment_api.Response
	9,   // 150: moment_api.FlangeService.DeleteTypeFlange:output_type -> moment_api.Response
	76,  // 151: moment_api.FlangeService.GetStandarts:output_type -> moment_api.StandartsResponse
	77,  // 152: moment_api.FlangeService.GetStandartsWithSize:output_type -> moment_api.StandartsWithSizeResponse
	8,   // 153: moment_api.FlangeService.CreateStandart:output_type -> moment_api.IdResponse
	9,   // 154: moment_api.FlangeService.UpdateStandart:output_type -> moment_api.Response
	9,   // 155: moment_api.FlangeService.DeleteStandart:output_type -> moment_api.Response
	9,   // 156: moment_api.FlangeService.CreateFlangeSize:output_type -> moment_api.Response
	9,   // 157: moment_api.FlangeService.UpdateFlangeSize:output_type -> moment_api.Response
	9,   // 158: moment_api.FlangeService.DeleteFlangeSize:output_type -> moment_api.Response
	84,  // 159: moment_api.FlangeService.GetBasisFlangeSize:output_type -> moment_api.BasisFlangeSizeResponse
	101, // 160: moment_api.CalcFlangeService.CalculateFlange:output_type -> moment_api.FlangeResponse
	103, // 161: moment_api.ReadService.GetFlange:output_type -> moment_api.GetFlangeResponse
	108, // [108:162] is the sub-list for method output_type
	54,  // [54:108] is the sub-list for method input_type
	54,  // [54:54] is the sub-list for extension type_name
	54,  // [54:54] is the sub-list for extension extendee
	0,   // [0:54] is the sub-list for field type_name
}

func init() { file_moment_api_moment_proto_init() }
func file_moment_api_moment_proto_init() {
	if File_moment_api_moment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_moment_api_moment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Material); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialWithIsEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaterialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMaterialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsWithIsEmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaterialsDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voltage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVoltageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVoltageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVoltageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Elasticity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateElasticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateElasticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteElasticityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alpha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlphaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlphaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlphaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Gasket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketWithThick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketWithThickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGasketTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGasketTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGasketTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGasketTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEnvRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEnvDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEnvDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEnvDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGasketDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGasketDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGasketDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoltsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBoltRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBoltRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBoltRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bolt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoltsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTypeFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTypeFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTypeFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTypeFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeFlange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeFlangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStandartsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStandartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStandartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStandartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandartWithSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Standart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandartsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StandartsWithSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlangeSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFlangeSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlangeSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFlangeSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasisFlangeSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasisFlangeSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasisFlangeSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoltData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WasherData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoltResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmbedResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StrengthResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcMomentStrength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcMomentBasis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatedFlange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcFormulas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsDataResponse_Voltage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsDataResponse_Elasticity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialsDataResponse_Alpha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeData_Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketData_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcFormulas_StrengthF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcFormulas_Strength); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_api_moment_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcFormulas_Basis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moment_api_moment_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   106,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_moment_api_moment_proto_goTypes,
		DependencyIndexes: file_moment_api_moment_proto_depIdxs,
		EnumInfos:         file_moment_api_moment_proto_enumTypes,
		MessageInfos:      file_moment_api_moment_proto_msgTypes,
	}.Build()
	File_moment_api_moment_proto = out.File
	file_moment_api_moment_proto_rawDesc = nil
	file_moment_api_moment_proto_goTypes = nil
	file_moment_api_moment_proto_depIdxs = nil
}
