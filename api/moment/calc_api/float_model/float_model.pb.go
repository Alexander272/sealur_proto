// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: moment/calc_api/float_model.proto

package float_model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GasketData_Type int32

const (
	GasketData_Soft  GasketData_Type = 0
	GasketData_Oval  GasketData_Type = 1
	GasketData_Metal GasketData_Type = 2
)

// Enum value maps for GasketData_Type.
var (
	GasketData_Type_name = map[int32]string{
		0: "Soft",
		1: "Oval",
		2: "Metal",
	}
	GasketData_Type_value = map[string]int32{
		"Soft":  0,
		"Oval":  1,
		"Metal": 2,
	}
)

func (x GasketData_Type) Enum() *GasketData_Type {
	p := new(GasketData_Type)
	*p = x
	return p
}

func (x GasketData_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GasketData_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_moment_calc_api_float_model_proto_enumTypes[0].Descriptor()
}

func (GasketData_Type) Type() protoreflect.EnumType {
	return &file_moment_calc_api_float_model_proto_enumTypes[0]
}

func (x GasketData_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GasketData_Type.Descriptor instead.
func (GasketData_Type) EnumDescriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{3, 0}
}

type MaterialData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,2,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,3,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20   float64 `protobuf:"fixed64,4,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma       float64 `protobuf:"fixed64,5,opt,name=sigma,proto3" json:"sigma,omitempty"`
}

func (x *MaterialData) Reset() {
	*x = MaterialData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialData) ProtoMessage() {}

func (x *MaterialData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialData.ProtoReflect.Descriptor instead.
func (*MaterialData) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{0}
}

func (x *MaterialData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MaterialData) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *MaterialData) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *MaterialData) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *MaterialData) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

type FlangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DOut     float64       `protobuf:"fixed64,1,opt,name=dOut,proto3" json:"dOut,omitempty"`
	D        float64       `protobuf:"fixed64,2,opt,name=d,proto3" json:"d,omitempty"`
	D6       float64       `protobuf:"fixed64,3,opt,name=d6,proto3" json:"d6,omitempty"`
	T        float64       `protobuf:"fixed64,4,opt,name=t,proto3" json:"t,omitempty"`
	MarkId   string        `protobuf:"bytes,5,opt,name=markId,proto3" json:"markId,omitempty"`
	Material *MaterialData `protobuf:"bytes,6,opt,name=material,proto3" json:"material,omitempty"`
	Width    float64       `protobuf:"fixed64,7,opt,name=width,proto3" json:"width,omitempty"`
	DIn      float64       `protobuf:"fixed64,8,opt,name=dIn,proto3" json:"dIn,omitempty"`
}

func (x *FlangeData) Reset() {
	*x = FlangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeData) ProtoMessage() {}

func (x *FlangeData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeData.ProtoReflect.Descriptor instead.
func (*FlangeData) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{1}
}

func (x *FlangeData) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *FlangeData) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *FlangeData) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

func (x *FlangeData) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *FlangeData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *FlangeData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *FlangeData) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FlangeData) GetDIn() float64 {
	if x != nil {
		return x.DIn
	}
	return 0
}

type CapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H        float64       `protobuf:"fixed64,1,opt,name=h,proto3" json:"h,omitempty"`
	Radius   float64       `protobuf:"fixed64,2,opt,name=radius,proto3" json:"radius,omitempty"`
	S        float64       `protobuf:"fixed64,3,opt,name=s,proto3" json:"s,omitempty"`
	T        float64       `protobuf:"fixed64,4,opt,name=t,proto3" json:"t,omitempty"`
	MarkId   string        `protobuf:"bytes,5,opt,name=markId,proto3" json:"markId,omitempty"`
	Material *MaterialData `protobuf:"bytes,6,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *CapData) Reset() {
	*x = CapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapData) ProtoMessage() {}

func (x *CapData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapData.ProtoReflect.Descriptor instead.
func (*CapData) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{2}
}

func (x *CapData) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *CapData) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *CapData) GetS() float64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *CapData) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *CapData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *CapData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

type GasketData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasketId  string           `protobuf:"bytes,1,opt,name=gasketId,proto3" json:"gasketId,omitempty"`
	EnvId     string           `protobuf:"bytes,2,opt,name=envId,proto3" json:"envId,omitempty"`
	Thickness float64          `protobuf:"fixed64,3,opt,name=thickness,proto3" json:"thickness,omitempty"`
	DOut      float64          `protobuf:"fixed64,4,opt,name=d_out,json=dOut,proto3" json:"d_out,omitempty"`
	DIn       float64          `protobuf:"fixed64,5,opt,name=d_in,json=dIn,proto3" json:"d_in,omitempty"`
	Data      *GasketData_Data `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GasketData) Reset() {
	*x = GasketData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketData) ProtoMessage() {}

func (x *GasketData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketData.ProtoReflect.Descriptor instead.
func (*GasketData) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{3}
}

func (x *GasketData) GetGasketId() string {
	if x != nil {
		return x.GasketId
	}
	return ""
}

func (x *GasketData) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *GasketData) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *GasketData) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *GasketData) GetDIn() float64 {
	if x != nil {
		return x.DIn
	}
	return 0
}

func (x *GasketData) GetData() *GasketData_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type BoltData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoltId   string        `protobuf:"bytes,1,opt,name=boltId,proto3" json:"boltId,omitempty"`
	Count    int32         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Distance float64       `protobuf:"fixed64,3,opt,name=distance,proto3" json:"distance,omitempty"`
	Temp     float64       `protobuf:"fixed64,4,opt,name=temp,proto3" json:"temp,omitempty"`
	MarkId   string        `protobuf:"bytes,5,opt,name=markId,proto3" json:"markId,omitempty"`
	Material *MaterialData `protobuf:"bytes,6,opt,name=material,proto3" json:"material,omitempty"`
	Diameter float64       `protobuf:"fixed64,7,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area     float64       `protobuf:"fixed64,8,opt,name=area,proto3" json:"area,omitempty"`
	Title    string        `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *BoltData) Reset() {
	*x = BoltData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoltData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoltData) ProtoMessage() {}

func (x *BoltData) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoltData.ProtoReflect.Descriptor instead.
func (*BoltData) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{4}
}

func (x *BoltData) GetBoltId() string {
	if x != nil {
		return x.BoltId
	}
	return ""
}

func (x *BoltData) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BoltData) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *BoltData) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *BoltData) GetMarkId() string {
	if x != nil {
		return x.MarkId
	}
	return ""
}

func (x *BoltData) GetMaterial() *MaterialData {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *BoltData) GetDiameter() float64 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *BoltData) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *BoltData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure  float64 `protobuf:"fixed64,1,opt,name=pressure,proto3" json:"pressure,omitempty"`
	Work      string  `protobuf:"bytes,2,opt,name=work,proto3" json:"work,omitempty"`
	HasThorn  bool    `protobuf:"varint,3,opt,name=hasThorn,proto3" json:"hasThorn,omitempty"`
	Type      string  `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Condition string  `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *DataResult) Reset() {
	*x = DataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataResult) ProtoMessage() {}

func (x *DataResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataResult.ProtoReflect.Descriptor instead.
func (*DataResult) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{5}
}

func (x *DataResult) GetPressure() float64 {
	if x != nil {
		return x.Pressure
	}
	return 0
}

func (x *DataResult) GetWork() string {
	if x != nil {
		return x.Work
	}
	return ""
}

func (x *DataResult) GetHasThorn() bool {
	if x != nil {
		return x.HasThorn
	}
	return false
}

func (x *DataResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataResult) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type FlangeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DOut        float64 `protobuf:"fixed64,1,opt,name=dOut,proto3" json:"dOut,omitempty"`
	D           float64 `protobuf:"fixed64,2,opt,name=d,proto3" json:"d,omitempty"`
	D6          float64 `protobuf:"fixed64,3,opt,name=d6,proto3" json:"d6,omitempty"`
	Tf          float64 `protobuf:"fixed64,4,opt,name=tf,proto3" json:"tf,omitempty"`
	Width       float64 `protobuf:"fixed64,5,opt,name=width,proto3" json:"width,omitempty"`
	DIn         float64 `protobuf:"fixed64,6,opt,name=dIn,proto3" json:"dIn,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,7,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,8,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20   float64 `protobuf:"fixed64,9,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma       float64 `protobuf:"fixed64,10,opt,name=sigma,proto3" json:"sigma,omitempty"`
	Material    string  `protobuf:"bytes,11,opt,name=material,proto3" json:"material,omitempty"`
	B           float64 `protobuf:"fixed64,12,opt,name=b,proto3" json:"b,omitempty"`
	L0          float64 `protobuf:"fixed64,13,opt,name=l0,proto3" json:"l0,omitempty"`
	Y           float64 `protobuf:"fixed64,14,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *FlangeResult) Reset() {
	*x = FlangeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeResult) ProtoMessage() {}

func (x *FlangeResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeResult.ProtoReflect.Descriptor instead.
func (*FlangeResult) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{6}
}

func (x *FlangeResult) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *FlangeResult) GetD() float64 {
	if x != nil {
		return x.D
	}
	return 0
}

func (x *FlangeResult) GetD6() float64 {
	if x != nil {
		return x.D6
	}
	return 0
}

func (x *FlangeResult) GetTf() float64 {
	if x != nil {
		return x.Tf
	}
	return 0
}

func (x *FlangeResult) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *FlangeResult) GetDIn() float64 {
	if x != nil {
		return x.DIn
	}
	return 0
}

func (x *FlangeResult) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *FlangeResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *FlangeResult) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *FlangeResult) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

func (x *FlangeResult) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *FlangeResult) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *FlangeResult) GetL0() float64 {
	if x != nil {
		return x.L0
	}
	return 0
}

func (x *FlangeResult) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

type CapResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H           float64 `protobuf:"fixed64,1,opt,name=h,proto3" json:"h,omitempty"`
	Radius      float64 `protobuf:"fixed64,2,opt,name=radius,proto3" json:"radius,omitempty"`
	S           float64 `protobuf:"fixed64,3,opt,name=s,proto3" json:"s,omitempty"`
	T           float64 `protobuf:"fixed64,4,opt,name=t,proto3" json:"t,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,5,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,6,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	Material    string  `protobuf:"bytes,7,opt,name=material,proto3" json:"material,omitempty"`
	Y           float64 `protobuf:"fixed64,8,opt,name=y,proto3" json:"y,omitempty"`
	Lambda      float64 `protobuf:"fixed64,9,opt,name=lambda,proto3" json:"lambda,omitempty"`
	Omega       float64 `protobuf:"fixed64,10,opt,name=omega,proto3" json:"omega,omitempty"`
}

func (x *CapResult) Reset() {
	*x = CapResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapResult) ProtoMessage() {}

func (x *CapResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapResult.ProtoReflect.Descriptor instead.
func (*CapResult) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{7}
}

func (x *CapResult) GetH() float64 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *CapResult) GetRadius() float64 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *CapResult) GetS() float64 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *CapResult) GetT() float64 {
	if x != nil {
		return x.T
	}
	return 0
}

func (x *CapResult) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *CapResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *CapResult) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

func (x *CapResult) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *CapResult) GetLambda() float64 {
	if x != nil {
		return x.Lambda
	}
	return 0
}

func (x *CapResult) GetOmega() float64 {
	if x != nil {
		return x.Omega
	}
	return 0
}

type BoltResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Diameter    float64 `protobuf:"fixed64,1,opt,name=diameter,proto3" json:"diameter,omitempty"`
	Area        float64 `protobuf:"fixed64,2,opt,name=area,proto3" json:"area,omitempty"`
	Count       int32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Lenght      float64 `protobuf:"fixed64,4,opt,name=lenght,proto3" json:"lenght,omitempty"`
	Temp        float64 `protobuf:"fixed64,5,opt,name=temp,proto3" json:"temp,omitempty"`
	EpsilonAt20 float64 `protobuf:"fixed64,6,opt,name=epsilonAt20,proto3" json:"epsilonAt20,omitempty"`
	Epsilon     float64 `protobuf:"fixed64,7,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	SigmaAt20   float64 `protobuf:"fixed64,8,opt,name=sigmaAt20,proto3" json:"sigmaAt20,omitempty"`
	Sigma       float64 `protobuf:"fixed64,9,opt,name=sigma,proto3" json:"sigma,omitempty"`
	Material    string  `protobuf:"bytes,10,opt,name=material,proto3" json:"material,omitempty"`
}

func (x *BoltResult) Reset() {
	*x = BoltResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoltResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoltResult) ProtoMessage() {}

func (x *BoltResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoltResult.ProtoReflect.Descriptor instead.
func (*BoltResult) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{8}
}

func (x *BoltResult) GetDiameter() float64 {
	if x != nil {
		return x.Diameter
	}
	return 0
}

func (x *BoltResult) GetArea() float64 {
	if x != nil {
		return x.Area
	}
	return 0
}

func (x *BoltResult) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BoltResult) GetLenght() float64 {
	if x != nil {
		return x.Lenght
	}
	return 0
}

func (x *BoltResult) GetTemp() float64 {
	if x != nil {
		return x.Temp
	}
	return 0
}

func (x *BoltResult) GetEpsilonAt20() float64 {
	if x != nil {
		return x.EpsilonAt20
	}
	return 0
}

func (x *BoltResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *BoltResult) GetSigmaAt20() float64 {
	if x != nil {
		return x.SigmaAt20
	}
	return 0
}

func (x *BoltResult) GetSigma() float64 {
	if x != nil {
		return x.Sigma
	}
	return 0
}

func (x *BoltResult) GetMaterial() string {
	if x != nil {
		return x.Material
	}
	return ""
}

type GasketResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket          string  `protobuf:"bytes,1,opt,name=gasket,proto3" json:"gasket,omitempty"`
	Env             string  `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	Thickness       float64 `protobuf:"fixed64,3,opt,name=thickness,proto3" json:"thickness,omitempty"`
	DOut            float64 `protobuf:"fixed64,4,opt,name=d_out,json=dOut,proto3" json:"d_out,omitempty"`
	Width           float64 `protobuf:"fixed64,5,opt,name=width,proto3" json:"width,omitempty"`
	M               float64 `protobuf:"fixed64,6,opt,name=m,proto3" json:"m,omitempty"`
	Pres            float64 `protobuf:"fixed64,7,opt,name=pres,proto3" json:"pres,omitempty"`
	Compression     float64 `protobuf:"fixed64,8,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64 `protobuf:"fixed64,9,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	PermissiblePres float64 `protobuf:"fixed64,10,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
	Type            string  `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GasketResult) Reset() {
	*x = GasketResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketResult) ProtoMessage() {}

func (x *GasketResult) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketResult.ProtoReflect.Descriptor instead.
func (*GasketResult) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{9}
}

func (x *GasketResult) GetGasket() string {
	if x != nil {
		return x.Gasket
	}
	return ""
}

func (x *GasketResult) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GasketResult) GetThickness() float64 {
	if x != nil {
		return x.Thickness
	}
	return 0
}

func (x *GasketResult) GetDOut() float64 {
	if x != nil {
		return x.DOut
	}
	return 0
}

func (x *GasketResult) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *GasketResult) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *GasketResult) GetPres() float64 {
	if x != nil {
		return x.Pres
	}
	return 0
}

func (x *GasketResult) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *GasketResult) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *GasketResult) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

func (x *GasketResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Calculated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B0       float64 `protobuf:"fixed64,1,opt,name=b0,proto3" json:"b0,omitempty"`
	Dcp      float64 `protobuf:"fixed64,2,opt,name=Dcp,json=dcp,proto3" json:"Dcp,omitempty"`
	Yp       float64 `protobuf:"fixed64,3,opt,name=yp,proto3" json:"yp,omitempty"`
	Yb       float64 `protobuf:"fixed64,4,opt,name=yb,proto3" json:"yb,omitempty"`
	Lb       float64 `protobuf:"fixed64,5,opt,name=Lb,json=lb,proto3" json:"Lb,omitempty"`
	Po       float64 `protobuf:"fixed64,6,opt,name=Po,json=po,proto3" json:"Po,omitempty"`
	Rp       float64 `protobuf:"fixed64,7,opt,name=Rp,json=rp,proto3" json:"Rp,omitempty"`
	A        float64 `protobuf:"fixed64,8,opt,name=A,json=a,proto3" json:"A,omitempty"`
	Qd       float64 `protobuf:"fixed64,9,opt,name=Qd,json=qd,proto3" json:"Qd,omitempty"`
	Alpha    float64 `protobuf:"fixed64,10,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Pb       float64 `protobuf:"fixed64,11,opt,name=Pb,json=pb,proto3" json:"Pb,omitempty"`
	Pb1      float64 `protobuf:"fixed64,12,opt,name=Pb1,json=pb1,proto3" json:"Pb1,omitempty"`
	Pb2      float64 `protobuf:"fixed64,13,opt,name=Pb2,json=pb2,proto3" json:"Pb2,omitempty"`
	Pbr      float64 `protobuf:"fixed64,14,opt,name=Pbr,json=pbr,proto3" json:"Pbr,omitempty"`
	SigmaB1  float64 `protobuf:"fixed64,15,opt,name=sigmaB1,proto3" json:"sigmaB1,omitempty"`
	SigmaB2  float64 `protobuf:"fixed64,16,opt,name=sigmaB2,proto3" json:"sigmaB2,omitempty"`
	DSigmaM  float64 `protobuf:"fixed64,17,opt,name=dSigmaM,proto3" json:"dSigmaM,omitempty"`
	DSigmaR  float64 `protobuf:"fixed64,18,opt,name=dSigmaR,proto3" json:"dSigmaR,omitempty"`
	Q        float64 `protobuf:"fixed64,19,opt,name=q,proto3" json:"q,omitempty"`
	MinB     float64 `protobuf:"fixed64,20,opt,name=minB,proto3" json:"minB,omitempty"`
	Mkp      float64 `protobuf:"fixed64,21,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1     float64 `protobuf:"fixed64,22,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek     float64 `protobuf:"fixed64,23,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek     float64 `protobuf:"fixed64,24,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax     float64 `protobuf:"fixed64,25,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax     float64 `protobuf:"fixed64,26,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
	VSigmaB1 bool    `protobuf:"varint,27,opt,name=vSigmaB1,proto3" json:"vSigmaB1,omitempty"`
	VSigmaB2 bool    `protobuf:"varint,28,opt,name=vSigmaB2,proto3" json:"vSigmaB2,omitempty"`
}

func (x *Calculated) Reset() {
	*x = Calculated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calculated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calculated) ProtoMessage() {}

func (x *Calculated) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calculated.ProtoReflect.Descriptor instead.
func (*Calculated) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{10}
}

func (x *Calculated) GetB0() float64 {
	if x != nil {
		return x.B0
	}
	return 0
}

func (x *Calculated) GetDcp() float64 {
	if x != nil {
		return x.Dcp
	}
	return 0
}

func (x *Calculated) GetYp() float64 {
	if x != nil {
		return x.Yp
	}
	return 0
}

func (x *Calculated) GetYb() float64 {
	if x != nil {
		return x.Yb
	}
	return 0
}

func (x *Calculated) GetLb() float64 {
	if x != nil {
		return x.Lb
	}
	return 0
}

func (x *Calculated) GetPo() float64 {
	if x != nil {
		return x.Po
	}
	return 0
}

func (x *Calculated) GetRp() float64 {
	if x != nil {
		return x.Rp
	}
	return 0
}

func (x *Calculated) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *Calculated) GetQd() float64 {
	if x != nil {
		return x.Qd
	}
	return 0
}

func (x *Calculated) GetAlpha() float64 {
	if x != nil {
		return x.Alpha
	}
	return 0
}

func (x *Calculated) GetPb() float64 {
	if x != nil {
		return x.Pb
	}
	return 0
}

func (x *Calculated) GetPb1() float64 {
	if x != nil {
		return x.Pb1
	}
	return 0
}

func (x *Calculated) GetPb2() float64 {
	if x != nil {
		return x.Pb2
	}
	return 0
}

func (x *Calculated) GetPbr() float64 {
	if x != nil {
		return x.Pbr
	}
	return 0
}

func (x *Calculated) GetSigmaB1() float64 {
	if x != nil {
		return x.SigmaB1
	}
	return 0
}

func (x *Calculated) GetSigmaB2() float64 {
	if x != nil {
		return x.SigmaB2
	}
	return 0
}

func (x *Calculated) GetDSigmaM() float64 {
	if x != nil {
		return x.DSigmaM
	}
	return 0
}

func (x *Calculated) GetDSigmaR() float64 {
	if x != nil {
		return x.DSigmaR
	}
	return 0
}

func (x *Calculated) GetQ() float64 {
	if x != nil {
		return x.Q
	}
	return 0
}

func (x *Calculated) GetMinB() float64 {
	if x != nil {
		return x.MinB
	}
	return 0
}

func (x *Calculated) GetMkp() float64 {
	if x != nil {
		return x.Mkp
	}
	return 0
}

func (x *Calculated) GetMkp1() float64 {
	if x != nil {
		return x.Mkp1
	}
	return 0
}

func (x *Calculated) GetMrek() float64 {
	if x != nil {
		return x.Mrek
	}
	return 0
}

func (x *Calculated) GetQrek() float64 {
	if x != nil {
		return x.Qrek
	}
	return 0
}

func (x *Calculated) GetMmax() float64 {
	if x != nil {
		return x.Mmax
	}
	return 0
}

func (x *Calculated) GetQmax() float64 {
	if x != nil {
		return x.Qmax
	}
	return 0
}

func (x *Calculated) GetVSigmaB1() bool {
	if x != nil {
		return x.VSigmaB1
	}
	return false
}

func (x *Calculated) GetVSigmaB2() bool {
	if x != nil {
		return x.VSigmaB2
	}
	return false
}

type FlangeFormulas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B  string `protobuf:"bytes,1,opt,name=b,proto3" json:"b,omitempty"`
	L0 string `protobuf:"bytes,2,opt,name=l0,proto3" json:"l0,omitempty"`
	Y  string `protobuf:"bytes,3,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *FlangeFormulas) Reset() {
	*x = FlangeFormulas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlangeFormulas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlangeFormulas) ProtoMessage() {}

func (x *FlangeFormulas) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlangeFormulas.ProtoReflect.Descriptor instead.
func (*FlangeFormulas) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{11}
}

func (x *FlangeFormulas) GetB() string {
	if x != nil {
		return x.B
	}
	return ""
}

func (x *FlangeFormulas) GetL0() string {
	if x != nil {
		return x.L0
	}
	return ""
}

func (x *FlangeFormulas) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

type CapFormulas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Y      string `protobuf:"bytes,1,opt,name=y,proto3" json:"y,omitempty"`
	Lambda string `protobuf:"bytes,2,opt,name=lambda,proto3" json:"lambda,omitempty"`
	Omega  string `protobuf:"bytes,3,opt,name=omega,proto3" json:"omega,omitempty"`
}

func (x *CapFormulas) Reset() {
	*x = CapFormulas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapFormulas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapFormulas) ProtoMessage() {}

func (x *CapFormulas) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapFormulas.ProtoReflect.Descriptor instead.
func (*CapFormulas) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{12}
}

func (x *CapFormulas) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

func (x *CapFormulas) GetLambda() string {
	if x != nil {
		return x.Lambda
	}
	return ""
}

func (x *CapFormulas) GetOmega() string {
	if x != nil {
		return x.Omega
	}
	return ""
}

type Formulas struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B0      string          `protobuf:"bytes,1,opt,name=b0,proto3" json:"b0,omitempty"`
	Dcp     string          `protobuf:"bytes,2,opt,name=Dcp,json=dcp,proto3" json:"Dcp,omitempty"`
	Yp      string          `protobuf:"bytes,3,opt,name=yp,proto3" json:"yp,omitempty"`
	Yb      string          `protobuf:"bytes,4,opt,name=yb,proto3" json:"yb,omitempty"`
	Lb      string          `protobuf:"bytes,5,opt,name=Lb,json=lb,proto3" json:"Lb,omitempty"`
	Po      string          `protobuf:"bytes,6,opt,name=Po,json=po,proto3" json:"Po,omitempty"`
	Rp      string          `protobuf:"bytes,7,opt,name=Rp,json=rp,proto3" json:"Rp,omitempty"`
	A       string          `protobuf:"bytes,8,opt,name=A,json=a,proto3" json:"A,omitempty"`
	Qd      string          `protobuf:"bytes,9,opt,name=Qd,json=qd,proto3" json:"Qd,omitempty"`
	Alpha   string          `protobuf:"bytes,10,opt,name=alpha,proto3" json:"alpha,omitempty"`
	Pb      string          `protobuf:"bytes,11,opt,name=Pb,json=pb,proto3" json:"Pb,omitempty"`
	Pb1     string          `protobuf:"bytes,12,opt,name=Pb1,json=pb1,proto3" json:"Pb1,omitempty"`
	Pb2     string          `protobuf:"bytes,13,opt,name=Pb2,json=pb2,proto3" json:"Pb2,omitempty"`
	Pbr     string          `protobuf:"bytes,14,opt,name=Pbr,json=pbr,proto3" json:"Pbr,omitempty"`
	SigmaB1 string          `protobuf:"bytes,15,opt,name=sigmaB1,proto3" json:"sigmaB1,omitempty"`
	SigmaB2 string          `protobuf:"bytes,16,opt,name=sigmaB2,proto3" json:"sigmaB2,omitempty"`
	DSigmaM string          `protobuf:"bytes,17,opt,name=dSigmaM,proto3" json:"dSigmaM,omitempty"`
	DSigmaR string          `protobuf:"bytes,18,opt,name=dSigmaR,proto3" json:"dSigmaR,omitempty"`
	Q       string          `protobuf:"bytes,19,opt,name=q,proto3" json:"q,omitempty"`
	Mkp     string          `protobuf:"bytes,20,opt,name=Mkp,json=mkp,proto3" json:"Mkp,omitempty"`
	Mkp1    string          `protobuf:"bytes,21,opt,name=Mkp1,json=mkp1,proto3" json:"Mkp1,omitempty"`
	Mrek    string          `protobuf:"bytes,22,opt,name=Mrek,json=mrek,proto3" json:"Mrek,omitempty"`
	Qrek    string          `protobuf:"bytes,23,opt,name=Qrek,json=qrek,proto3" json:"Qrek,omitempty"`
	Mmax    string          `protobuf:"bytes,24,opt,name=Mmax,json=mmax,proto3" json:"Mmax,omitempty"`
	Qmax    string          `protobuf:"bytes,25,opt,name=Qmax,json=qmax,proto3" json:"Qmax,omitempty"`
	Flange  *FlangeFormulas `protobuf:"bytes,26,opt,name=flange,proto3" json:"flange,omitempty"`
	Cap     *CapFormulas    `protobuf:"bytes,27,opt,name=cap,proto3" json:"cap,omitempty"`
}

func (x *Formulas) Reset() {
	*x = Formulas{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Formulas) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Formulas) ProtoMessage() {}

func (x *Formulas) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Formulas.ProtoReflect.Descriptor instead.
func (*Formulas) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{13}
}

func (x *Formulas) GetB0() string {
	if x != nil {
		return x.B0
	}
	return ""
}

func (x *Formulas) GetDcp() string {
	if x != nil {
		return x.Dcp
	}
	return ""
}

func (x *Formulas) GetYp() string {
	if x != nil {
		return x.Yp
	}
	return ""
}

func (x *Formulas) GetYb() string {
	if x != nil {
		return x.Yb
	}
	return ""
}

func (x *Formulas) GetLb() string {
	if x != nil {
		return x.Lb
	}
	return ""
}

func (x *Formulas) GetPo() string {
	if x != nil {
		return x.Po
	}
	return ""
}

func (x *Formulas) GetRp() string {
	if x != nil {
		return x.Rp
	}
	return ""
}

func (x *Formulas) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *Formulas) GetQd() string {
	if x != nil {
		return x.Qd
	}
	return ""
}

func (x *Formulas) GetAlpha() string {
	if x != nil {
		return x.Alpha
	}
	return ""
}

func (x *Formulas) GetPb() string {
	if x != nil {
		return x.Pb
	}
	return ""
}

func (x *Formulas) GetPb1() string {
	if x != nil {
		return x.Pb1
	}
	return ""
}

func (x *Formulas) GetPb2() string {
	if x != nil {
		return x.Pb2
	}
	return ""
}

func (x *Formulas) GetPbr() string {
	if x != nil {
		return x.Pbr
	}
	return ""
}

func (x *Formulas) GetSigmaB1() string {
	if x != nil {
		return x.SigmaB1
	}
	return ""
}

func (x *Formulas) GetSigmaB2() string {
	if x != nil {
		return x.SigmaB2
	}
	return ""
}

func (x *Formulas) GetDSigmaM() string {
	if x != nil {
		return x.DSigmaM
	}
	return ""
}

func (x *Formulas) GetDSigmaR() string {
	if x != nil {
		return x.DSigmaR
	}
	return ""
}

func (x *Formulas) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *Formulas) GetMkp() string {
	if x != nil {
		return x.Mkp
	}
	return ""
}

func (x *Formulas) GetMkp1() string {
	if x != nil {
		return x.Mkp1
	}
	return ""
}

func (x *Formulas) GetMrek() string {
	if x != nil {
		return x.Mrek
	}
	return ""
}

func (x *Formulas) GetQrek() string {
	if x != nil {
		return x.Qrek
	}
	return ""
}

func (x *Formulas) GetMmax() string {
	if x != nil {
		return x.Mmax
	}
	return ""
}

func (x *Formulas) GetQmax() string {
	if x != nil {
		return x.Qmax
	}
	return ""
}

func (x *Formulas) GetFlange() *FlangeFormulas {
	if x != nil {
		return x.Flange
	}
	return nil
}

func (x *Formulas) GetCap() *CapFormulas {
	if x != nil {
		return x.Cap
	}
	return nil
}

type GasketData_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Type            GasketData_Type `protobuf:"varint,2,opt,name=type,proto3,enum=float_model.GasketData_Type" json:"type,omitempty"`
	Qo              float64         `protobuf:"fixed64,3,opt,name=qo,proto3" json:"qo,omitempty"`
	M               float64         `protobuf:"fixed64,4,opt,name=m,proto3" json:"m,omitempty"`
	Compression     float64         `protobuf:"fixed64,5,opt,name=compression,proto3" json:"compression,omitempty"`
	Epsilon         float64         `protobuf:"fixed64,6,opt,name=epsilon,proto3" json:"epsilon,omitempty"`
	PermissiblePres float64         `protobuf:"fixed64,7,opt,name=permissiblePres,proto3" json:"permissiblePres,omitempty"`
}

func (x *GasketData_Data) Reset() {
	*x = GasketData_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_calc_api_float_model_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasketData_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasketData_Data) ProtoMessage() {}

func (x *GasketData_Data) ProtoReflect() protoreflect.Message {
	mi := &file_moment_calc_api_float_model_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasketData_Data.ProtoReflect.Descriptor instead.
func (*GasketData_Data) Descriptor() ([]byte, []int) {
	return file_moment_calc_api_float_model_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GasketData_Data) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GasketData_Data) GetType() GasketData_Type {
	if x != nil {
		return x.Type
	}
	return GasketData_Soft
}

func (x *GasketData_Data) GetQo() float64 {
	if x != nil {
		return x.Qo
	}
	return 0
}

func (x *GasketData_Data) GetM() float64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *GasketData_Data) GetCompression() float64 {
	if x != nil {
		return x.Compression
	}
	return 0
}

func (x *GasketData_Data) GetEpsilon() float64 {
	if x != nil {
		return x.Epsilon
	}
	return 0
}

func (x *GasketData_Data) GetPermissiblePres() float64 {
	if x != nil {
		return x.PermissiblePres
	}
	return 0
}

var File_moment_calc_api_float_model_proto protoreflect.FileDescriptor

var file_moment_calc_api_float_model_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x22, 0x94, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70,
	0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73,
	0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69,
	0x6c, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32,
	0x30, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x22, 0xc3, 0x01, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x36, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x36, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x35,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x49, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x49, 0x6e, 0x22, 0x9a, 0x01,
	0x0a, 0x07, 0x43, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a,
	0x01, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72,
	0x6b, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0xb2, 0x03, 0x0a, 0x0a, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x11,
	0x0a, 0x04, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x49,
	0x6e, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0xd2, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x71, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x6f, 0x66, 0x74, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x76,
	0x61, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x65, 0x74, 0x61, 0x6c, 0x10, 0x02, 0x22,
	0xfd, 0x01, 0x0a, 0x08, 0x42, 0x6f, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x6f, 0x6c, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f,
	0x6c, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x6b, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x8a, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x61, 0x73, 0x54, 0x68, 0x6f, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x68, 0x61, 0x73, 0x54, 0x68, 0x6f, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb0, 0x02, 0x0a,
	0x0c, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x4f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75,
	0x74, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x64, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x64, 0x36, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x49, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x64, 0x49, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70,
	0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73,
	0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69,
	0x6c, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32,
	0x30, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x30, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x6c,
	0x30, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22,
	0xe1, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x73, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41, 0x74, 0x32,
	0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6f, 0x6d,
	0x65, 0x67, 0x61, 0x22, 0x8a, 0x02, 0x0a, 0x0a, 0x42, 0x6f, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x61, 0x72,
	0x65, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x74, 0x65, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e, 0x41,
	0x74, 0x32, 0x30, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x41, 0x74, 0x32, 0x30, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x41, 0x74, 0x32, 0x30, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x22, 0x9d, 0x02, 0x0a, 0x0c, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x5f, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x70, 0x72, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x70, 0x73, 0x69,
	0x6c, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x65, 0x70, 0x73, 0x69, 0x6c,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xb0, 0x04, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x62, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x62, 0x30, 0x12,
	0x10, 0x0a, 0x03, 0x44, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x63,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x79,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x79,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x4c, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x6c,
	0x62, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x72,
	0x70, 0x12, 0x0c, 0x0a, 0x01, 0x41, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x51, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x71, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x50, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x02, 0x70, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x31, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x70, 0x62, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x32, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x62, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x70, 0x62, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69,
	0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x4d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x52, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67,
	0x6d, 0x61, 0x52, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x42, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x6d, 0x69, 0x6e, 0x42, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x6b, 0x70, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x6b, 0x70, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d,
	0x72, 0x65, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x72, 0x65, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x71,
	0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x6d, 0x61, 0x78, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x71, 0x6d, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76,
	0x53, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x53, 0x69, 0x67, 0x6d,
	0x61, 0x42, 0x32, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x53, 0x69, 0x67, 0x6d,
	0x61, 0x42, 0x32, 0x22, 0x3c, 0x0a, 0x0e, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x75, 0x6c, 0x61, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6c, 0x30, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x79, 0x22, 0x49, 0x0a, 0x0b, 0x43, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x22, 0xc3, 0x04, 0x0a,
	0x08, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x30, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x62, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x63, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x63, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x79,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x79, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x79,
	0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x79, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x4c,
	0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6c, 0x62, 0x12, 0x0e, 0x0a, 0x02, 0x50,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x52,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x72, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x41,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x51, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x50, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x70, 0x62, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x62, 0x31, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x62,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x32, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x62, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x62, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x62, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x42, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69,
	0x67, 0x6d, 0x61, 0x4d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67,
	0x6d, 0x61, 0x4d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x53, 0x69, 0x67, 0x6d, 0x61, 0x52, 0x12, 0x0c, 0x0a,
	0x01, 0x71, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x6b, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x6b, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x4d, 0x6b, 0x70, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6b, 0x70,
	0x31, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x72, 0x65, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x51, 0x72, 0x65, 0x6b, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x72, 0x65, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6d, 0x61,
	0x78, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x51, 0x6d, 0x61, 0x78, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x71, 0x6d, 0x61,
	0x78, 0x12, 0x33, 0x0a, 0x06, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x52, 0x06,
	0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x43, 0x61, 0x70, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x73, 0x52, 0x03, 0x63,
	0x61, 0x70, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x32, 0x37, 0x32, 0x2f, 0x73, 0x65,
	0x61, 0x6c, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x61, 0x6c, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_moment_calc_api_float_model_proto_rawDescOnce sync.Once
	file_moment_calc_api_float_model_proto_rawDescData = file_moment_calc_api_float_model_proto_rawDesc
)

func file_moment_calc_api_float_model_proto_rawDescGZIP() []byte {
	file_moment_calc_api_float_model_proto_rawDescOnce.Do(func() {
		file_moment_calc_api_float_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_moment_calc_api_float_model_proto_rawDescData)
	})
	return file_moment_calc_api_float_model_proto_rawDescData
}

var file_moment_calc_api_float_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_moment_calc_api_float_model_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_moment_calc_api_float_model_proto_goTypes = []interface{}{
	(GasketData_Type)(0),    // 0: float_model.GasketData.Type
	(*MaterialData)(nil),    // 1: float_model.MaterialData
	(*FlangeData)(nil),      // 2: float_model.FlangeData
	(*CapData)(nil),         // 3: float_model.CapData
	(*GasketData)(nil),      // 4: float_model.GasketData
	(*BoltData)(nil),        // 5: float_model.BoltData
	(*DataResult)(nil),      // 6: float_model.DataResult
	(*FlangeResult)(nil),    // 7: float_model.FlangeResult
	(*CapResult)(nil),       // 8: float_model.CapResult
	(*BoltResult)(nil),      // 9: float_model.BoltResult
	(*GasketResult)(nil),    // 10: float_model.GasketResult
	(*Calculated)(nil),      // 11: float_model.Calculated
	(*FlangeFormulas)(nil),  // 12: float_model.FlangeFormulas
	(*CapFormulas)(nil),     // 13: float_model.CapFormulas
	(*Formulas)(nil),        // 14: float_model.Formulas
	(*GasketData_Data)(nil), // 15: float_model.GasketData.Data
}
var file_moment_calc_api_float_model_proto_depIdxs = []int32{
	1,  // 0: float_model.FlangeData.material:type_name -> float_model.MaterialData
	1,  // 1: float_model.CapData.material:type_name -> float_model.MaterialData
	15, // 2: float_model.GasketData.data:type_name -> float_model.GasketData.Data
	1,  // 3: float_model.BoltData.material:type_name -> float_model.MaterialData
	12, // 4: float_model.Formulas.flange:type_name -> float_model.FlangeFormulas
	13, // 5: float_model.Formulas.cap:type_name -> float_model.CapFormulas
	0,  // 6: float_model.GasketData.Data.type:type_name -> float_model.GasketData.Type
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_moment_calc_api_float_model_proto_init() }
func file_moment_calc_api_float_model_proto_init() {
	if File_moment_calc_api_float_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_moment_calc_api_float_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoltData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoltResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calculated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlangeFormulas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapFormulas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Formulas); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_calc_api_float_model_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasketData_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moment_calc_api_float_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_moment_calc_api_float_model_proto_goTypes,
		DependencyIndexes: file_moment_calc_api_float_model_proto_depIdxs,
		EnumInfos:         file_moment_calc_api_float_model_proto_enumTypes,
		MessageInfos:      file_moment_calc_api_float_model_proto_msgTypes,
	}.Build()
	File_moment_calc_api_float_model_proto = out.File
	file_moment_calc_api_float_model_proto_rawDesc = nil
	file_moment_calc_api_float_model_proto_goTypes = nil
	file_moment_calc_api_float_model_proto_depIdxs = nil
}
