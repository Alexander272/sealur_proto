// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: moment/read_api.proto

package read_api

import (
	device_model "github.com/Alexander272/sealur_proto/api/moment/models/device_model"
	flange_model "github.com/Alexander272/sealur_proto/api/moment/models/flange_model"
	gasket_model "github.com/Alexander272/sealur_proto/api/moment/models/gasket_model"
	material_model "github.com/Alexander272/sealur_proto/api/moment/models/material_model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFlangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFlangeRequest) Reset() {
	*x = GetFlangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlangeRequest) ProtoMessage() {}

func (x *GetFlangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlangeRequest.ProtoReflect.Descriptor instead.
func (*GetFlangeRequest) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{0}
}

type GetFlangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeFlange      []*flange_model.TypeFlange       `protobuf:"bytes,1,rep,name=typeFlange,proto3" json:"typeFlange,omitempty"`
	Standarts       []*flange_model.StandartWithSize `protobuf:"bytes,2,rep,name=standarts,proto3" json:"standarts,omitempty"`
	Gaskets         []*gasket_model.GasketWithThick  `protobuf:"bytes,3,rep,name=gaskets,proto3" json:"gaskets,omitempty"`
	Env             []*gasket_model.Env              `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	BoltMaterials   []*material_model.Material       `protobuf:"bytes,5,rep,name=boltMaterials,proto3" json:"boltMaterials,omitempty"`
	FlangeMaterials []*material_model.Material       `protobuf:"bytes,6,rep,name=flangeMaterials,proto3" json:"flangeMaterials,omitempty"`
}

func (x *GetFlangeResponse) Reset() {
	*x = GetFlangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlangeResponse) ProtoMessage() {}

func (x *GetFlangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlangeResponse.ProtoReflect.Descriptor instead.
func (*GetFlangeResponse) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetFlangeResponse) GetTypeFlange() []*flange_model.TypeFlange {
	if x != nil {
		return x.TypeFlange
	}
	return nil
}

func (x *GetFlangeResponse) GetStandarts() []*flange_model.StandartWithSize {
	if x != nil {
		return x.Standarts
	}
	return nil
}

func (x *GetFlangeResponse) GetGaskets() []*gasket_model.GasketWithThick {
	if x != nil {
		return x.Gaskets
	}
	return nil
}

func (x *GetFlangeResponse) GetEnv() []*gasket_model.Env {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *GetFlangeResponse) GetBoltMaterials() []*material_model.Material {
	if x != nil {
		return x.BoltMaterials
	}
	return nil
}

func (x *GetFlangeResponse) GetFlangeMaterials() []*material_model.Material {
	if x != nil {
		return x.FlangeMaterials
	}
	return nil
}

type GetFloatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFloatRequest) Reset() {
	*x = GetFloatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFloatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFloatRequest) ProtoMessage() {}

func (x *GetFloatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFloatRequest.ProtoReflect.Descriptor instead.
func (*GetFloatRequest) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{2}
}

type GetFloatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gaskets         []*gasket_model.GasketWithThick `protobuf:"bytes,1,rep,name=gaskets,proto3" json:"gaskets,omitempty"`
	BoltMaterials   []*material_model.Material      `protobuf:"bytes,2,rep,name=boltMaterials,proto3" json:"boltMaterials,omitempty"`
	FlangeMaterials []*material_model.Material      `protobuf:"bytes,3,rep,name=flangeMaterials,proto3" json:"flangeMaterials,omitempty"`
	Env             []*gasket_model.Env             `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
}

func (x *GetFloatResponse) Reset() {
	*x = GetFloatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFloatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFloatResponse) ProtoMessage() {}

func (x *GetFloatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFloatResponse.ProtoReflect.Descriptor instead.
func (*GetFloatResponse) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetFloatResponse) GetGaskets() []*gasket_model.GasketWithThick {
	if x != nil {
		return x.Gaskets
	}
	return nil
}

func (x *GetFloatResponse) GetBoltMaterials() []*material_model.Material {
	if x != nil {
		return x.BoltMaterials
	}
	return nil
}

func (x *GetFloatResponse) GetFlangeMaterials() []*material_model.Material {
	if x != nil {
		return x.FlangeMaterials
	}
	return nil
}

func (x *GetFloatResponse) GetEnv() []*gasket_model.Env {
	if x != nil {
		return x.Env
	}
	return nil
}

type GetDevCoolingtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDevCoolingtRequest) Reset() {
	*x = GetDevCoolingtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevCoolingtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevCoolingtRequest) ProtoMessage() {}

func (x *GetDevCoolingtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevCoolingtRequest.ProtoReflect.Descriptor instead.
func (*GetDevCoolingtRequest) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{4}
}

type GetDevCoolingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gaskets         []*gasket_model.GasketWithThick `protobuf:"bytes,1,rep,name=gaskets,proto3" json:"gaskets,omitempty"`
	BoltMaterials   []*material_model.Material      `protobuf:"bytes,2,rep,name=boltMaterials,proto3" json:"boltMaterials,omitempty"`
	FlangeMaterials []*material_model.Material      `protobuf:"bytes,3,rep,name=flangeMaterials,proto3" json:"flangeMaterials,omitempty"`
	Env             []*gasket_model.Env             `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
}

func (x *GetDevCoolingResponse) Reset() {
	*x = GetDevCoolingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevCoolingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevCoolingResponse) ProtoMessage() {}

func (x *GetDevCoolingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevCoolingResponse.ProtoReflect.Descriptor instead.
func (*GetDevCoolingResponse) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetDevCoolingResponse) GetGaskets() []*gasket_model.GasketWithThick {
	if x != nil {
		return x.Gaskets
	}
	return nil
}

func (x *GetDevCoolingResponse) GetBoltMaterials() []*material_model.Material {
	if x != nil {
		return x.BoltMaterials
	}
	return nil
}

func (x *GetDevCoolingResponse) GetFlangeMaterials() []*material_model.Material {
	if x != nil {
		return x.FlangeMaterials
	}
	return nil
}

func (x *GetDevCoolingResponse) GetEnv() []*gasket_model.Env {
	if x != nil {
		return x.Env
	}
	return nil
}

type GetAVORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAVORequest) Reset() {
	*x = GetAVORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAVORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAVORequest) ProtoMessage() {}

func (x *GetAVORequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAVORequest.ProtoReflect.Descriptor instead.
func (*GetAVORequest) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{6}
}

type GetAVOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gaskets          []*gasket_model.GasketWithThick  `protobuf:"bytes,1,rep,name=gaskets,proto3" json:"gaskets,omitempty"`
	BoltMaterials    []*material_model.Material       `protobuf:"bytes,2,rep,name=boltMaterials,proto3" json:"boltMaterials,omitempty"`
	FlangeMaterials  []*material_model.Material       `protobuf:"bytes,3,rep,name=flangeMaterials,proto3" json:"flangeMaterials,omitempty"`
	Env              []*gasket_model.Env              `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty"`
	Devices          []*device_model.Device           `protobuf:"bytes,5,rep,name=devices,proto3" json:"devices,omitempty"`
	Pressure         []*device_model.Pressure         `protobuf:"bytes,6,rep,name=pressure,proto3" json:"pressure,omitempty"`
	TubeCount        []*device_model.TubeCount        `protobuf:"bytes,7,rep,name=tubeCount,proto3" json:"tubeCount,omitempty"`
	FinningFactor    []*device_model.FinningFactor    `protobuf:"bytes,8,rep,name=finningFactor,proto3" json:"finningFactor,omitempty"`
	SectionExecution []*device_model.SectionExecution `protobuf:"bytes,9,rep,name=sectionExecution,proto3" json:"sectionExecution,omitempty"`
	TubeLength       []*device_model.TubeLength       `protobuf:"bytes,10,rep,name=tubeLength,proto3" json:"tubeLength,omitempty"`
	NumberOfMoves    []*device_model.NumberOfMoves    `protobuf:"bytes,11,rep,name=numberOfMoves,proto3" json:"numberOfMoves,omitempty"`
}

func (x *GetAVOResponse) Reset() {
	*x = GetAVOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_read_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAVOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAVOResponse) ProtoMessage() {}

func (x *GetAVOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_read_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAVOResponse.ProtoReflect.Descriptor instead.
func (*GetAVOResponse) Descriptor() ([]byte, []int) {
	return file_moment_read_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetAVOResponse) GetGaskets() []*gasket_model.GasketWithThick {
	if x != nil {
		return x.Gaskets
	}
	return nil
}

func (x *GetAVOResponse) GetBoltMaterials() []*material_model.Material {
	if x != nil {
		return x.BoltMaterials
	}
	return nil
}

func (x *GetAVOResponse) GetFlangeMaterials() []*material_model.Material {
	if x != nil {
		return x.FlangeMaterials
	}
	return nil
}

func (x *GetAVOResponse) GetEnv() []*gasket_model.Env {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *GetAVOResponse) GetDevices() []*device_model.Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *GetAVOResponse) GetPressure() []*device_model.Pressure {
	if x != nil {
		return x.Pressure
	}
	return nil
}

func (x *GetAVOResponse) GetTubeCount() []*device_model.TubeCount {
	if x != nil {
		return x.TubeCount
	}
	return nil
}

func (x *GetAVOResponse) GetFinningFactor() []*device_model.FinningFactor {
	if x != nil {
		return x.FinningFactor
	}
	return nil
}

func (x *GetAVOResponse) GetSectionExecution() []*device_model.SectionExecution {
	if x != nil {
		return x.SectionExecution
	}
	return nil
}

func (x *GetAVOResponse) GetTubeLength() []*device_model.TubeLength {
	if x != nil {
		return x.TubeLength
	}
	return nil
}

func (x *GetAVOResponse) GetNumberOfMoves() []*device_model.NumberOfMoves {
	if x != nil {
		return x.NumberOfMoves
	}
	return nil
}

var File_moment_read_api_proto protoreflect.FileDescriptor

var file_moment_read_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x1a, 0x20, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0xed, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x74, 0x73, 0x12, 0x37, 0x0a,
	0x07, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x07, 0x67,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x3e, 0x0a, 0x0d, 0x62,
	0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0d, 0x62, 0x6f,
	0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x66,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0f,
	0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xf4, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x07, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73,
	0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x52, 0x0d, 0x62, 0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x42, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x45, 0x6e, 0x76, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xf9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6f,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x07,
	0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69, 0x63, 0x6b, 0x52, 0x07, 0x67, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x62, 0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0d, 0x62, 0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65,
	0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x65, 0x6e, 0x76,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x0f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x56, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x99, 0x05, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x56, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x57, 0x69, 0x74, 0x68, 0x54, 0x68, 0x69,
	0x63, 0x6b, 0x52, 0x07, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x62,
	0x6f, 0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0d, 0x62, 0x6f,
	0x6c, 0x74, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x66,
	0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0f,
	0x66, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x23, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x6e, 0x76, 0x52,
	0x03, 0x65, 0x6e, 0x76, 0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x08,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x75, 0x62, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x62, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x74, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x41, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38,
	0x0a, 0x0a, 0x74, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0a, 0x74, 0x75,
	0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x0d, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x32, 0xa6, 0x02, 0x0a, 0x0b,
	0x52, 0x65, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x19, 0x2e,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x43, 0x6f,
	0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x43, 0x6f, 0x6f, 0x6c, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x56,
	0x4f, 0x12, 0x17, 0x2e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x56, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x56, 0x4f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x65, 0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x32, 0x37, 0x32, 0x2f,
	0x73, 0x65, 0x61, 0x6c, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_moment_read_api_proto_rawDescOnce sync.Once
	file_moment_read_api_proto_rawDescData = file_moment_read_api_proto_rawDesc
)

func file_moment_read_api_proto_rawDescGZIP() []byte {
	file_moment_read_api_proto_rawDescOnce.Do(func() {
		file_moment_read_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_moment_read_api_proto_rawDescData)
	})
	return file_moment_read_api_proto_rawDescData
}

var file_moment_read_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_moment_read_api_proto_goTypes = []interface{}{
	(*GetFlangeRequest)(nil),              // 0: read_api.GetFlangeRequest
	(*GetFlangeResponse)(nil),             // 1: read_api.GetFlangeResponse
	(*GetFloatRequest)(nil),               // 2: read_api.GetFloatRequest
	(*GetFloatResponse)(nil),              // 3: read_api.GetFloatResponse
	(*GetDevCoolingtRequest)(nil),         // 4: read_api.GetDevCoolingtRequest
	(*GetDevCoolingResponse)(nil),         // 5: read_api.GetDevCoolingResponse
	(*GetAVORequest)(nil),                 // 6: read_api.GetAVORequest
	(*GetAVOResponse)(nil),                // 7: read_api.GetAVOResponse
	(*flange_model.TypeFlange)(nil),       // 8: flange_model.TypeFlange
	(*flange_model.StandartWithSize)(nil), // 9: flange_model.StandartWithSize
	(*gasket_model.GasketWithThick)(nil),  // 10: gasket_model.GasketWithThick
	(*gasket_model.Env)(nil),              // 11: gasket_model.Env
	(*material_model.Material)(nil),       // 12: material_model.Material
	(*device_model.Device)(nil),           // 13: device_model.Device
	(*device_model.Pressure)(nil),         // 14: device_model.Pressure
	(*device_model.TubeCount)(nil),        // 15: device_model.TubeCount
	(*device_model.FinningFactor)(nil),    // 16: device_model.FinningFactor
	(*device_model.SectionExecution)(nil), // 17: device_model.SectionExecution
	(*device_model.TubeLength)(nil),       // 18: device_model.TubeLength
	(*device_model.NumberOfMoves)(nil),    // 19: device_model.NumberOfMoves
}
var file_moment_read_api_proto_depIdxs = []int32{
	8,  // 0: read_api.GetFlangeResponse.typeFlange:type_name -> flange_model.TypeFlange
	9,  // 1: read_api.GetFlangeResponse.standarts:type_name -> flange_model.StandartWithSize
	10, // 2: read_api.GetFlangeResponse.gaskets:type_name -> gasket_model.GasketWithThick
	11, // 3: read_api.GetFlangeResponse.env:type_name -> gasket_model.Env
	12, // 4: read_api.GetFlangeResponse.boltMaterials:type_name -> material_model.Material
	12, // 5: read_api.GetFlangeResponse.flangeMaterials:type_name -> material_model.Material
	10, // 6: read_api.GetFloatResponse.gaskets:type_name -> gasket_model.GasketWithThick
	12, // 7: read_api.GetFloatResponse.boltMaterials:type_name -> material_model.Material
	12, // 8: read_api.GetFloatResponse.flangeMaterials:type_name -> material_model.Material
	11, // 9: read_api.GetFloatResponse.env:type_name -> gasket_model.Env
	10, // 10: read_api.GetDevCoolingResponse.gaskets:type_name -> gasket_model.GasketWithThick
	12, // 11: read_api.GetDevCoolingResponse.boltMaterials:type_name -> material_model.Material
	12, // 12: read_api.GetDevCoolingResponse.flangeMaterials:type_name -> material_model.Material
	11, // 13: read_api.GetDevCoolingResponse.env:type_name -> gasket_model.Env
	10, // 14: read_api.GetAVOResponse.gaskets:type_name -> gasket_model.GasketWithThick
	12, // 15: read_api.GetAVOResponse.boltMaterials:type_name -> material_model.Material
	12, // 16: read_api.GetAVOResponse.flangeMaterials:type_name -> material_model.Material
	11, // 17: read_api.GetAVOResponse.env:type_name -> gasket_model.Env
	13, // 18: read_api.GetAVOResponse.devices:type_name -> device_model.Device
	14, // 19: read_api.GetAVOResponse.pressure:type_name -> device_model.Pressure
	15, // 20: read_api.GetAVOResponse.tubeCount:type_name -> device_model.TubeCount
	16, // 21: read_api.GetAVOResponse.finningFactor:type_name -> device_model.FinningFactor
	17, // 22: read_api.GetAVOResponse.sectionExecution:type_name -> device_model.SectionExecution
	18, // 23: read_api.GetAVOResponse.tubeLength:type_name -> device_model.TubeLength
	19, // 24: read_api.GetAVOResponse.numberOfMoves:type_name -> device_model.NumberOfMoves
	0,  // 25: read_api.ReadService.GetFlange:input_type -> read_api.GetFlangeRequest
	2,  // 26: read_api.ReadService.GetFloat:input_type -> read_api.GetFloatRequest
	4,  // 27: read_api.ReadService.GetDevCooling:input_type -> read_api.GetDevCoolingtRequest
	6,  // 28: read_api.ReadService.GetAVO:input_type -> read_api.GetAVORequest
	1,  // 29: read_api.ReadService.GetFlange:output_type -> read_api.GetFlangeResponse
	3,  // 30: read_api.ReadService.GetFloat:output_type -> read_api.GetFloatResponse
	5,  // 31: read_api.ReadService.GetDevCooling:output_type -> read_api.GetDevCoolingResponse
	7,  // 32: read_api.ReadService.GetAVO:output_type -> read_api.GetAVOResponse
	29, // [29:33] is the sub-list for method output_type
	25, // [25:29] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_moment_read_api_proto_init() }
func file_moment_read_api_proto_init() {
	if File_moment_read_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_moment_read_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFloatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFloatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevCoolingtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevCoolingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAVORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_read_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAVOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moment_read_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moment_read_api_proto_goTypes,
		DependencyIndexes: file_moment_read_api_proto_depIdxs,
		MessageInfos:      file_moment_read_api_proto_msgTypes,
	}.Build()
	File_moment_read_api_proto = out.File
	file_moment_read_api_proto_rawDesc = nil
	file_moment_read_api_proto_goTypes = nil
	file_moment_read_api_proto_depIdxs = nil
}
