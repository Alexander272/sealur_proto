// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: moment/device_api.proto

package device_api

import (
	device_model "github.com/Alexander272/sealur_proto/api/moment/models/device_model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdResponse) Reset() {
	*x = IdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdResponse) ProtoMessage() {}

func (x *IdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdResponse.ProtoReflect.Descriptor instead.
func (*IdResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{0}
}

func (x *IdResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{1}
}

// Device --------------------------------------------------------------
type GetDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDeviceRequest) Reset() {
	*x = GetDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceRequest) ProtoMessage() {}

func (x *GetDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{2}
}

type CreateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateDeviceRequest) Reset() {
	*x = CreateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceRequest) ProtoMessage() {}

func (x *CreateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDeviceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type CreateFewDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Divices []*CreateDeviceRequest `protobuf:"bytes,1,rep,name=divices,proto3" json:"divices,omitempty"`
}

func (x *CreateFewDeviceRequest) Reset() {
	*x = CreateFewDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewDeviceRequest) ProtoMessage() {}

func (x *CreateFewDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewDeviceRequest.ProtoReflect.Descriptor instead.
func (*CreateFewDeviceRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{4}
}

func (x *CreateFewDeviceRequest) GetDivices() []*CreateDeviceRequest {
	if x != nil {
		return x.Divices
	}
	return nil
}

type UpdateDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateDeviceRequest) Reset() {
	*x = UpdateDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceRequest) ProtoMessage() {}

func (x *UpdateDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DeleteDeviceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDeviceRequest) Reset() {
	*x = DeleteDeviceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceRequest) ProtoMessage() {}

func (x *DeleteDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Devices []*device_model.Device `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *DeviceResponse) Reset() {
	*x = DeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceResponse) ProtoMessage() {}

func (x *DeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceResponse.ProtoReflect.Descriptor instead.
func (*DeviceResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceResponse) GetDevices() []*device_model.Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

// Pressure -------------------------------------------------------------
type GetPressureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPressureRequest) Reset() {
	*x = GetPressureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPressureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPressureRequest) ProtoMessage() {}

func (x *GetPressureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPressureRequest.ProtoReflect.Descriptor instead.
func (*GetPressureRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{8}
}

type CreatePressureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreatePressureRequest) Reset() {
	*x = CreatePressureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePressureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePressureRequest) ProtoMessage() {}

func (x *CreatePressureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePressureRequest.ProtoReflect.Descriptor instead.
func (*CreatePressureRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{9}
}

func (x *CreatePressureRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CreateFewPressureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressure []*CreatePressureRequest `protobuf:"bytes,1,rep,name=pressure,proto3" json:"pressure,omitempty"`
}

func (x *CreateFewPressureRequest) Reset() {
	*x = CreateFewPressureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewPressureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewPressureRequest) ProtoMessage() {}

func (x *CreateFewPressureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewPressureRequest.ProtoReflect.Descriptor instead.
func (*CreateFewPressureRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreateFewPressureRequest) GetPressure() []*CreatePressureRequest {
	if x != nil {
		return x.Pressure
	}
	return nil
}

type UpdatePressureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdatePressureRequest) Reset() {
	*x = UpdatePressureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePressureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePressureRequest) ProtoMessage() {}

func (x *UpdatePressureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePressureRequest.ProtoReflect.Descriptor instead.
func (*UpdatePressureRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{11}
}

func (x *UpdatePressureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePressureRequest) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DeletePressureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePressureRequest) Reset() {
	*x = DeletePressureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePressureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePressureRequest) ProtoMessage() {}

func (x *DeletePressureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePressureRequest.ProtoReflect.Descriptor instead.
func (*DeletePressureRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{12}
}

func (x *DeletePressureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PressureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pressures []*device_model.Pressure `protobuf:"bytes,1,rep,name=pressures,proto3" json:"pressures,omitempty"`
}

func (x *PressureResponse) Reset() {
	*x = PressureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PressureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PressureResponse) ProtoMessage() {}

func (x *PressureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PressureResponse.ProtoReflect.Descriptor instead.
func (*PressureResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{13}
}

func (x *PressureResponse) GetPressures() []*device_model.Pressure {
	if x != nil {
		return x.Pressures
	}
	return nil
}

// TubeCount -------------------------------------------------------------
type GetTubeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTubeCountRequest) Reset() {
	*x = GetTubeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTubeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTubeCountRequest) ProtoMessage() {}

func (x *GetTubeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTubeCountRequest.ProtoReflect.Descriptor instead.
func (*GetTubeCountRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{14}
}

type CreateTubeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateTubeCountRequest) Reset() {
	*x = CreateTubeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTubeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTubeCountRequest) ProtoMessage() {}

func (x *CreateTubeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTubeCountRequest.ProtoReflect.Descriptor instead.
func (*CreateTubeCountRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{15}
}

func (x *CreateTubeCountRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CreateFewTubeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TubeCount []*CreateTubeCountRequest `protobuf:"bytes,1,rep,name=tubeCount,proto3" json:"tubeCount,omitempty"`
}

func (x *CreateFewTubeCountRequest) Reset() {
	*x = CreateFewTubeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewTubeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewTubeCountRequest) ProtoMessage() {}

func (x *CreateFewTubeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewTubeCountRequest.ProtoReflect.Descriptor instead.
func (*CreateFewTubeCountRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{16}
}

func (x *CreateFewTubeCountRequest) GetTubeCount() []*CreateTubeCountRequest {
	if x != nil {
		return x.TubeCount
	}
	return nil
}

type UpdateTubeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Value int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateTubeCountRequest) Reset() {
	*x = UpdateTubeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTubeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTubeCountRequest) ProtoMessage() {}

func (x *UpdateTubeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTubeCountRequest.ProtoReflect.Descriptor instead.
func (*UpdateTubeCountRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTubeCountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTubeCountRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DeleteTubeCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTubeCountRequest) Reset() {
	*x = DeleteTubeCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTubeCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTubeCountRequest) ProtoMessage() {}

func (x *DeleteTubeCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTubeCountRequest.ProtoReflect.Descriptor instead.
func (*DeleteTubeCountRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteTubeCountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TubeCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TubeCount []*device_model.TubeCount `protobuf:"bytes,1,rep,name=tubeCount,proto3" json:"tubeCount,omitempty"`
}

func (x *TubeCountResponse) Reset() {
	*x = TubeCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TubeCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TubeCountResponse) ProtoMessage() {}

func (x *TubeCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TubeCountResponse.ProtoReflect.Descriptor instead.
func (*TubeCountResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{19}
}

func (x *TubeCountResponse) GetTubeCount() []*device_model.TubeCount {
	if x != nil {
		return x.TubeCount
	}
	return nil
}

// FinningFactor -----------------------------------------------------------
type GetFinningFactorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
}

func (x *GetFinningFactorRequest) Reset() {
	*x = GetFinningFactorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFinningFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFinningFactorRequest) ProtoMessage() {}

func (x *GetFinningFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFinningFactorRequest.ProtoReflect.Descriptor instead.
func (*GetFinningFactorRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{20}
}

func (x *GetFinningFactorRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

type CreateFinningFactorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateFinningFactorRequest) Reset() {
	*x = CreateFinningFactorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFinningFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFinningFactorRequest) ProtoMessage() {}

func (x *CreateFinningFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFinningFactorRequest.ProtoReflect.Descriptor instead.
func (*CreateFinningFactorRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{21}
}

func (x *CreateFinningFactorRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CreateFinningFactorRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateFewFinningFactorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinnigFactor []*CreateFinningFactorRequest `protobuf:"bytes,1,rep,name=finnigFactor,proto3" json:"finnigFactor,omitempty"`
}

func (x *CreateFewFinningFactorRequest) Reset() {
	*x = CreateFewFinningFactorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewFinningFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewFinningFactorRequest) ProtoMessage() {}

func (x *CreateFewFinningFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewFinningFactorRequest.ProtoReflect.Descriptor instead.
func (*CreateFewFinningFactorRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{22}
}

func (x *CreateFewFinningFactorRequest) GetFinnigFactor() []*CreateFinningFactorRequest {
	if x != nil {
		return x.FinnigFactor
	}
	return nil
}

type UpdateFinningFactorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DevId string `protobuf:"bytes,2,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateFinningFactorRequest) Reset() {
	*x = UpdateFinningFactorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFinningFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFinningFactorRequest) ProtoMessage() {}

func (x *UpdateFinningFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFinningFactorRequest.ProtoReflect.Descriptor instead.
func (*UpdateFinningFactorRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateFinningFactorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateFinningFactorRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *UpdateFinningFactorRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteFinningFactorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteFinningFactorRequest) Reset() {
	*x = DeleteFinningFactorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFinningFactorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFinningFactorRequest) ProtoMessage() {}

func (x *DeleteFinningFactorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFinningFactorRequest.ProtoReflect.Descriptor instead.
func (*DeleteFinningFactorRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteFinningFactorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FinningFactorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Finning []*device_model.FinningFactor `protobuf:"bytes,1,rep,name=finning,proto3" json:"finning,omitempty"`
}

func (x *FinningFactorResponse) Reset() {
	*x = FinningFactorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinningFactorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinningFactorResponse) ProtoMessage() {}

func (x *FinningFactorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinningFactorResponse.ProtoReflect.Descriptor instead.
func (*FinningFactorResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{25}
}

func (x *FinningFactorResponse) GetFinning() []*device_model.FinningFactor {
	if x != nil {
		return x.Finning
	}
	return nil
}

// SectionExecution ---------------------------------------------------------
type GetSectionExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
}

func (x *GetSectionExecutionRequest) Reset() {
	*x = GetSectionExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSectionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSectionExecutionRequest) ProtoMessage() {}

func (x *GetSectionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSectionExecutionRequest.ProtoReflect.Descriptor instead.
func (*GetSectionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetSectionExecutionRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

type CreateSectionExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateSectionExecutionRequest) Reset() {
	*x = CreateSectionExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSectionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSectionExecutionRequest) ProtoMessage() {}

func (x *CreateSectionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSectionExecutionRequest.ProtoReflect.Descriptor instead.
func (*CreateSectionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{27}
}

func (x *CreateSectionExecutionRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CreateSectionExecutionRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateFewSectionExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Section []*CreateSectionExecutionRequest `protobuf:"bytes,1,rep,name=section,proto3" json:"section,omitempty"`
}

func (x *CreateFewSectionExecutionRequest) Reset() {
	*x = CreateFewSectionExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewSectionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewSectionExecutionRequest) ProtoMessage() {}

func (x *CreateFewSectionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewSectionExecutionRequest.ProtoReflect.Descriptor instead.
func (*CreateFewSectionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{28}
}

func (x *CreateFewSectionExecutionRequest) GetSection() []*CreateSectionExecutionRequest {
	if x != nil {
		return x.Section
	}
	return nil
}

type UpdateSectionExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DevId string `protobuf:"bytes,2,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateSectionExecutionRequest) Reset() {
	*x = UpdateSectionExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSectionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSectionExecutionRequest) ProtoMessage() {}

func (x *UpdateSectionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSectionExecutionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSectionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateSectionExecutionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSectionExecutionRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *UpdateSectionExecutionRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteSectionExecutionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSectionExecutionRequest) Reset() {
	*x = DeleteSectionExecutionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSectionExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSectionExecutionRequest) ProtoMessage() {}

func (x *DeleteSectionExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSectionExecutionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSectionExecutionRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteSectionExecutionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SectionExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Section []*device_model.SectionExecution `protobuf:"bytes,1,rep,name=section,proto3" json:"section,omitempty"`
}

func (x *SectionExecutionResponse) Reset() {
	*x = SectionExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionExecutionResponse) ProtoMessage() {}

func (x *SectionExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionExecutionResponse.ProtoReflect.Descriptor instead.
func (*SectionExecutionResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{31}
}

func (x *SectionExecutionResponse) GetSection() []*device_model.SectionExecution {
	if x != nil {
		return x.Section
	}
	return nil
}

// TubeLength ---------------------------------------------------------------
type GetTubeLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
}

func (x *GetTubeLengthRequest) Reset() {
	*x = GetTubeLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTubeLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTubeLengthRequest) ProtoMessage() {}

func (x *GetTubeLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTubeLengthRequest.ProtoReflect.Descriptor instead.
func (*GetTubeLengthRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{32}
}

func (x *GetTubeLengthRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

type CreateTubeLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateTubeLengthRequest) Reset() {
	*x = CreateTubeLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTubeLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTubeLengthRequest) ProtoMessage() {}

func (x *CreateTubeLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTubeLengthRequest.ProtoReflect.Descriptor instead.
func (*CreateTubeLengthRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{33}
}

func (x *CreateTubeLengthRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CreateTubeLengthRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateFewTubeLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TubeLength []*CreateTubeLengthRequest `protobuf:"bytes,1,rep,name=tubeLength,proto3" json:"tubeLength,omitempty"`
}

func (x *CreateFewTubeLengthRequest) Reset() {
	*x = CreateFewTubeLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewTubeLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewTubeLengthRequest) ProtoMessage() {}

func (x *CreateFewTubeLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewTubeLengthRequest.ProtoReflect.Descriptor instead.
func (*CreateFewTubeLengthRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{34}
}

func (x *CreateFewTubeLengthRequest) GetTubeLength() []*CreateTubeLengthRequest {
	if x != nil {
		return x.TubeLength
	}
	return nil
}

type UpdateTubeLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DevId string `protobuf:"bytes,2,opt,name=devId,proto3" json:"devId,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateTubeLengthRequest) Reset() {
	*x = UpdateTubeLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTubeLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTubeLengthRequest) ProtoMessage() {}

func (x *UpdateTubeLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTubeLengthRequest.ProtoReflect.Descriptor instead.
func (*UpdateTubeLengthRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateTubeLengthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTubeLengthRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *UpdateTubeLengthRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteTubeLengthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTubeLengthRequest) Reset() {
	*x = DeleteTubeLengthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTubeLengthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTubeLengthRequest) ProtoMessage() {}

func (x *DeleteTubeLengthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTubeLengthRequest.ProtoReflect.Descriptor instead.
func (*DeleteTubeLengthRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteTubeLengthRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TubeLengthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TubeLength []*device_model.TubeLength `protobuf:"bytes,1,rep,name=tubeLength,proto3" json:"tubeLength,omitempty"`
}

func (x *TubeLengthResponse) Reset() {
	*x = TubeLengthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TubeLengthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TubeLengthResponse) ProtoMessage() {}

func (x *TubeLengthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TubeLengthResponse.ProtoReflect.Descriptor instead.
func (*TubeLengthResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{37}
}

func (x *TubeLengthResponse) GetTubeLength() []*device_model.TubeLength {
	if x != nil {
		return x.TubeLength
	}
	return nil
}

// NumberOfMoves ------------------------------------------------------------
type GetNumberOfMovesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
}

func (x *GetNumberOfMovesRequest) Reset() {
	*x = GetNumberOfMovesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNumberOfMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNumberOfMovesRequest) ProtoMessage() {}

func (x *GetNumberOfMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNumberOfMovesRequest.ProtoReflect.Descriptor instead.
func (*GetNumberOfMovesRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{38}
}

func (x *GetNumberOfMovesRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

type CreateNumberOfMovesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevId   string `protobuf:"bytes,1,opt,name=devId,proto3" json:"devId,omitempty"`
	CountId string `protobuf:"bytes,2,opt,name=countId,proto3" json:"countId,omitempty"`
	Value   string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateNumberOfMovesRequest) Reset() {
	*x = CreateNumberOfMovesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNumberOfMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNumberOfMovesRequest) ProtoMessage() {}

func (x *CreateNumberOfMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNumberOfMovesRequest.ProtoReflect.Descriptor instead.
func (*CreateNumberOfMovesRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{39}
}

func (x *CreateNumberOfMovesRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *CreateNumberOfMovesRequest) GetCountId() string {
	if x != nil {
		return x.CountId
	}
	return ""
}

func (x *CreateNumberOfMovesRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CreateFewNumberOfMovesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number []*CreateNumberOfMovesRequest `protobuf:"bytes,1,rep,name=number,proto3" json:"number,omitempty"`
}

func (x *CreateFewNumberOfMovesRequest) Reset() {
	*x = CreateFewNumberOfMovesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewNumberOfMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewNumberOfMovesRequest) ProtoMessage() {}

func (x *CreateFewNumberOfMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewNumberOfMovesRequest.ProtoReflect.Descriptor instead.
func (*CreateFewNumberOfMovesRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{40}
}

func (x *CreateFewNumberOfMovesRequest) GetNumber() []*CreateNumberOfMovesRequest {
	if x != nil {
		return x.Number
	}
	return nil
}

type UpdateNumberOfMovesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DevId   string `protobuf:"bytes,2,opt,name=devId,proto3" json:"devId,omitempty"`
	CountId string `protobuf:"bytes,3,opt,name=countId,proto3" json:"countId,omitempty"`
	Value   string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateNumberOfMovesRequest) Reset() {
	*x = UpdateNumberOfMovesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNumberOfMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNumberOfMovesRequest) ProtoMessage() {}

func (x *UpdateNumberOfMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNumberOfMovesRequest.ProtoReflect.Descriptor instead.
func (*UpdateNumberOfMovesRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{41}
}

func (x *UpdateNumberOfMovesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNumberOfMovesRequest) GetDevId() string {
	if x != nil {
		return x.DevId
	}
	return ""
}

func (x *UpdateNumberOfMovesRequest) GetCountId() string {
	if x != nil {
		return x.CountId
	}
	return ""
}

func (x *UpdateNumberOfMovesRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeleteNumberOfMovesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNumberOfMovesRequest) Reset() {
	*x = DeleteNumberOfMovesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNumberOfMovesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNumberOfMovesRequest) ProtoMessage() {}

func (x *DeleteNumberOfMovesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNumberOfMovesRequest.ProtoReflect.Descriptor instead.
func (*DeleteNumberOfMovesRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteNumberOfMovesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NumberOfMovesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number []*device_model.NumberOfMoves `protobuf:"bytes,1,rep,name=number,proto3" json:"number,omitempty"`
}

func (x *NumberOfMovesResponse) Reset() {
	*x = NumberOfMovesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumberOfMovesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumberOfMovesResponse) ProtoMessage() {}

func (x *NumberOfMovesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumberOfMovesResponse.ProtoReflect.Descriptor instead.
func (*NumberOfMovesResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{43}
}

func (x *NumberOfMovesResponse) GetNumber() []*device_model.NumberOfMoves {
	if x != nil {
		return x.Number
	}
	return nil
}

// NameGasket ---------------------------------------------------------------
type GetNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinId string `protobuf:"bytes,1,opt,name=finId,proto3" json:"finId,omitempty"`
}

func (x *GetNameGasketRequest) Reset() {
	*x = GetNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNameGasketRequest) ProtoMessage() {}

func (x *GetNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNameGasketRequest.ProtoReflect.Descriptor instead.
func (*GetNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{44}
}

func (x *GetNameGasketRequest) GetFinId() string {
	if x != nil {
		return x.FinId
	}
	return ""
}

type GetFullNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinId string `protobuf:"bytes,1,opt,name=finId,proto3" json:"finId,omitempty"`
}

func (x *GetFullNameGasketRequest) Reset() {
	*x = GetFullNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFullNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFullNameGasketRequest) ProtoMessage() {}

func (x *GetFullNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFullNameGasketRequest.ProtoReflect.Descriptor instead.
func (*GetFullNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{45}
}

func (x *GetFullNameGasketRequest) GetFinId() string {
	if x != nil {
		return x.FinId
	}
	return ""
}

type GetNameGasketSizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNameGasketSizeRequest) Reset() {
	*x = GetNameGasketSizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNameGasketSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNameGasketSizeRequest) ProtoMessage() {}

func (x *GetNameGasketSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNameGasketSizeRequest.ProtoReflect.Descriptor instead.
func (*GetNameGasketSizeRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{46}
}

func (x *GetNameGasketSizeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinId     string  `protobuf:"bytes,1,opt,name=finId,proto3" json:"finId,omitempty"`
	NumId     string  `protobuf:"bytes,2,opt,name=numId,proto3" json:"numId,omitempty"`
	PresId    string  `protobuf:"bytes,3,opt,name=presId,proto3" json:"presId,omitempty"`
	Title     string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	SizeLong  float64 `protobuf:"fixed64,5,opt,name=sizeLong,proto3" json:"sizeLong,omitempty"`
	SizeTrans float64 `protobuf:"fixed64,6,opt,name=sizeTrans,proto3" json:"sizeTrans,omitempty"`
	Width     float64 `protobuf:"fixed64,7,opt,name=width,proto3" json:"width,omitempty"`
	Thick1    float64 `protobuf:"fixed64,8,opt,name=thick1,proto3" json:"thick1,omitempty"`
	Thick2    float64 `protobuf:"fixed64,9,opt,name=thick2,proto3" json:"thick2,omitempty"`
	Thick3    float64 `protobuf:"fixed64,10,opt,name=thick3,proto3" json:"thick3,omitempty"`
	Thick4    float64 `protobuf:"fixed64,11,opt,name=thick4,proto3" json:"thick4,omitempty"`
}

func (x *CreateNameGasketRequest) Reset() {
	*x = CreateNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNameGasketRequest) ProtoMessage() {}

func (x *CreateNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNameGasketRequest.ProtoReflect.Descriptor instead.
func (*CreateNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{47}
}

func (x *CreateNameGasketRequest) GetFinId() string {
	if x != nil {
		return x.FinId
	}
	return ""
}

func (x *CreateNameGasketRequest) GetNumId() string {
	if x != nil {
		return x.NumId
	}
	return ""
}

func (x *CreateNameGasketRequest) GetPresId() string {
	if x != nil {
		return x.PresId
	}
	return ""
}

func (x *CreateNameGasketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNameGasketRequest) GetSizeLong() float64 {
	if x != nil {
		return x.SizeLong
	}
	return 0
}

func (x *CreateNameGasketRequest) GetSizeTrans() float64 {
	if x != nil {
		return x.SizeTrans
	}
	return 0
}

func (x *CreateNameGasketRequest) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CreateNameGasketRequest) GetThick1() float64 {
	if x != nil {
		return x.Thick1
	}
	return 0
}

func (x *CreateNameGasketRequest) GetThick2() float64 {
	if x != nil {
		return x.Thick2
	}
	return 0
}

func (x *CreateNameGasketRequest) GetThick3() float64 {
	if x != nil {
		return x.Thick3
	}
	return 0
}

func (x *CreateNameGasketRequest) GetThick4() float64 {
	if x != nil {
		return x.Thick4
	}
	return 0
}

type CreateFewNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*CreateNameGasketRequest `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *CreateFewNameGasketRequest) Reset() {
	*x = CreateFewNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFewNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFewNameGasketRequest) ProtoMessage() {}

func (x *CreateFewNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFewNameGasketRequest.ProtoReflect.Descriptor instead.
func (*CreateFewNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{48}
}

func (x *CreateFewNameGasketRequest) GetGasket() []*CreateNameGasketRequest {
	if x != nil {
		return x.Gasket
	}
	return nil
}

type UpdateNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FinId     string  `protobuf:"bytes,2,opt,name=finId,proto3" json:"finId,omitempty"`
	NumId     string  `protobuf:"bytes,3,opt,name=numId,proto3" json:"numId,omitempty"`
	PresId    string  `protobuf:"bytes,4,opt,name=presId,proto3" json:"presId,omitempty"`
	Title     string  `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	SizeLong  float64 `protobuf:"fixed64,6,opt,name=sizeLong,proto3" json:"sizeLong,omitempty"`
	SizeTrans float64 `protobuf:"fixed64,7,opt,name=sizeTrans,proto3" json:"sizeTrans,omitempty"`
	Width     float64 `protobuf:"fixed64,8,opt,name=width,proto3" json:"width,omitempty"`
	Thick1    float64 `protobuf:"fixed64,9,opt,name=thick1,proto3" json:"thick1,omitempty"`
	Thick2    float64 `protobuf:"fixed64,10,opt,name=thick2,proto3" json:"thick2,omitempty"`
	Thick3    float64 `protobuf:"fixed64,11,opt,name=thick3,proto3" json:"thick3,omitempty"`
	Thick4    float64 `protobuf:"fixed64,12,opt,name=thick4,proto3" json:"thick4,omitempty"`
}

func (x *UpdateNameGasketRequest) Reset() {
	*x = UpdateNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNameGasketRequest) ProtoMessage() {}

func (x *UpdateNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNameGasketRequest.ProtoReflect.Descriptor instead.
func (*UpdateNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateNameGasketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNameGasketRequest) GetFinId() string {
	if x != nil {
		return x.FinId
	}
	return ""
}

func (x *UpdateNameGasketRequest) GetNumId() string {
	if x != nil {
		return x.NumId
	}
	return ""
}

func (x *UpdateNameGasketRequest) GetPresId() string {
	if x != nil {
		return x.PresId
	}
	return ""
}

func (x *UpdateNameGasketRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateNameGasketRequest) GetSizeLong() float64 {
	if x != nil {
		return x.SizeLong
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetSizeTrans() float64 {
	if x != nil {
		return x.SizeTrans
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetThick1() float64 {
	if x != nil {
		return x.Thick1
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetThick2() float64 {
	if x != nil {
		return x.Thick2
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetThick3() float64 {
	if x != nil {
		return x.Thick3
	}
	return 0
}

func (x *UpdateNameGasketRequest) GetThick4() float64 {
	if x != nil {
		return x.Thick4
	}
	return 0
}

type DeleteNameGasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNameGasketRequest) Reset() {
	*x = DeleteNameGasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNameGasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNameGasketRequest) ProtoMessage() {}

func (x *DeleteNameGasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNameGasketRequest.ProtoReflect.Descriptor instead.
func (*DeleteNameGasketRequest) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{50}
}

func (x *DeleteNameGasketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NameGasketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*device_model.NameGasket `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *NameGasketResponse) Reset() {
	*x = NameGasketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameGasketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameGasketResponse) ProtoMessage() {}

func (x *NameGasketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameGasketResponse.ProtoReflect.Descriptor instead.
func (*NameGasketResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{51}
}

func (x *NameGasketResponse) GetGasket() []*device_model.NameGasket {
	if x != nil {
		return x.Gasket
	}
	return nil
}

type NameGasketSizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*device_model.NameGasketSize `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *NameGasketSizeResponse) Reset() {
	*x = NameGasketSizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameGasketSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameGasketSizeResponse) ProtoMessage() {}

func (x *NameGasketSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameGasketSizeResponse.ProtoReflect.Descriptor instead.
func (*NameGasketSizeResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{52}
}

func (x *NameGasketSizeResponse) GetGasket() []*device_model.NameGasketSize {
	if x != nil {
		return x.Gasket
	}
	return nil
}

type FullNameGasketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gasket []*device_model.FullNameGasket `protobuf:"bytes,1,rep,name=gasket,proto3" json:"gasket,omitempty"`
}

func (x *FullNameGasketResponse) Reset() {
	*x = FullNameGasketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_moment_device_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullNameGasketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullNameGasketResponse) ProtoMessage() {}

func (x *FullNameGasketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moment_device_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullNameGasketResponse.ProtoReflect.Descriptor instead.
func (*FullNameGasketResponse) Descriptor() ([]byte, []int) {
	return file_moment_device_api_proto_rawDescGZIP(), []int{53}
}

func (x *FullNameGasketResponse) GetGasket() []*device_model.FullNameGasket {
	if x != nil {
		return x.Gasket
	}
	return nil
}

var File_moment_device_api_proto protoreflect.FileDescriptor

var file_moment_device_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x20, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x0a, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x07,
	0x64, 0x69, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x64, 0x69, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x14, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x59, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d,
	0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x22, 0x3d, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x27, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x73, 0x22,
	0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x74, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x74, 0x75, 0x62, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4a, 0x0a, 0x11, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x09, 0x74, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x77, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x6e, 0x69,
	0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x6e, 0x69, 0x67, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x15, 0x46,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x66, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x2f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x61,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a,
	0x74, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x74, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x55, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x75, 0x62,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x75, 0x62,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x0a, 0x74, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x22, 0x2f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64,
	0x65, 0x76, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x76, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d,
	0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x15, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65,
	0x73, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73,
	0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69,
	0x63, 0x6b, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x32, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x68, 0x69, 0x63, 0x6b, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69,
	0x63, 0x6b, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x34, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x34, 0x22, 0x59, 0x0a, 0x1a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06,
	0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22, 0xb3, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x75, 0x6d, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x75, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x73, 0x69, 0x7a, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x73, 0x69, 0x7a,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x31, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68,
	0x69, 0x63, 0x6b, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x32, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x68, 0x69, 0x63, 0x6b, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68,
	0x69, 0x63, 0x6b, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x34, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x68, 0x69, 0x63, 0x6b, 0x34, 0x22, 0x29, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x4e, 0x61, 0x6d, 0x65, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22,
	0x4e, 0x0a, 0x16, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x22,
	0x4e, 0x0a, 0x16, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x67, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x32,
	0xbc, 0x1b, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x45, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x65, 0x77, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x65, 0x77, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65,
	0x73, 0x73, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73,
	0x73, 0x75, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x75,
	0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x75, 0x62, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4b, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x46, 0x69, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x26,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x46, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x63, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x75, 0x62, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x75, 0x62, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53,
	0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x54, 0x75, 0x62, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62,
	0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x75, 0x62, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f,
	0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d,
	0x6f, 0x76, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x29,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f,
	0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x47,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x12, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x67,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x23,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x12, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x47, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c,
	0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x6c, 0x65,
	0x78, 0x61, 0x6e, 0x64, 0x65, 0x72, 0x32, 0x37, 0x32, 0x2f, 0x73, 0x65, 0x61, 0x6c, 0x75, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_moment_device_api_proto_rawDescOnce sync.Once
	file_moment_device_api_proto_rawDescData = file_moment_device_api_proto_rawDesc
)

func file_moment_device_api_proto_rawDescGZIP() []byte {
	file_moment_device_api_proto_rawDescOnce.Do(func() {
		file_moment_device_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_moment_device_api_proto_rawDescData)
	})
	return file_moment_device_api_proto_rawDescData
}

var file_moment_device_api_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_moment_device_api_proto_goTypes = []interface{}{
	(*IdResponse)(nil),                       // 0: device_api.IdResponse
	(*Response)(nil),                         // 1: device_api.Response
	(*GetDeviceRequest)(nil),                 // 2: device_api.GetDeviceRequest
	(*CreateDeviceRequest)(nil),              // 3: device_api.CreateDeviceRequest
	(*CreateFewDeviceRequest)(nil),           // 4: device_api.CreateFewDeviceRequest
	(*UpdateDeviceRequest)(nil),              // 5: device_api.UpdateDeviceRequest
	(*DeleteDeviceRequest)(nil),              // 6: device_api.DeleteDeviceRequest
	(*DeviceResponse)(nil),                   // 7: device_api.DeviceResponse
	(*GetPressureRequest)(nil),               // 8: device_api.GetPressureRequest
	(*CreatePressureRequest)(nil),            // 9: device_api.CreatePressureRequest
	(*CreateFewPressureRequest)(nil),         // 10: device_api.CreateFewPressureRequest
	(*UpdatePressureRequest)(nil),            // 11: device_api.UpdatePressureRequest
	(*DeletePressureRequest)(nil),            // 12: device_api.DeletePressureRequest
	(*PressureResponse)(nil),                 // 13: device_api.PressureResponse
	(*GetTubeCountRequest)(nil),              // 14: device_api.GetTubeCountRequest
	(*CreateTubeCountRequest)(nil),           // 15: device_api.CreateTubeCountRequest
	(*CreateFewTubeCountRequest)(nil),        // 16: device_api.CreateFewTubeCountRequest
	(*UpdateTubeCountRequest)(nil),           // 17: device_api.UpdateTubeCountRequest
	(*DeleteTubeCountRequest)(nil),           // 18: device_api.DeleteTubeCountRequest
	(*TubeCountResponse)(nil),                // 19: device_api.TubeCountResponse
	(*GetFinningFactorRequest)(nil),          // 20: device_api.GetFinningFactorRequest
	(*CreateFinningFactorRequest)(nil),       // 21: device_api.CreateFinningFactorRequest
	(*CreateFewFinningFactorRequest)(nil),    // 22: device_api.CreateFewFinningFactorRequest
	(*UpdateFinningFactorRequest)(nil),       // 23: device_api.UpdateFinningFactorRequest
	(*DeleteFinningFactorRequest)(nil),       // 24: device_api.DeleteFinningFactorRequest
	(*FinningFactorResponse)(nil),            // 25: device_api.FinningFactorResponse
	(*GetSectionExecutionRequest)(nil),       // 26: device_api.GetSectionExecutionRequest
	(*CreateSectionExecutionRequest)(nil),    // 27: device_api.CreateSectionExecutionRequest
	(*CreateFewSectionExecutionRequest)(nil), // 28: device_api.CreateFewSectionExecutionRequest
	(*UpdateSectionExecutionRequest)(nil),    // 29: device_api.UpdateSectionExecutionRequest
	(*DeleteSectionExecutionRequest)(nil),    // 30: device_api.DeleteSectionExecutionRequest
	(*SectionExecutionResponse)(nil),         // 31: device_api.SectionExecutionResponse
	(*GetTubeLengthRequest)(nil),             // 32: device_api.GetTubeLengthRequest
	(*CreateTubeLengthRequest)(nil),          // 33: device_api.CreateTubeLengthRequest
	(*CreateFewTubeLengthRequest)(nil),       // 34: device_api.CreateFewTubeLengthRequest
	(*UpdateTubeLengthRequest)(nil),          // 35: device_api.UpdateTubeLengthRequest
	(*DeleteTubeLengthRequest)(nil),          // 36: device_api.DeleteTubeLengthRequest
	(*TubeLengthResponse)(nil),               // 37: device_api.TubeLengthResponse
	(*GetNumberOfMovesRequest)(nil),          // 38: device_api.GetNumberOfMovesRequest
	(*CreateNumberOfMovesRequest)(nil),       // 39: device_api.CreateNumberOfMovesRequest
	(*CreateFewNumberOfMovesRequest)(nil),    // 40: device_api.CreateFewNumberOfMovesRequest
	(*UpdateNumberOfMovesRequest)(nil),       // 41: device_api.UpdateNumberOfMovesRequest
	(*DeleteNumberOfMovesRequest)(nil),       // 42: device_api.DeleteNumberOfMovesRequest
	(*NumberOfMovesResponse)(nil),            // 43: device_api.NumberOfMovesResponse
	(*GetNameGasketRequest)(nil),             // 44: device_api.GetNameGasketRequest
	(*GetFullNameGasketRequest)(nil),         // 45: device_api.GetFullNameGasketRequest
	(*GetNameGasketSizeRequest)(nil),         // 46: device_api.GetNameGasketSizeRequest
	(*CreateNameGasketRequest)(nil),          // 47: device_api.CreateNameGasketRequest
	(*CreateFewNameGasketRequest)(nil),       // 48: device_api.CreateFewNameGasketRequest
	(*UpdateNameGasketRequest)(nil),          // 49: device_api.UpdateNameGasketRequest
	(*DeleteNameGasketRequest)(nil),          // 50: device_api.DeleteNameGasketRequest
	(*NameGasketResponse)(nil),               // 51: device_api.NameGasketResponse
	(*NameGasketSizeResponse)(nil),           // 52: device_api.NameGasketSizeResponse
	(*FullNameGasketResponse)(nil),           // 53: device_api.FullNameGasketResponse
	(*device_model.Device)(nil),              // 54: device_model.Device
	(*device_model.Pressure)(nil),            // 55: device_model.Pressure
	(*device_model.TubeCount)(nil),           // 56: device_model.TubeCount
	(*device_model.FinningFactor)(nil),       // 57: device_model.FinningFactor
	(*device_model.SectionExecution)(nil),    // 58: device_model.SectionExecution
	(*device_model.TubeLength)(nil),          // 59: device_model.TubeLength
	(*device_model.NumberOfMoves)(nil),       // 60: device_model.NumberOfMoves
	(*device_model.NameGasket)(nil),          // 61: device_model.NameGasket
	(*device_model.NameGasketSize)(nil),      // 62: device_model.NameGasketSize
	(*device_model.FullNameGasket)(nil),      // 63: device_model.FullNameGasket
}
var file_moment_device_api_proto_depIdxs = []int32{
	3,  // 0: device_api.CreateFewDeviceRequest.divices:type_name -> device_api.CreateDeviceRequest
	54, // 1: device_api.DeviceResponse.devices:type_name -> device_model.Device
	9,  // 2: device_api.CreateFewPressureRequest.pressure:type_name -> device_api.CreatePressureRequest
	55, // 3: device_api.PressureResponse.pressures:type_name -> device_model.Pressure
	15, // 4: device_api.CreateFewTubeCountRequest.tubeCount:type_name -> device_api.CreateTubeCountRequest
	56, // 5: device_api.TubeCountResponse.tubeCount:type_name -> device_model.TubeCount
	21, // 6: device_api.CreateFewFinningFactorRequest.finnigFactor:type_name -> device_api.CreateFinningFactorRequest
	57, // 7: device_api.FinningFactorResponse.finning:type_name -> device_model.FinningFactor
	27, // 8: device_api.CreateFewSectionExecutionRequest.section:type_name -> device_api.CreateSectionExecutionRequest
	58, // 9: device_api.SectionExecutionResponse.section:type_name -> device_model.SectionExecution
	33, // 10: device_api.CreateFewTubeLengthRequest.tubeLength:type_name -> device_api.CreateTubeLengthRequest
	59, // 11: device_api.TubeLengthResponse.tubeLength:type_name -> device_model.TubeLength
	39, // 12: device_api.CreateFewNumberOfMovesRequest.number:type_name -> device_api.CreateNumberOfMovesRequest
	60, // 13: device_api.NumberOfMovesResponse.number:type_name -> device_model.NumberOfMoves
	47, // 14: device_api.CreateFewNameGasketRequest.gasket:type_name -> device_api.CreateNameGasketRequest
	61, // 15: device_api.NameGasketResponse.gasket:type_name -> device_model.NameGasket
	62, // 16: device_api.NameGasketSizeResponse.gasket:type_name -> device_model.NameGasketSize
	63, // 17: device_api.FullNameGasketResponse.gasket:type_name -> device_model.FullNameGasket
	2,  // 18: device_api.DeviceService.GetDevice:input_type -> device_api.GetDeviceRequest
	3,  // 19: device_api.DeviceService.CreateDevice:input_type -> device_api.CreateDeviceRequest
	4,  // 20: device_api.DeviceService.CreateFewDevice:input_type -> device_api.CreateFewDeviceRequest
	5,  // 21: device_api.DeviceService.UpdateDevice:input_type -> device_api.UpdateDeviceRequest
	6,  // 22: device_api.DeviceService.DeleteDevice:input_type -> device_api.DeleteDeviceRequest
	8,  // 23: device_api.DeviceService.GetPressure:input_type -> device_api.GetPressureRequest
	9,  // 24: device_api.DeviceService.CreatePressure:input_type -> device_api.CreatePressureRequest
	10, // 25: device_api.DeviceService.CreateFewPressure:input_type -> device_api.CreateFewPressureRequest
	11, // 26: device_api.DeviceService.UpdatePressure:input_type -> device_api.UpdatePressureRequest
	12, // 27: device_api.DeviceService.DeletePressure:input_type -> device_api.DeletePressureRequest
	14, // 28: device_api.DeviceService.GetTubeCount:input_type -> device_api.GetTubeCountRequest
	15, // 29: device_api.DeviceService.CreateTubeCount:input_type -> device_api.CreateTubeCountRequest
	16, // 30: device_api.DeviceService.CreateFewTubeCount:input_type -> device_api.CreateFewTubeCountRequest
	17, // 31: device_api.DeviceService.UpdateTubeCount:input_type -> device_api.UpdateTubeCountRequest
	18, // 32: device_api.DeviceService.DeleteTubeCount:input_type -> device_api.DeleteTubeCountRequest
	20, // 33: device_api.DeviceService.GetFinningFactor:input_type -> device_api.GetFinningFactorRequest
	21, // 34: device_api.DeviceService.CreateFinningFactor:input_type -> device_api.CreateFinningFactorRequest
	22, // 35: device_api.DeviceService.CreateFewFinningFactor:input_type -> device_api.CreateFewFinningFactorRequest
	23, // 36: device_api.DeviceService.UpdateFinningFactor:input_type -> device_api.UpdateFinningFactorRequest
	24, // 37: device_api.DeviceService.DeleteFinningFactor:input_type -> device_api.DeleteFinningFactorRequest
	26, // 38: device_api.DeviceService.GetSectionExecution:input_type -> device_api.GetSectionExecutionRequest
	27, // 39: device_api.DeviceService.CreateSectionExecution:input_type -> device_api.CreateSectionExecutionRequest
	28, // 40: device_api.DeviceService.CreateFewSectionExecution:input_type -> device_api.CreateFewSectionExecutionRequest
	29, // 41: device_api.DeviceService.UpdateSectionExecution:input_type -> device_api.UpdateSectionExecutionRequest
	30, // 42: device_api.DeviceService.DeleteSectionExecution:input_type -> device_api.DeleteSectionExecutionRequest
	32, // 43: device_api.DeviceService.GetTubeLength:input_type -> device_api.GetTubeLengthRequest
	33, // 44: device_api.DeviceService.CreateTubeLength:input_type -> device_api.CreateTubeLengthRequest
	34, // 45: device_api.DeviceService.CreateFewTubeLength:input_type -> device_api.CreateFewTubeLengthRequest
	35, // 46: device_api.DeviceService.UpdateTubeLength:input_type -> device_api.UpdateTubeLengthRequest
	36, // 47: device_api.DeviceService.DeleteTubeLength:input_type -> device_api.DeleteTubeLengthRequest
	38, // 48: device_api.DeviceService.GetNumberOfMoves:input_type -> device_api.GetNumberOfMovesRequest
	39, // 49: device_api.DeviceService.CreateNumberOfMoves:input_type -> device_api.CreateNumberOfMovesRequest
	40, // 50: device_api.DeviceService.CreateFewNumberOfMoves:input_type -> device_api.CreateFewNumberOfMovesRequest
	41, // 51: device_api.DeviceService.UpdateNumberOfMoves:input_type -> device_api.UpdateNumberOfMovesRequest
	42, // 52: device_api.DeviceService.DeleteNumberOfMoves:input_type -> device_api.DeleteNumberOfMovesRequest
	44, // 53: device_api.DeviceService.GetNameGasket:input_type -> device_api.GetNameGasketRequest
	45, // 54: device_api.DeviceService.GetFullNameGasket:input_type -> device_api.GetFullNameGasketRequest
	46, // 55: device_api.DeviceService.getNameGasketSize:input_type -> device_api.GetNameGasketSizeRequest
	47, // 56: device_api.DeviceService.CreateNameGasket:input_type -> device_api.CreateNameGasketRequest
	48, // 57: device_api.DeviceService.CreateFewNameGasket:input_type -> device_api.CreateFewNameGasketRequest
	49, // 58: device_api.DeviceService.UpdateNameGasket:input_type -> device_api.UpdateNameGasketRequest
	50, // 59: device_api.DeviceService.DeleteNameGasket:input_type -> device_api.DeleteNameGasketRequest
	7,  // 60: device_api.DeviceService.GetDevice:output_type -> device_api.DeviceResponse
	0,  // 61: device_api.DeviceService.CreateDevice:output_type -> device_api.IdResponse
	1,  // 62: device_api.DeviceService.CreateFewDevice:output_type -> device_api.Response
	1,  // 63: device_api.DeviceService.UpdateDevice:output_type -> device_api.Response
	1,  // 64: device_api.DeviceService.DeleteDevice:output_type -> device_api.Response
	13, // 65: device_api.DeviceService.GetPressure:output_type -> device_api.PressureResponse
	0,  // 66: device_api.DeviceService.CreatePressure:output_type -> device_api.IdResponse
	1,  // 67: device_api.DeviceService.CreateFewPressure:output_type -> device_api.Response
	1,  // 68: device_api.DeviceService.UpdatePressure:output_type -> device_api.Response
	1,  // 69: device_api.DeviceService.DeletePressure:output_type -> device_api.Response
	19, // 70: device_api.DeviceService.GetTubeCount:output_type -> device_api.TubeCountResponse
	0,  // 71: device_api.DeviceService.CreateTubeCount:output_type -> device_api.IdResponse
	1,  // 72: device_api.DeviceService.CreateFewTubeCount:output_type -> device_api.Response
	1,  // 73: device_api.DeviceService.UpdateTubeCount:output_type -> device_api.Response
	1,  // 74: device_api.DeviceService.DeleteTubeCount:output_type -> device_api.Response
	25, // 75: device_api.DeviceService.GetFinningFactor:output_type -> device_api.FinningFactorResponse
	0,  // 76: device_api.DeviceService.CreateFinningFactor:output_type -> device_api.IdResponse
	1,  // 77: device_api.DeviceService.CreateFewFinningFactor:output_type -> device_api.Response
	1,  // 78: device_api.DeviceService.UpdateFinningFactor:output_type -> device_api.Response
	1,  // 79: device_api.DeviceService.DeleteFinningFactor:output_type -> device_api.Response
	31, // 80: device_api.DeviceService.GetSectionExecution:output_type -> device_api.SectionExecutionResponse
	0,  // 81: device_api.DeviceService.CreateSectionExecution:output_type -> device_api.IdResponse
	1,  // 82: device_api.DeviceService.CreateFewSectionExecution:output_type -> device_api.Response
	1,  // 83: device_api.DeviceService.UpdateSectionExecution:output_type -> device_api.Response
	1,  // 84: device_api.DeviceService.DeleteSectionExecution:output_type -> device_api.Response
	37, // 85: device_api.DeviceService.GetTubeLength:output_type -> device_api.TubeLengthResponse
	0,  // 86: device_api.DeviceService.CreateTubeLength:output_type -> device_api.IdResponse
	1,  // 87: device_api.DeviceService.CreateFewTubeLength:output_type -> device_api.Response
	1,  // 88: device_api.DeviceService.UpdateTubeLength:output_type -> device_api.Response
	1,  // 89: device_api.DeviceService.DeleteTubeLength:output_type -> device_api.Response
	43, // 90: device_api.DeviceService.GetNumberOfMoves:output_type -> device_api.NumberOfMovesResponse
	0,  // 91: device_api.DeviceService.CreateNumberOfMoves:output_type -> device_api.IdResponse
	1,  // 92: device_api.DeviceService.CreateFewNumberOfMoves:output_type -> device_api.Response
	1,  // 93: device_api.DeviceService.UpdateNumberOfMoves:output_type -> device_api.Response
	1,  // 94: device_api.DeviceService.DeleteNumberOfMoves:output_type -> device_api.Response
	51, // 95: device_api.DeviceService.GetNameGasket:output_type -> device_api.NameGasketResponse
	53, // 96: device_api.DeviceService.GetFullNameGasket:output_type -> device_api.FullNameGasketResponse
	52, // 97: device_api.DeviceService.getNameGasketSize:output_type -> device_api.NameGasketSizeResponse
	0,  // 98: device_api.DeviceService.CreateNameGasket:output_type -> device_api.IdResponse
	1,  // 99: device_api.DeviceService.CreateFewNameGasket:output_type -> device_api.Response
	1,  // 100: device_api.DeviceService.UpdateNameGasket:output_type -> device_api.Response
	1,  // 101: device_api.DeviceService.DeleteNameGasket:output_type -> device_api.Response
	60, // [60:102] is the sub-list for method output_type
	18, // [18:60] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_moment_device_api_proto_init() }
func file_moment_device_api_proto_init() {
	if File_moment_device_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_moment_device_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPressureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePressureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewPressureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePressureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePressureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PressureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTubeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTubeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewTubeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTubeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTubeCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TubeCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFinningFactorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFinningFactorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewFinningFactorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFinningFactorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFinningFactorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinningFactorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSectionExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSectionExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewSectionExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSectionExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSectionExecutionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTubeLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTubeLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewTubeLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTubeLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTubeLengthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TubeLengthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNumberOfMovesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNumberOfMovesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewNumberOfMovesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNumberOfMovesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNumberOfMovesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumberOfMovesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFullNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNameGasketSizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFewNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNameGasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameGasketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameGasketSizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_moment_device_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullNameGasketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_moment_device_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moment_device_api_proto_goTypes,
		DependencyIndexes: file_moment_device_api_proto_depIdxs,
		MessageInfos:      file_moment_device_api_proto_msgTypes,
	}.Build()
	File_moment_device_api_proto = out.File
	file_moment_device_api_proto_rawDesc = nil
	file_moment_device_api_proto_goTypes = nil
	file_moment_device_api_proto_depIdxs = nil
}
