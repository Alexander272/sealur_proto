// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: pro_api/pro.proto

package pro_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProServiceClient is the client API for ProService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProServiceClient interface {
	// common -----------------------------------------------------------------------
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error)
	CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error)
	CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error)
	CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error)
	CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error)
	CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateBasis(ctx context.Context, in *UpdateAddBasisRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdatePObturator(ctx context.Context, in *UpdateAddPObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	UpdateSealant(ctx context.Context, in *UpdateAddSealantRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	//Size Service ----------------------------------------------------------------
	GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error)
	CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	CreateManySizes(ctx context.Context, in *CreateSizesRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error)
	CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error)
	CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error)
	CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTGm Image Service ----------------------------------------------------------------
	GetPutgmImage(ctx context.Context, in *GetPutgmImageRequest, opts ...grpc.CallOption) (*PutgmImageResponse, error)
	CreatePutgmImage(ctx context.Context, in *CreatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgmImage(ctx context.Context, in *UpdatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgmImage(ctx context.Context, in *DeletePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// PUTGm Service ----------------------------------------------------------------
	GetPutgm(ctx context.Context, in *GetPutgmRequest, opts ...grpc.CallOption) (*PutgmResponse, error)
	CreatePutgm(ctx context.Context, in *CreatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePutgm(ctx context.Context, in *UpdatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeletePutgm(ctx context.Context, in *DeletePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error)
	// Interview Service ----------------------------------------------------------------
	// Materials
	GetMaterials(ctx context.Context, in *GetMaterialsRequest, opts ...grpc.CallOption) (*MaterialsResponse, error)
	CreateMaterials(ctx context.Context, in *CreateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateMaterials(ctx context.Context, in *UpdateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteMaterials(ctx context.Context, in *DeleteMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	//Bolt Materials
	GetBoltMaterials(ctx context.Context, in *GetBoltMaterialsRequest, opts ...grpc.CallOption) (*BoltMaterialsResponse, error)
	CreateBoltMaterials(ctx context.Context, in *CreateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateBoltMaterials(ctx context.Context, in *UpdateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteBoltMaterials(ctx context.Context, in *DeleteBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error)
	//Size
	GetSizeInt(ctx context.Context, in *GetSizesIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error)
	GetAllSizeInt(ctx context.Context, in *GetAllSizeIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error)
	CreateSizeInt(ctx context.Context, in *CreateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	CreateManySizesInt(ctx context.Context, in *CreateSizesIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdateSizeInt(ctx context.Context, in *UpdateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteSizeInt(ctx context.Context, in *DeleteSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteAllSizeInt(ctx context.Context, in *DeleteAllSizeIntRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	//Interview
	SendInterview(ctx context.Context, in *SendInterviewRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	// Order Service --------------------------------------------------------------------
	GetAllOrders(ctx context.Context, in *GetAllOrdersRequest, opts ...grpc.CallOption) (*OrderResponse, error)
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*IdResponse, error)
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*IdResponse, error)
	SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (ProService_SaveOrderClient, error)
	SendOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	CopyOrder(ctx context.Context, in *CopyOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	GetPositions(ctx context.Context, in *GetPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error)
	GetCurPositions(ctx context.Context, in *GetCurPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error)
	AddPosition(ctx context.Context, in *AddPositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
	CopyPosition(ctx context.Context, in *CopyPositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
	UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
	RemovePosition(ctx context.Context, in *RemovePositionRequest, opts ...grpc.CallOption) (*IdResponse, error)
}

type proServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProServiceClient(cc grpc.ClientConnInterface) ProServiceClient {
	return &proServiceClient{cc}
}

func (c *proServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllFlanges(ctx context.Context, in *GetAllFlangeRequest, opts ...grpc.CallOption) (*FlangeResponse, error) {
	out := new(FlangeResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllFlanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateFlange(ctx context.Context, in *CreateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateFlange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFlange(ctx context.Context, in *UpdateFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateFlange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteFlange(ctx context.Context, in *DeleteFlangeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteFlange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllStands(ctx context.Context, in *GetStandsRequest, opts ...grpc.CallOption) (*StandResponse, error) {
	out := new(StandResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllStands", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStand(ctx context.Context, in *CreateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateStand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStand(ctx context.Context, in *UpdateStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateStand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStand(ctx context.Context, in *DeleteStandRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteStand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetStFl(ctx context.Context, in *GetStFlRequest, opts ...grpc.CallOption) (*StFlResponse, error) {
	out := new(StFlResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetStFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateStFl(ctx context.Context, in *CreateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateStFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateStFl(ctx context.Context, in *UpdateStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateStFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteStFl(ctx context.Context, in *DeleteStFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteStFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetTypeFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllTypeFl(ctx context.Context, in *GetTypeFlRequest, opts ...grpc.CallOption) (*TypeFlResponse, error) {
	out := new(TypeFlResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllTypeFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateTypeFl(ctx context.Context, in *CreateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateTypeFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTypeFl(ctx context.Context, in *UpdateTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateTypeFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteTypeFl(ctx context.Context, in *DeleteTypeFlRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteTypeFl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllAdditional(ctx context.Context, in *GetAllAddRequest, opts ...grpc.CallOption) (*AdditionalResponse, error) {
	out := new(AdditionalResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllAdditional", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateAdditional(ctx context.Context, in *CreateAddRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateAdditional", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMat(ctx context.Context, in *UpdateAddMatRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateMat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMod(ctx context.Context, in *UpdateAddModRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateMod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateTemp(ctx context.Context, in *UpdateAddTemRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateTemp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMoun(ctx context.Context, in *UpdateAddMounRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateMoun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateGrap(ctx context.Context, in *UpdateAddGrapRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateGrap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateFillers(ctx context.Context, in *UpdateAddFillersRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateFillers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateCoating(ctx context.Context, in *UpdateAddCoatingRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateCoating", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateConstruction(ctx context.Context, in *UpdateAddConstructionRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateConstruction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateObturator(ctx context.Context, in *UpdateAddObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateObturator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateBasis(ctx context.Context, in *UpdateAddBasisRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateBasis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePObturator(ctx context.Context, in *UpdateAddPObturatorRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePObturator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSealant(ctx context.Context, in *UpdateAddSealantRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateSealant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetSizes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllSizes(ctx context.Context, in *GetSizesRequest, opts ...grpc.CallOption) (*SizeResponse, error) {
	out := new(SizeResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllSizes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSize(ctx context.Context, in *CreateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateManySizes(ctx context.Context, in *CreateSizesRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateManySizes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSize(ctx context.Context, in *UpdateSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSize(ctx context.Context, in *DeleteSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteAllSize(ctx context.Context, in *DeleteAllSizeRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteAllSize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSNP(ctx context.Context, in *GetSNPRequest, opts ...grpc.CallOption) (*SNPResponse, error) {
	out := new(SNPResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetSNP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSNP(ctx context.Context, in *CreateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateSNP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSNP(ctx context.Context, in *UpdateSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateSNP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSNP(ctx context.Context, in *DeleteSNPRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteSNP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgImage(ctx context.Context, in *GetPutgImageRequest, opts ...grpc.CallOption) (*PutgImageResponse, error) {
	out := new(PutgImageResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetPutgImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgImage(ctx context.Context, in *CreatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreatePutgImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgImage(ctx context.Context, in *UpdatePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePutgImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgImage(ctx context.Context, in *DeletePutgImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeletePutgImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutg(ctx context.Context, in *GetPutgRequest, opts ...grpc.CallOption) (*PutgResponse, error) {
	out := new(PutgResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetPutg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutg(ctx context.Context, in *CreatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreatePutg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutg(ctx context.Context, in *UpdatePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePutg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutg(ctx context.Context, in *DeletePutgRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeletePutg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgmImage(ctx context.Context, in *GetPutgmImageRequest, opts ...grpc.CallOption) (*PutgmImageResponse, error) {
	out := new(PutgmImageResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetPutgmImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgmImage(ctx context.Context, in *CreatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreatePutgmImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgmImage(ctx context.Context, in *UpdatePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePutgmImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgmImage(ctx context.Context, in *DeletePutgmImageRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeletePutgmImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPutgm(ctx context.Context, in *GetPutgmRequest, opts ...grpc.CallOption) (*PutgmResponse, error) {
	out := new(PutgmResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetPutgm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreatePutgm(ctx context.Context, in *CreatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreatePutgm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePutgm(ctx context.Context, in *UpdatePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePutgm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeletePutgm(ctx context.Context, in *DeletePutgmRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeletePutgm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetMaterials(ctx context.Context, in *GetMaterialsRequest, opts ...grpc.CallOption) (*MaterialsResponse, error) {
	out := new(MaterialsResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateMaterials(ctx context.Context, in *CreateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateMaterials(ctx context.Context, in *UpdateMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteMaterials(ctx context.Context, in *DeleteMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetBoltMaterials(ctx context.Context, in *GetBoltMaterialsRequest, opts ...grpc.CallOption) (*BoltMaterialsResponse, error) {
	out := new(BoltMaterialsResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetBoltMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateBoltMaterials(ctx context.Context, in *CreateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateBoltMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateBoltMaterials(ctx context.Context, in *UpdateBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateBoltMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteBoltMaterials(ctx context.Context, in *DeleteBoltMaterialsRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteBoltMaterials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetSizeInt(ctx context.Context, in *GetSizesIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error) {
	out := new(SizeIntResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllSizeInt(ctx context.Context, in *GetAllSizeIntRequest, opts ...grpc.CallOption) (*SizeIntResponse, error) {
	out := new(SizeIntResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateSizeInt(ctx context.Context, in *CreateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateManySizesInt(ctx context.Context, in *CreateSizesIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateManySizesInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdateSizeInt(ctx context.Context, in *UpdateSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdateSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteSizeInt(ctx context.Context, in *DeleteSizeIntRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteAllSizeInt(ctx context.Context, in *DeleteAllSizeIntRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteAllSizeInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) SendInterview(ctx context.Context, in *SendInterviewRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/SendInterview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetAllOrders(ctx context.Context, in *GetAllOrdersRequest, opts ...grpc.CallOption) (*OrderResponse, error) {
	out := new(OrderResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetAllOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/DeleteOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) SaveOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (ProService_SaveOrderClient, error) {
	stream, err := c.cc.NewStream(ctx, &ProService_ServiceDesc.Streams[0], "/pro_api.ProService/SaveOrder", opts...)
	if err != nil {
		return nil, err
	}
	x := &proServiceSaveOrderClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProService_SaveOrderClient interface {
	Recv() (*FileDownloadResponse, error)
	grpc.ClientStream
}

type proServiceSaveOrderClient struct {
	grpc.ClientStream
}

func (x *proServiceSaveOrderClient) Recv() (*FileDownloadResponse, error) {
	m := new(FileDownloadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proServiceClient) SendOrder(ctx context.Context, in *SaveOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/SendOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CopyOrder(ctx context.Context, in *CopyOrderRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CopyOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetPositions(ctx context.Context, in *GetPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error) {
	out := new(OrderPositionResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetPositions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) GetCurPositions(ctx context.Context, in *GetCurPositionsRequest, opts ...grpc.CallOption) (*OrderPositionResponse, error) {
	out := new(OrderPositionResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/GetCurPositions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) AddPosition(ctx context.Context, in *AddPositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/AddPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) CopyPosition(ctx context.Context, in *CopyPositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/CopyPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) UpdatePosition(ctx context.Context, in *UpdatePositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/UpdatePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proServiceClient) RemovePosition(ctx context.Context, in *RemovePositionRequest, opts ...grpc.CallOption) (*IdResponse, error) {
	out := new(IdResponse)
	err := c.cc.Invoke(ctx, "/pro_api.ProService/RemovePosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProServiceServer is the server API for ProService service.
// All implementations must embed UnimplementedProServiceServer
// for forward compatibility
type ProServiceServer interface {
	// common -----------------------------------------------------------------------
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Flange Service ----------------------------------------------------------------
	GetAllFlanges(context.Context, *GetAllFlangeRequest) (*FlangeResponse, error)
	CreateFlange(context.Context, *CreateFlangeRequest) (*IdResponse, error)
	UpdateFlange(context.Context, *UpdateFlangeRequest) (*IdResponse, error)
	DeleteFlange(context.Context, *DeleteFlangeRequest) (*IdResponse, error)
	// Stand Service ----------------------------------------------------------------
	GetAllStands(context.Context, *GetStandsRequest) (*StandResponse, error)
	CreateStand(context.Context, *CreateStandRequest) (*IdResponse, error)
	UpdateStand(context.Context, *UpdateStandRequest) (*IdResponse, error)
	DeleteStand(context.Context, *DeleteStandRequest) (*IdResponse, error)
	// St_Fl Service ----------------------------------------------------------------
	GetStFl(context.Context, *GetStFlRequest) (*StFlResponse, error)
	CreateStFl(context.Context, *CreateStFlRequest) (*IdResponse, error)
	UpdateStFl(context.Context, *UpdateStFlRequest) (*IdResponse, error)
	DeleteStFl(context.Context, *DeleteStFlRequest) (*IdResponse, error)
	// Flange Type Service ----------------------------------------------------------------
	GetTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	GetAllTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error)
	CreateTypeFl(context.Context, *CreateTypeFlRequest) (*IdResponse, error)
	UpdateTypeFl(context.Context, *UpdateTypeFlRequest) (*IdResponse, error)
	DeleteTypeFl(context.Context, *DeleteTypeFlRequest) (*IdResponse, error)
	// Additional Service ----------------------------------------------------------------
	GetAllAdditional(context.Context, *GetAllAddRequest) (*AdditionalResponse, error)
	CreateAdditional(context.Context, *CreateAddRequest) (*SuccessResponse, error)
	UpdateMat(context.Context, *UpdateAddMatRequest) (*SuccessResponse, error)
	UpdateMod(context.Context, *UpdateAddModRequest) (*SuccessResponse, error)
	UpdateTemp(context.Context, *UpdateAddTemRequest) (*SuccessResponse, error)
	UpdateMoun(context.Context, *UpdateAddMounRequest) (*SuccessResponse, error)
	UpdateGrap(context.Context, *UpdateAddGrapRequest) (*SuccessResponse, error)
	UpdateFillers(context.Context, *UpdateAddFillersRequest) (*SuccessResponse, error)
	UpdateCoating(context.Context, *UpdateAddCoatingRequest) (*SuccessResponse, error)
	UpdateConstruction(context.Context, *UpdateAddConstructionRequest) (*SuccessResponse, error)
	UpdateObturator(context.Context, *UpdateAddObturatorRequest) (*SuccessResponse, error)
	UpdateBasis(context.Context, *UpdateAddBasisRequest) (*SuccessResponse, error)
	UpdatePObturator(context.Context, *UpdateAddPObturatorRequest) (*SuccessResponse, error)
	UpdateSealant(context.Context, *UpdateAddSealantRequest) (*SuccessResponse, error)
	//Size Service ----------------------------------------------------------------
	GetSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	GetAllSizes(context.Context, *GetSizesRequest) (*SizeResponse, error)
	CreateSize(context.Context, *CreateSizeRequest) (*IdResponse, error)
	CreateManySizes(context.Context, *CreateSizesRequest) (*IdResponse, error)
	UpdateSize(context.Context, *UpdateSizeRequest) (*IdResponse, error)
	DeleteSize(context.Context, *DeleteSizeRequest) (*IdResponse, error)
	DeleteAllSize(context.Context, *DeleteAllSizeRequest) (*IdResponse, error)
	// SNP Service ----------------------------------------------------------------
	GetSNP(context.Context, *GetSNPRequest) (*SNPResponse, error)
	CreateSNP(context.Context, *CreateSNPRequest) (*IdResponse, error)
	UpdateSNP(context.Context, *UpdateSNPRequest) (*IdResponse, error)
	DeleteSNP(context.Context, *DeleteSNPRequest) (*IdResponse, error)
	// PUTG Image Service ----------------------------------------------------------------
	GetPutgImage(context.Context, *GetPutgImageRequest) (*PutgImageResponse, error)
	CreatePutgImage(context.Context, *CreatePutgImageRequest) (*IdResponse, error)
	UpdatePutgImage(context.Context, *UpdatePutgImageRequest) (*IdResponse, error)
	DeletePutgImage(context.Context, *DeletePutgImageRequest) (*IdResponse, error)
	// PUTG Service ----------------------------------------------------------------
	GetPutg(context.Context, *GetPutgRequest) (*PutgResponse, error)
	CreatePutg(context.Context, *CreatePutgRequest) (*IdResponse, error)
	UpdatePutg(context.Context, *UpdatePutgRequest) (*IdResponse, error)
	DeletePutg(context.Context, *DeletePutgRequest) (*IdResponse, error)
	// PUTGm Image Service ----------------------------------------------------------------
	GetPutgmImage(context.Context, *GetPutgmImageRequest) (*PutgmImageResponse, error)
	CreatePutgmImage(context.Context, *CreatePutgmImageRequest) (*IdResponse, error)
	UpdatePutgmImage(context.Context, *UpdatePutgmImageRequest) (*IdResponse, error)
	DeletePutgmImage(context.Context, *DeletePutgmImageRequest) (*IdResponse, error)
	// PUTGm Service ----------------------------------------------------------------
	GetPutgm(context.Context, *GetPutgmRequest) (*PutgmResponse, error)
	CreatePutgm(context.Context, *CreatePutgmRequest) (*IdResponse, error)
	UpdatePutgm(context.Context, *UpdatePutgmRequest) (*IdResponse, error)
	DeletePutgm(context.Context, *DeletePutgmRequest) (*IdResponse, error)
	// Interview Service ----------------------------------------------------------------
	// Materials
	GetMaterials(context.Context, *GetMaterialsRequest) (*MaterialsResponse, error)
	CreateMaterials(context.Context, *CreateMaterialsRequest) (*IdResponse, error)
	UpdateMaterials(context.Context, *UpdateMaterialsRequest) (*IdResponse, error)
	DeleteMaterials(context.Context, *DeleteMaterialsRequest) (*IdResponse, error)
	//Bolt Materials
	GetBoltMaterials(context.Context, *GetBoltMaterialsRequest) (*BoltMaterialsResponse, error)
	CreateBoltMaterials(context.Context, *CreateBoltMaterialsRequest) (*IdResponse, error)
	UpdateBoltMaterials(context.Context, *UpdateBoltMaterialsRequest) (*IdResponse, error)
	DeleteBoltMaterials(context.Context, *DeleteBoltMaterialsRequest) (*IdResponse, error)
	//Size
	GetSizeInt(context.Context, *GetSizesIntRequest) (*SizeIntResponse, error)
	GetAllSizeInt(context.Context, *GetAllSizeIntRequest) (*SizeIntResponse, error)
	CreateSizeInt(context.Context, *CreateSizeIntRequest) (*IdResponse, error)
	CreateManySizesInt(context.Context, *CreateSizesIntRequest) (*IdResponse, error)
	UpdateSizeInt(context.Context, *UpdateSizeIntRequest) (*IdResponse, error)
	DeleteSizeInt(context.Context, *DeleteSizeIntRequest) (*IdResponse, error)
	DeleteAllSizeInt(context.Context, *DeleteAllSizeIntRequest) (*SuccessResponse, error)
	//Interview
	SendInterview(context.Context, *SendInterviewRequest) (*SuccessResponse, error)
	// Order Service --------------------------------------------------------------------
	GetAllOrders(context.Context, *GetAllOrdersRequest) (*OrderResponse, error)
	CreateOrder(context.Context, *CreateOrderRequest) (*IdResponse, error)
	DeleteOrder(context.Context, *DeleteOrderRequest) (*IdResponse, error)
	SaveOrder(*SaveOrderRequest, ProService_SaveOrderServer) error
	SendOrder(context.Context, *SaveOrderRequest) (*SuccessResponse, error)
	CopyOrder(context.Context, *CopyOrderRequest) (*SuccessResponse, error)
	GetPositions(context.Context, *GetPositionsRequest) (*OrderPositionResponse, error)
	GetCurPositions(context.Context, *GetCurPositionsRequest) (*OrderPositionResponse, error)
	AddPosition(context.Context, *AddPositionRequest) (*IdResponse, error)
	CopyPosition(context.Context, *CopyPositionRequest) (*IdResponse, error)
	UpdatePosition(context.Context, *UpdatePositionRequest) (*IdResponse, error)
	RemovePosition(context.Context, *RemovePositionRequest) (*IdResponse, error)
	mustEmbedUnimplementedProServiceServer()
}

// UnimplementedProServiceServer must be embedded to have forward compatible implementations.
type UnimplementedProServiceServer struct {
}

func (UnimplementedProServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedProServiceServer) GetAllFlanges(context.Context, *GetAllFlangeRequest) (*FlangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllFlanges not implemented")
}
func (UnimplementedProServiceServer) CreateFlange(context.Context, *CreateFlangeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlange not implemented")
}
func (UnimplementedProServiceServer) UpdateFlange(context.Context, *UpdateFlangeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFlange not implemented")
}
func (UnimplementedProServiceServer) DeleteFlange(context.Context, *DeleteFlangeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFlange not implemented")
}
func (UnimplementedProServiceServer) GetAllStands(context.Context, *GetStandsRequest) (*StandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllStands not implemented")
}
func (UnimplementedProServiceServer) CreateStand(context.Context, *CreateStandRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStand not implemented")
}
func (UnimplementedProServiceServer) UpdateStand(context.Context, *UpdateStandRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStand not implemented")
}
func (UnimplementedProServiceServer) DeleteStand(context.Context, *DeleteStandRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStand not implemented")
}
func (UnimplementedProServiceServer) GetStFl(context.Context, *GetStFlRequest) (*StFlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStFl not implemented")
}
func (UnimplementedProServiceServer) CreateStFl(context.Context, *CreateStFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStFl not implemented")
}
func (UnimplementedProServiceServer) UpdateStFl(context.Context, *UpdateStFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStFl not implemented")
}
func (UnimplementedProServiceServer) DeleteStFl(context.Context, *DeleteStFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStFl not implemented")
}
func (UnimplementedProServiceServer) GetTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTypeFl not implemented")
}
func (UnimplementedProServiceServer) GetAllTypeFl(context.Context, *GetTypeFlRequest) (*TypeFlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTypeFl not implemented")
}
func (UnimplementedProServiceServer) CreateTypeFl(context.Context, *CreateTypeFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTypeFl not implemented")
}
func (UnimplementedProServiceServer) UpdateTypeFl(context.Context, *UpdateTypeFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTypeFl not implemented")
}
func (UnimplementedProServiceServer) DeleteTypeFl(context.Context, *DeleteTypeFlRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTypeFl not implemented")
}
func (UnimplementedProServiceServer) GetAllAdditional(context.Context, *GetAllAddRequest) (*AdditionalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllAdditional not implemented")
}
func (UnimplementedProServiceServer) CreateAdditional(context.Context, *CreateAddRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdditional not implemented")
}
func (UnimplementedProServiceServer) UpdateMat(context.Context, *UpdateAddMatRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMat not implemented")
}
func (UnimplementedProServiceServer) UpdateMod(context.Context, *UpdateAddModRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMod not implemented")
}
func (UnimplementedProServiceServer) UpdateTemp(context.Context, *UpdateAddTemRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTemp not implemented")
}
func (UnimplementedProServiceServer) UpdateMoun(context.Context, *UpdateAddMounRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMoun not implemented")
}
func (UnimplementedProServiceServer) UpdateGrap(context.Context, *UpdateAddGrapRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGrap not implemented")
}
func (UnimplementedProServiceServer) UpdateFillers(context.Context, *UpdateAddFillersRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFillers not implemented")
}
func (UnimplementedProServiceServer) UpdateCoating(context.Context, *UpdateAddCoatingRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCoating not implemented")
}
func (UnimplementedProServiceServer) UpdateConstruction(context.Context, *UpdateAddConstructionRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConstruction not implemented")
}
func (UnimplementedProServiceServer) UpdateObturator(context.Context, *UpdateAddObturatorRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateObturator not implemented")
}
func (UnimplementedProServiceServer) UpdateBasis(context.Context, *UpdateAddBasisRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBasis not implemented")
}
func (UnimplementedProServiceServer) UpdatePObturator(context.Context, *UpdateAddPObturatorRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePObturator not implemented")
}
func (UnimplementedProServiceServer) UpdateSealant(context.Context, *UpdateAddSealantRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSealant not implemented")
}
func (UnimplementedProServiceServer) GetSizes(context.Context, *GetSizesRequest) (*SizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSizes not implemented")
}
func (UnimplementedProServiceServer) GetAllSizes(context.Context, *GetSizesRequest) (*SizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSizes not implemented")
}
func (UnimplementedProServiceServer) CreateSize(context.Context, *CreateSizeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSize not implemented")
}
func (UnimplementedProServiceServer) CreateManySizes(context.Context, *CreateSizesRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateManySizes not implemented")
}
func (UnimplementedProServiceServer) UpdateSize(context.Context, *UpdateSizeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSize not implemented")
}
func (UnimplementedProServiceServer) DeleteSize(context.Context, *DeleteSizeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSize not implemented")
}
func (UnimplementedProServiceServer) DeleteAllSize(context.Context, *DeleteAllSizeRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllSize not implemented")
}
func (UnimplementedProServiceServer) GetSNP(context.Context, *GetSNPRequest) (*SNPResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSNP not implemented")
}
func (UnimplementedProServiceServer) CreateSNP(context.Context, *CreateSNPRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSNP not implemented")
}
func (UnimplementedProServiceServer) UpdateSNP(context.Context, *UpdateSNPRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSNP not implemented")
}
func (UnimplementedProServiceServer) DeleteSNP(context.Context, *DeleteSNPRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSNP not implemented")
}
func (UnimplementedProServiceServer) GetPutgImage(context.Context, *GetPutgImageRequest) (*PutgImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPutgImage not implemented")
}
func (UnimplementedProServiceServer) CreatePutgImage(context.Context, *CreatePutgImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePutgImage not implemented")
}
func (UnimplementedProServiceServer) UpdatePutgImage(context.Context, *UpdatePutgImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePutgImage not implemented")
}
func (UnimplementedProServiceServer) DeletePutgImage(context.Context, *DeletePutgImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePutgImage not implemented")
}
func (UnimplementedProServiceServer) GetPutg(context.Context, *GetPutgRequest) (*PutgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPutg not implemented")
}
func (UnimplementedProServiceServer) CreatePutg(context.Context, *CreatePutgRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePutg not implemented")
}
func (UnimplementedProServiceServer) UpdatePutg(context.Context, *UpdatePutgRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePutg not implemented")
}
func (UnimplementedProServiceServer) DeletePutg(context.Context, *DeletePutgRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePutg not implemented")
}
func (UnimplementedProServiceServer) GetPutgmImage(context.Context, *GetPutgmImageRequest) (*PutgmImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPutgmImage not implemented")
}
func (UnimplementedProServiceServer) CreatePutgmImage(context.Context, *CreatePutgmImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePutgmImage not implemented")
}
func (UnimplementedProServiceServer) UpdatePutgmImage(context.Context, *UpdatePutgmImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePutgmImage not implemented")
}
func (UnimplementedProServiceServer) DeletePutgmImage(context.Context, *DeletePutgmImageRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePutgmImage not implemented")
}
func (UnimplementedProServiceServer) GetPutgm(context.Context, *GetPutgmRequest) (*PutgmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPutgm not implemented")
}
func (UnimplementedProServiceServer) CreatePutgm(context.Context, *CreatePutgmRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePutgm not implemented")
}
func (UnimplementedProServiceServer) UpdatePutgm(context.Context, *UpdatePutgmRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePutgm not implemented")
}
func (UnimplementedProServiceServer) DeletePutgm(context.Context, *DeletePutgmRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePutgm not implemented")
}
func (UnimplementedProServiceServer) GetMaterials(context.Context, *GetMaterialsRequest) (*MaterialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMaterials not implemented")
}
func (UnimplementedProServiceServer) CreateMaterials(context.Context, *CreateMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMaterials not implemented")
}
func (UnimplementedProServiceServer) UpdateMaterials(context.Context, *UpdateMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMaterials not implemented")
}
func (UnimplementedProServiceServer) DeleteMaterials(context.Context, *DeleteMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMaterials not implemented")
}
func (UnimplementedProServiceServer) GetBoltMaterials(context.Context, *GetBoltMaterialsRequest) (*BoltMaterialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBoltMaterials not implemented")
}
func (UnimplementedProServiceServer) CreateBoltMaterials(context.Context, *CreateBoltMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBoltMaterials not implemented")
}
func (UnimplementedProServiceServer) UpdateBoltMaterials(context.Context, *UpdateBoltMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBoltMaterials not implemented")
}
func (UnimplementedProServiceServer) DeleteBoltMaterials(context.Context, *DeleteBoltMaterialsRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBoltMaterials not implemented")
}
func (UnimplementedProServiceServer) GetSizeInt(context.Context, *GetSizesIntRequest) (*SizeIntResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSizeInt not implemented")
}
func (UnimplementedProServiceServer) GetAllSizeInt(context.Context, *GetAllSizeIntRequest) (*SizeIntResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllSizeInt not implemented")
}
func (UnimplementedProServiceServer) CreateSizeInt(context.Context, *CreateSizeIntRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSizeInt not implemented")
}
func (UnimplementedProServiceServer) CreateManySizesInt(context.Context, *CreateSizesIntRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateManySizesInt not implemented")
}
func (UnimplementedProServiceServer) UpdateSizeInt(context.Context, *UpdateSizeIntRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSizeInt not implemented")
}
func (UnimplementedProServiceServer) DeleteSizeInt(context.Context, *DeleteSizeIntRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSizeInt not implemented")
}
func (UnimplementedProServiceServer) DeleteAllSizeInt(context.Context, *DeleteAllSizeIntRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllSizeInt not implemented")
}
func (UnimplementedProServiceServer) SendInterview(context.Context, *SendInterviewRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendInterview not implemented")
}
func (UnimplementedProServiceServer) GetAllOrders(context.Context, *GetAllOrdersRequest) (*OrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllOrders not implemented")
}
func (UnimplementedProServiceServer) CreateOrder(context.Context, *CreateOrderRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (UnimplementedProServiceServer) DeleteOrder(context.Context, *DeleteOrderRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrder not implemented")
}
func (UnimplementedProServiceServer) SaveOrder(*SaveOrderRequest, ProService_SaveOrderServer) error {
	return status.Errorf(codes.Unimplemented, "method SaveOrder not implemented")
}
func (UnimplementedProServiceServer) SendOrder(context.Context, *SaveOrderRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendOrder not implemented")
}
func (UnimplementedProServiceServer) CopyOrder(context.Context, *CopyOrderRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyOrder not implemented")
}
func (UnimplementedProServiceServer) GetPositions(context.Context, *GetPositionsRequest) (*OrderPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPositions not implemented")
}
func (UnimplementedProServiceServer) GetCurPositions(context.Context, *GetCurPositionsRequest) (*OrderPositionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurPositions not implemented")
}
func (UnimplementedProServiceServer) AddPosition(context.Context, *AddPositionRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPosition not implemented")
}
func (UnimplementedProServiceServer) CopyPosition(context.Context, *CopyPositionRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyPosition not implemented")
}
func (UnimplementedProServiceServer) UpdatePosition(context.Context, *UpdatePositionRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePosition not implemented")
}
func (UnimplementedProServiceServer) RemovePosition(context.Context, *RemovePositionRequest) (*IdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePosition not implemented")
}
func (UnimplementedProServiceServer) mustEmbedUnimplementedProServiceServer() {}

// UnsafeProServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProServiceServer will
// result in compilation errors.
type UnsafeProServiceServer interface {
	mustEmbedUnimplementedProServiceServer()
}

func RegisterProServiceServer(s grpc.ServiceRegistrar, srv ProServiceServer) {
	s.RegisterService(&ProService_ServiceDesc, srv)
}

func _ProService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllFlanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllFlanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllFlanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllFlanges(ctx, req.(*GetAllFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateFlange(ctx, req.(*CreateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFlange(ctx, req.(*UpdateFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteFlange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFlangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteFlange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteFlange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteFlange(ctx, req.(*DeleteFlangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllStands_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllStands(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllStands",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllStands(ctx, req.(*GetStandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStand(ctx, req.(*CreateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStand(ctx, req.(*UpdateStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteStand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStand(ctx, req.(*DeleteStandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetStFl(ctx, req.(*GetStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateStFl(ctx, req.(*CreateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateStFl(ctx, req.(*UpdateStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteStFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteStFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteStFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteStFl(ctx, req.(*DeleteStFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllTypeFl(ctx, req.(*GetTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateTypeFl(ctx, req.(*CreateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTypeFl(ctx, req.(*UpdateTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteTypeFl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTypeFlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteTypeFl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteTypeFl(ctx, req.(*DeleteTypeFlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllAdditional(ctx, req.(*GetAllAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateAdditional_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateAdditional(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateAdditional",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateAdditional(ctx, req.(*CreateAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateMat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMat(ctx, req.(*UpdateAddMatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddModRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateMod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMod(ctx, req.(*UpdateAddModRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateTemp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddTemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateTemp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateTemp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateTemp(ctx, req.(*UpdateAddTemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMoun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddMounRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMoun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateMoun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMoun(ctx, req.(*UpdateAddMounRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateGrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddGrapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateGrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateGrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateGrap(ctx, req.(*UpdateAddGrapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateFillers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddFillersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateFillers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateFillers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateFillers(ctx, req.(*UpdateAddFillersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateCoating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddCoatingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateCoating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateCoating",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateCoating(ctx, req.(*UpdateAddCoatingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateConstruction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddConstructionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateConstruction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateConstruction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateConstruction(ctx, req.(*UpdateAddConstructionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateObturator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddObturatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateObturator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateObturator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateObturator(ctx, req.(*UpdateAddObturatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateBasis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddBasisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateBasis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateBasis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateBasis(ctx, req.(*UpdateAddBasisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePObturator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddPObturatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePObturator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePObturator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePObturator(ctx, req.(*UpdateAddPObturatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSealant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAddSealantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSealant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateSealant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSealant(ctx, req.(*UpdateAddSealantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllSizes(ctx, req.(*GetSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSize(ctx, req.(*CreateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateManySizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateManySizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateManySizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateManySizes(ctx, req.(*CreateSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSize(ctx, req.(*UpdateSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSize(ctx, req.(*DeleteSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteAllSize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteAllSize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteAllSize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteAllSize(ctx, req.(*DeleteAllSizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSNP(ctx, req.(*GetSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSNP(ctx, req.(*CreateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSNP(ctx, req.(*UpdateSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSNP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSNPRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSNP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteSNP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSNP(ctx, req.(*DeleteSNPRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetPutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgImage(ctx, req.(*GetPutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgImage(ctx, req.(*CreatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgImage(ctx, req.(*UpdatePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeletePutgImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgImage(ctx, req.(*DeletePutgImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetPutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutg(ctx, req.(*GetPutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutg(ctx, req.(*CreatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutg(ctx, req.(*UpdatePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeletePutg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutg(ctx, req.(*DeletePutgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetPutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgmImage(ctx, req.(*GetPutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreatePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgmImage(ctx, req.(*CreatePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgmImage(ctx, req.(*UpdatePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgmImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgmImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgmImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeletePutgmImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgmImage(ctx, req.(*DeletePutgmImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetPutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPutgm(ctx, req.(*GetPutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreatePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreatePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreatePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreatePutgm(ctx, req.(*CreatePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePutgm(ctx, req.(*UpdatePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeletePutgm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePutgmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeletePutgm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeletePutgm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeletePutgm(ctx, req.(*DeletePutgmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetMaterials(ctx, req.(*GetMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateMaterials(ctx, req.(*CreateMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateMaterials(ctx, req.(*UpdateMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteMaterials(ctx, req.(*DeleteMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetBoltMaterials(ctx, req.(*GetBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateBoltMaterials(ctx, req.(*CreateBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateBoltMaterials(ctx, req.(*UpdateBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteBoltMaterials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBoltMaterialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteBoltMaterials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteBoltMaterials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteBoltMaterials(ctx, req.(*DeleteBoltMaterialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSizesIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetSizeInt(ctx, req.(*GetSizesIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllSizeInt(ctx, req.(*GetAllSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateSizeInt(ctx, req.(*CreateSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateManySizesInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSizesIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateManySizesInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateManySizesInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateManySizesInt(ctx, req.(*CreateSizesIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdateSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdateSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdateSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdateSizeInt(ctx, req.(*UpdateSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteSizeInt(ctx, req.(*DeleteSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteAllSizeInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSizeIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteAllSizeInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteAllSizeInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteAllSizeInt(ctx, req.(*DeleteAllSizeIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_SendInterview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInterviewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).SendInterview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/SendInterview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).SendInterview(ctx, req.(*SendInterviewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetAllOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetAllOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetAllOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetAllOrders(ctx, req.(*GetAllOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_DeleteOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).DeleteOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/DeleteOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).DeleteOrder(ctx, req.(*DeleteOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_SaveOrder_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SaveOrderRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProServiceServer).SaveOrder(m, &proServiceSaveOrderServer{stream})
}

type ProService_SaveOrderServer interface {
	Send(*FileDownloadResponse) error
	grpc.ServerStream
}

type proServiceSaveOrderServer struct {
	grpc.ServerStream
}

func (x *proServiceSaveOrderServer) Send(m *FileDownloadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProService_SendOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).SendOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/SendOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).SendOrder(ctx, req.(*SaveOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CopyOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CopyOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CopyOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CopyOrder(ctx, req.(*CopyOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetPositions(ctx, req.(*GetPositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_GetCurPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCurPositionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).GetCurPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/GetCurPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).GetCurPositions(ctx, req.(*GetCurPositionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_AddPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).AddPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/AddPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).AddPosition(ctx, req.(*AddPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_CopyPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).CopyPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/CopyPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).CopyPosition(ctx, req.(*CopyPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_UpdatePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).UpdatePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/UpdatePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).UpdatePosition(ctx, req.(*UpdatePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProService_RemovePosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProServiceServer).RemovePosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pro_api.ProService/RemovePosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProServiceServer).RemovePosition(ctx, req.(*RemovePositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProService_ServiceDesc is the grpc.ServiceDesc for ProService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pro_api.ProService",
	HandlerType: (*ProServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ProService_Ping_Handler,
		},
		{
			MethodName: "GetAllFlanges",
			Handler:    _ProService_GetAllFlanges_Handler,
		},
		{
			MethodName: "CreateFlange",
			Handler:    _ProService_CreateFlange_Handler,
		},
		{
			MethodName: "UpdateFlange",
			Handler:    _ProService_UpdateFlange_Handler,
		},
		{
			MethodName: "DeleteFlange",
			Handler:    _ProService_DeleteFlange_Handler,
		},
		{
			MethodName: "GetAllStands",
			Handler:    _ProService_GetAllStands_Handler,
		},
		{
			MethodName: "CreateStand",
			Handler:    _ProService_CreateStand_Handler,
		},
		{
			MethodName: "UpdateStand",
			Handler:    _ProService_UpdateStand_Handler,
		},
		{
			MethodName: "DeleteStand",
			Handler:    _ProService_DeleteStand_Handler,
		},
		{
			MethodName: "GetStFl",
			Handler:    _ProService_GetStFl_Handler,
		},
		{
			MethodName: "CreateStFl",
			Handler:    _ProService_CreateStFl_Handler,
		},
		{
			MethodName: "UpdateStFl",
			Handler:    _ProService_UpdateStFl_Handler,
		},
		{
			MethodName: "DeleteStFl",
			Handler:    _ProService_DeleteStFl_Handler,
		},
		{
			MethodName: "GetTypeFl",
			Handler:    _ProService_GetTypeFl_Handler,
		},
		{
			MethodName: "GetAllTypeFl",
			Handler:    _ProService_GetAllTypeFl_Handler,
		},
		{
			MethodName: "CreateTypeFl",
			Handler:    _ProService_CreateTypeFl_Handler,
		},
		{
			MethodName: "UpdateTypeFl",
			Handler:    _ProService_UpdateTypeFl_Handler,
		},
		{
			MethodName: "DeleteTypeFl",
			Handler:    _ProService_DeleteTypeFl_Handler,
		},
		{
			MethodName: "GetAllAdditional",
			Handler:    _ProService_GetAllAdditional_Handler,
		},
		{
			MethodName: "CreateAdditional",
			Handler:    _ProService_CreateAdditional_Handler,
		},
		{
			MethodName: "UpdateMat",
			Handler:    _ProService_UpdateMat_Handler,
		},
		{
			MethodName: "UpdateMod",
			Handler:    _ProService_UpdateMod_Handler,
		},
		{
			MethodName: "UpdateTemp",
			Handler:    _ProService_UpdateTemp_Handler,
		},
		{
			MethodName: "UpdateMoun",
			Handler:    _ProService_UpdateMoun_Handler,
		},
		{
			MethodName: "UpdateGrap",
			Handler:    _ProService_UpdateGrap_Handler,
		},
		{
			MethodName: "UpdateFillers",
			Handler:    _ProService_UpdateFillers_Handler,
		},
		{
			MethodName: "UpdateCoating",
			Handler:    _ProService_UpdateCoating_Handler,
		},
		{
			MethodName: "UpdateConstruction",
			Handler:    _ProService_UpdateConstruction_Handler,
		},
		{
			MethodName: "UpdateObturator",
			Handler:    _ProService_UpdateObturator_Handler,
		},
		{
			MethodName: "UpdateBasis",
			Handler:    _ProService_UpdateBasis_Handler,
		},
		{
			MethodName: "UpdatePObturator",
			Handler:    _ProService_UpdatePObturator_Handler,
		},
		{
			MethodName: "UpdateSealant",
			Handler:    _ProService_UpdateSealant_Handler,
		},
		{
			MethodName: "GetSizes",
			Handler:    _ProService_GetSizes_Handler,
		},
		{
			MethodName: "GetAllSizes",
			Handler:    _ProService_GetAllSizes_Handler,
		},
		{
			MethodName: "CreateSize",
			Handler:    _ProService_CreateSize_Handler,
		},
		{
			MethodName: "CreateManySizes",
			Handler:    _ProService_CreateManySizes_Handler,
		},
		{
			MethodName: "UpdateSize",
			Handler:    _ProService_UpdateSize_Handler,
		},
		{
			MethodName: "DeleteSize",
			Handler:    _ProService_DeleteSize_Handler,
		},
		{
			MethodName: "DeleteAllSize",
			Handler:    _ProService_DeleteAllSize_Handler,
		},
		{
			MethodName: "GetSNP",
			Handler:    _ProService_GetSNP_Handler,
		},
		{
			MethodName: "CreateSNP",
			Handler:    _ProService_CreateSNP_Handler,
		},
		{
			MethodName: "UpdateSNP",
			Handler:    _ProService_UpdateSNP_Handler,
		},
		{
			MethodName: "DeleteSNP",
			Handler:    _ProService_DeleteSNP_Handler,
		},
		{
			MethodName: "GetPutgImage",
			Handler:    _ProService_GetPutgImage_Handler,
		},
		{
			MethodName: "CreatePutgImage",
			Handler:    _ProService_CreatePutgImage_Handler,
		},
		{
			MethodName: "UpdatePutgImage",
			Handler:    _ProService_UpdatePutgImage_Handler,
		},
		{
			MethodName: "DeletePutgImage",
			Handler:    _ProService_DeletePutgImage_Handler,
		},
		{
			MethodName: "GetPutg",
			Handler:    _ProService_GetPutg_Handler,
		},
		{
			MethodName: "CreatePutg",
			Handler:    _ProService_CreatePutg_Handler,
		},
		{
			MethodName: "UpdatePutg",
			Handler:    _ProService_UpdatePutg_Handler,
		},
		{
			MethodName: "DeletePutg",
			Handler:    _ProService_DeletePutg_Handler,
		},
		{
			MethodName: "GetPutgmImage",
			Handler:    _ProService_GetPutgmImage_Handler,
		},
		{
			MethodName: "CreatePutgmImage",
			Handler:    _ProService_CreatePutgmImage_Handler,
		},
		{
			MethodName: "UpdatePutgmImage",
			Handler:    _ProService_UpdatePutgmImage_Handler,
		},
		{
			MethodName: "DeletePutgmImage",
			Handler:    _ProService_DeletePutgmImage_Handler,
		},
		{
			MethodName: "GetPutgm",
			Handler:    _ProService_GetPutgm_Handler,
		},
		{
			MethodName: "CreatePutgm",
			Handler:    _ProService_CreatePutgm_Handler,
		},
		{
			MethodName: "UpdatePutgm",
			Handler:    _ProService_UpdatePutgm_Handler,
		},
		{
			MethodName: "DeletePutgm",
			Handler:    _ProService_DeletePutgm_Handler,
		},
		{
			MethodName: "GetMaterials",
			Handler:    _ProService_GetMaterials_Handler,
		},
		{
			MethodName: "CreateMaterials",
			Handler:    _ProService_CreateMaterials_Handler,
		},
		{
			MethodName: "UpdateMaterials",
			Handler:    _ProService_UpdateMaterials_Handler,
		},
		{
			MethodName: "DeleteMaterials",
			Handler:    _ProService_DeleteMaterials_Handler,
		},
		{
			MethodName: "GetBoltMaterials",
			Handler:    _ProService_GetBoltMaterials_Handler,
		},
		{
			MethodName: "CreateBoltMaterials",
			Handler:    _ProService_CreateBoltMaterials_Handler,
		},
		{
			MethodName: "UpdateBoltMaterials",
			Handler:    _ProService_UpdateBoltMaterials_Handler,
		},
		{
			MethodName: "DeleteBoltMaterials",
			Handler:    _ProService_DeleteBoltMaterials_Handler,
		},
		{
			MethodName: "GetSizeInt",
			Handler:    _ProService_GetSizeInt_Handler,
		},
		{
			MethodName: "GetAllSizeInt",
			Handler:    _ProService_GetAllSizeInt_Handler,
		},
		{
			MethodName: "CreateSizeInt",
			Handler:    _ProService_CreateSizeInt_Handler,
		},
		{
			MethodName: "CreateManySizesInt",
			Handler:    _ProService_CreateManySizesInt_Handler,
		},
		{
			MethodName: "UpdateSizeInt",
			Handler:    _ProService_UpdateSizeInt_Handler,
		},
		{
			MethodName: "DeleteSizeInt",
			Handler:    _ProService_DeleteSizeInt_Handler,
		},
		{
			MethodName: "DeleteAllSizeInt",
			Handler:    _ProService_DeleteAllSizeInt_Handler,
		},
		{
			MethodName: "SendInterview",
			Handler:    _ProService_SendInterview_Handler,
		},
		{
			MethodName: "GetAllOrders",
			Handler:    _ProService_GetAllOrders_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _ProService_CreateOrder_Handler,
		},
		{
			MethodName: "DeleteOrder",
			Handler:    _ProService_DeleteOrder_Handler,
		},
		{
			MethodName: "SendOrder",
			Handler:    _ProService_SendOrder_Handler,
		},
		{
			MethodName: "CopyOrder",
			Handler:    _ProService_CopyOrder_Handler,
		},
		{
			MethodName: "GetPositions",
			Handler:    _ProService_GetPositions_Handler,
		},
		{
			MethodName: "GetCurPositions",
			Handler:    _ProService_GetCurPositions_Handler,
		},
		{
			MethodName: "AddPosition",
			Handler:    _ProService_AddPosition_Handler,
		},
		{
			MethodName: "CopyPosition",
			Handler:    _ProService_CopyPosition_Handler,
		},
		{
			MethodName: "UpdatePosition",
			Handler:    _ProService_UpdatePosition_Handler,
		},
		{
			MethodName: "RemovePosition",
			Handler:    _ProService_RemovePosition_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SaveOrder",
			Handler:       _ProService_SaveOrder_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pro_api/pro.proto",
}
